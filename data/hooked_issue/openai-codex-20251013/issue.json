{
  "repo": "openai/codex",
  "crawl_time": "2025-10-13T23:28:02.382506",
  "total_count": 173,
  "issues": [
    {
      "number": 9,
      "title": "API Key Security Feature Requests",
      "url": "https://github.com/openai/codex/issues/9",
      "state": "closed",
      "created_at": "2025-04-16T17:31:15Z",
      "closed_at": "2025-08-07T17:49:36Z",
      "body": "When you start codex it asks you to put your API key in an environment variable:\n\n```\nMissing OpenAI API key.\n\nSet the environment variable OPENAI_API_KEY and re-run this command.\nYou can create a key here: https://platform.openai.com/account/api-keys\n```\n\nIt would be preferable if it just prompted you for a key and it stored it securely, i.e., in the OS keystore (like the macOS keychain). It would also be better to use a bespoke key for codex rather than just a generic \"openai API key\". \n\nIt would also be nice if it just opened the browser to a page where you authenticate and generated a key for you (Claude Code does this). ",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 769,
          "state": "closed",
          "title": "Adds Azure OpenAI support",
          "url": "https://github.com/openai/codex/pull/769",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 903,
          "state": "closed",
          "title": "Add codespell support (config, workflow to detect/not fix) and make it fix some typos",
          "url": "https://github.com/openai/codex/pull/903",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 904,
          "state": "closed",
          "title": "fix: navigate initialization phase before tools/list request in MCP client",
          "url": "https://github.com/openai/codex/pull/904",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 905,
          "state": "closed",
          "title": "fix: use \"thinking\" instead of \"codex reasoning\" as the label for reasoning events in the TUI",
          "url": "https://github.com/openai/codex/pull/905",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 908,
          "state": "closed",
          "title": "fix: agent instructions were not being included when ~/.codex/instructions.md was empty",
          "url": "https://github.com/openai/codex/pull/908",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 909,
          "state": "closed",
          "title": "fix: always load version from package.json at runtime",
          "url": "https://github.com/openai/codex/pull/909",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 911,
          "state": "closed",
          "title": "fix: add support for fileOpener in config.json",
          "url": "https://github.com/openai/codex/pull/911",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 912,
          "state": "closed",
          "title": "Add sessions history viewer",
          "url": "https://github.com/openai/codex/pull/912",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 916,
          "state": "closed",
          "title": "fix: patch in #366 and #367 for marked-terminal",
          "url": "https://github.com/openai/codex/pull/916",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 918,
          "state": "closed",
          "title": "fix: remember to set lastIndex = 0 on shared RegExp",
          "url": "https://github.com/openai/codex/pull/918",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 919,
          "state": "closed",
          "title": "fix: tweak the label for citations for better rendering",
          "url": "https://github.com/openai/codex/pull/919",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 920,
          "state": "closed",
          "title": "feat: auto-approve nl and support piping to sed",
          "url": "https://github.com/openai/codex/pull/920",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 921,
          "state": "closed",
          "title": "feat: introduce --profile for Rust CLI",
          "url": "https://github.com/openai/codex/pull/921",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 922,
          "state": "closed",
          "title": "fix: tighten up some logic around session timestamps and ids",
          "url": "https://github.com/openai/codex/pull/922",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 923,
          "state": "closed",
          "title": "fix: test_dev_null_write() was not using echo as intended",
          "url": "https://github.com/openai/codex/pull/923",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 925,
          "state": "closed",
          "title": "fix: change EventMsg enum so every variant takes a single struct",
          "url": "https://github.com/openai/codex/pull/925",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 926,
          "state": "closed",
          "title": "feat: Ctrl+J for newline in Rust TUI, default to one line of height",
          "url": "https://github.com/openai/codex/pull/926",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 927,
          "state": "closed",
          "title": "add: dynamic instructions",
          "url": "https://github.com/openai/codex/pull/927",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 928,
          "state": "closed",
          "title": "chore: move each view used in BottomPane into its own file",
          "url": "https://github.com/openai/codex/pull/928",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 930,
          "state": "closed",
          "title": "fix: gpt-4.1 apply_patch handling",
          "url": "https://github.com/openai/codex/pull/930",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 931,
          "state": "closed",
          "title": "fix: reasoning default to medium, show workdir when supplied",
          "url": "https://github.com/openai/codex/pull/931",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 932,
          "state": "closed",
          "title": "bump(version): 0.1.2505140839",
          "url": "https://github.com/openai/codex/pull/932",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 933,
          "state": "closed",
          "title": "fix: increase timeout for test_dev_null_write",
          "url": "https://github.com/openai/codex/pull/933",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 934,
          "state": "closed",
          "title": "feat: add mcp subcommand to CLI to run Codex as an MCP server",
          "url": "https://github.com/openai/codex/pull/934",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 935,
          "state": "closed",
          "title": "feat: add support for commands in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/935",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 936,
          "state": "closed",
          "title": "chore: handle all cases for EventMsg",
          "url": "https://github.com/openai/codex/pull/936",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 937,
          "state": "closed",
          "title": "fix: properly wrap lines in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/937",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 939,
          "state": "closed",
          "title": "feat: record messages from user in ~/.codex/history.jsonl",
          "url": "https://github.com/openai/codex/pull/939",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1324,
          "state": "closed",
          "title": "feat(ts): provider‑specific API‑key discovery and clearer Azure guidance",
          "url": "https://github.com/openai/codex/pull/1324",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 941,
          "state": "closed",
          "title": "chore: expose codex_home via Config",
          "url": "https://github.com/openai/codex/pull/941",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 942,
          "state": "closed",
          "title": "fix: apply patch issue when using different cwd",
          "url": "https://github.com/openai/codex/pull/942",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 947,
          "state": "closed",
          "title": "chore: pin Rust version to 1.86 and use io::Error::other to prepare for 1.87",
          "url": "https://github.com/openai/codex/pull/947",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 948,
          "state": "closed",
          "title": "chore: introduce AppEventSender to help fix clippy warnings and update to Rust 1.87",
          "url": "https://github.com/openai/codex/pull/948",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 951,
          "state": "closed",
          "title": "add: codex-mini-latest",
          "url": "https://github.com/openai/codex/pull/951",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 952,
          "state": "closed",
          "title": "chore: update exec crate to use std::time instead of chrono",
          "url": "https://github.com/openai/codex/pull/952",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 953,
          "state": "closed",
          "title": "bump(version): 0.1.2505160811 `codex-mini-latest`",
          "url": "https://github.com/openai/codex/pull/953",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 954,
          "state": "closed",
          "title": "Fix diff command for filenames with special characters",
          "url": "https://github.com/openai/codex/pull/954",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 957,
          "state": "closed",
          "title": "feat: add support for file_opener option in Rust, similiar to #911",
          "url": "https://github.com/openai/codex/pull/957",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 958,
          "state": "closed",
          "title": "fix: introduce ExtractHeredocError that implements PartialEq",
          "url": "https://github.com/openai/codex/pull/958",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 961,
          "state": "closed",
          "title": "feat: add support for OpenAI tool type, local_shell",
          "url": "https://github.com/openai/codex/pull/961",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 963,
          "state": "closed",
          "title": "add: sign in with chatgpt",
          "url": "https://github.com/openai/codex/pull/963",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 964,
          "state": "closed",
          "title": "Fix CLA link in workflow",
          "url": "https://github.com/openai/codex/pull/964",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 965,
          "state": "closed",
          "title": "chore: refactor handle_function_call() into smaller functions",
          "url": "https://github.com/openai/codex/pull/965",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 967,
          "state": "closed",
          "title": "bump(version): 0.1.2505161243",
          "url": "https://github.com/openai/codex/pull/967",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 968,
          "state": "closed",
          "title": "fix: remove file named \">\" in the codex-cli folder",
          "url": "https://github.com/openai/codex/pull/968",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 969,
          "state": "closed",
          "title": "fix: use text other than 'TODO' as test example",
          "url": "https://github.com/openai/codex/pull/969",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 970,
          "state": "closed",
          "title": "Remove unnecessary console log from test",
          "url": "https://github.com/openai/codex/pull/970",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 971,
          "state": "closed",
          "title": "feat: make it possible to toggle mouse mode in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/971",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 972,
          "state": "closed",
          "title": "fix: make codex-mini-latest the default model in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/972",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 974,
          "state": "closed",
          "title": "add: sign in with chatgpt credits",
          "url": "https://github.com/openai/codex/pull/974",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 977,
          "state": "closed",
          "title": "fix: do not let Tab keypress flow through to composer when used to toggle focus",
          "url": "https://github.com/openai/codex/pull/977",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 978,
          "state": "closed",
          "title": "bump(version): 0.1.2505161800",
          "url": "https://github.com/openai/codex/pull/978",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 91,
          "state": "closed",
          "title": "docs: add FAQ clarification to OpenAI Codex (2021)",
          "url": "https://github.com/openai/codex/pull/91",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 988,
          "state": "closed",
          "title": "fix: ensure the first user message always displays after the session info",
          "url": "https://github.com/openai/codex/pull/988",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 989,
          "state": "closed",
          "title": "fix: artifacts from previous frames were bleeding through in TUI",
          "url": "https://github.com/openai/codex/pull/989",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 96,
          "state": "closed",
          "title": "add: release script",
          "url": "https://github.com/openai/codex/pull/96",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 993,
          "state": "closed",
          "title": "fix: provide tolerance for apply_patch tool",
          "url": "https://github.com/openai/codex/pull/993",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 995,
          "state": "closed",
          "title": "chore: update install_native_deps.sh to use rust-v0.0.2505171051",
          "url": "https://github.com/openai/codex/pull/995",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 99,
          "state": "closed",
          "title": "fix(cli): respect -a/--approval-mode auto-edit alias",
          "url": "https://github.com/openai/codex/pull/99",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 998,
          "state": "closed",
          "title": "add: `codex --login` + `codex --free`",
          "url": "https://github.com/openai/codex/pull/998",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1001,
          "state": "closed",
          "title": "bump(version): 0.1.2505171619",
          "url": "https://github.com/openai/codex/pull/1001",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1514,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.0 to 0.9.1 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1514",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2539,
          "state": "closed",
          "title": "[apply-patch] Clean up apply-patch tool definitions",
          "url": "https://github.com/openai/codex/pull/2539",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider integration, specifically concerning API key management and security, which aligns with the definition of an agent issue related to model access misconfiguration and LLM provider usage."
      }
    },
    {
      "number": 10,
      "title": "\"OpenAI rejected the request\"",
      "url": "https://github.com/openai/codex/issues/10",
      "state": "closed",
      "created_at": "2025-04-16T17:32:33Z",
      "closed_at": "2025-04-16T23:14:31Z",
      "body": "I set `export OPENAI_API_KEY=` and ran the `codex` cli with a simple prompt \"read the README.md\" and ran into this error:\n\n```\n    ⚠️  OpenAI rejected the request (request ID: req_13e38c243f89126dd24093d2e4892535). Please verify your settings and\n    try again.\n```\n\nIs there any way to debug this?",
      "labels": [],
      "linked_prs": [
        {
          "number": 1089,
          "state": "closed",
          "title": "feat: add `codex_linux_sandbox_exe: Option<PathBuf>` field to Config",
          "url": "https://github.com/openai/codex/pull/1089",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1095,
          "state": "closed",
          "title": "fix: forgot to pass codex_linux_sandbox_exe through in cli/src/debug_sandbox.rs",
          "url": "https://github.com/openai/codex/pull/1095",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1036,
          "state": "closed",
          "title": "chore: produce .tar.gz versions of artifacts in addition to .zst",
          "url": "https://github.com/openai/codex/pull/1036",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1037,
          "state": "closed",
          "title": "feat: experimental --output-last-message flag to exec subcommand",
          "url": "https://github.com/openai/codex/pull/1037",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1815,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.2 to 0.9.4 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1815",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1562,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.1 to 0.9.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1562",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1054,
          "state": "closed",
          "title": "chore: move types out of config.rs into config_types.rs",
          "url": "https://github.com/openai/codex/pull/1054",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1061,
          "state": "closed",
          "title": "feat: introduce support for shell_environment_policy in config.toml",
          "url": "https://github.com/openai/codex/pull/1061",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 103,
          "state": "closed",
          "title": "docs: clarify sandboxing situation on Linux",
          "url": "https://github.com/openai/codex/pull/103",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1001,
          "state": "closed",
          "title": "bump(version): 0.1.2505171619",
          "url": "https://github.com/openai/codex/pull/1001",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 234,
          "state": "closed",
          "title": "docs: add ZDR org limitation to README",
          "url": "https://github.com/openai/codex/pull/234",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 105,
          "state": "closed",
          "title": "(feat) basic retries when hitting rate limit errors",
          "url": "https://github.com/openai/codex/pull/105",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 108,
          "state": "closed",
          "title": "fix: correct typos in thinking texts (transcendent & parroting)",
          "url": "https://github.com/openai/codex/pull/108",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2157,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.4 to 0.9.5 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2157",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1006,
          "state": "closed",
          "title": "fix: persist token after refresh",
          "url": "https://github.com/openai/codex/pull/1006",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1007,
          "state": "closed",
          "title": "fix: add node version check",
          "url": "https://github.com/openai/codex/pull/1007",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1008,
          "state": "closed",
          "title": "bump(version): 0.1.2505172129",
          "url": "https://github.com/openai/codex/pull/1008",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1073,
          "state": "closed",
          "title": "feat: show Config overview at start of exec",
          "url": "https://github.com/openai/codex/pull/1073",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 109,
          "state": "closed",
          "title": "update: release",
          "url": "https://github.com/openai/codex/pull/109",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 314,
          "state": "closed",
          "title": "feat: add `--reasoning-effort` CLI flag",
          "url": "https://github.com/openai/codex/pull/314",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1084,
          "state": "closed",
          "title": "fix: for the @native release of the Node module, use the Rust version by default",
          "url": "https://github.com/openai/codex/pull/1084",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1086,
          "state": "closed",
          "title": "fix: overhaul how we spawn commands under seccomp/landlock on Linux",
          "url": "https://github.com/openai/codex/pull/1086",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM provider (OpenAI) and references an API key, which aligns with the criteria for an agent issue related to model access misconfiguration."
      }
    },
    {
      "number": 11,
      "title": "Supporting Azure OpenAI",
      "url": "https://github.com/openai/codex/issues/11",
      "state": "closed",
      "created_at": "2025-04-16T17:34:16Z",
      "closed_at": "2025-08-07T18:30:02Z",
      "body": "Supporting Azure OpenAI",
      "labels": [],
      "linked_prs": [
        {
          "number": 1161,
          "state": "closed",
          "title": "fix: update UI treatment of slash command menu to match that of the TS CLI",
          "url": "https://github.com/openai/codex/pull/1161",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1162,
          "state": "closed",
          "title": "chore: update GitHub workflow for native artifacts for npm release",
          "url": "https://github.com/openai/codex/pull/1162",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1163,
          "state": "closed",
          "title": "fix: update justfile to facilitate running CLIs from source and formatting source code",
          "url": "https://github.com/openai/codex/pull/1163",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1164,
          "state": "closed",
          "title": "fix(codex-rs): use codex-mini-latest as default",
          "url": "https://github.com/openai/codex/pull/1164",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1165,
          "state": "closed",
          "title": "docs: split the config-related portion of codex-rs/README.md into its own config.md file",
          "url": "https://github.com/openai/codex/pull/1165",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1167,
          "state": "closed",
          "title": "fix: chat completions API now also passes tools along",
          "url": "https://github.com/openai/codex/pull/1167",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1169,
          "state": "closed",
          "title": "fix: enable `set positional-arguments` in justfile",
          "url": "https://github.com/openai/codex/pull/1169",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1170,
          "state": "closed",
          "title": "feat: initial import of experimental GitHub Action",
          "url": "https://github.com/openai/codex/pull/1170",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1171,
          "state": "closed",
          "title": "fix: update outdated repo setup in codex.yml",
          "url": "https://github.com/openai/codex/pull/1171",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1172,
          "state": "closed",
          "title": "fix: missed a step in #1171 for codex.yml",
          "url": "https://github.com/openai/codex/pull/1172",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1173,
          "state": "closed",
          "title": "fix: add extra debugging to GitHub Action",
          "url": "https://github.com/openai/codex/pull/1173",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 279,
          "state": "closed",
          "title": "feat: tab completions for file paths",
          "url": "https://github.com/openai/codex/pull/279",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1177,
          "state": "closed",
          "title": "fix: introduce `create_tools_json()` and share it with chat_completions.rs",
          "url": "https://github.com/openai/codex/pull/1177",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1178,
          "state": "closed",
          "title": "feat: for `codex exec`, if PROMPT is not specified, read from stdin if not a TTY",
          "url": "https://github.com/openai/codex/pull/1178",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1179,
          "state": "closed",
          "title": "feat: grab-bag of improvements to `exec` output",
          "url": "https://github.com/openai/codex/pull/1179",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1180,
          "state": "closed",
          "title": "feat: dim the timestamp in the exec output",
          "url": "https://github.com/openai/codex/pull/1180",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1181,
          "state": "closed",
          "title": "feat: add hide_agent_reasoning config option",
          "url": "https://github.com/openai/codex/pull/1181",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1182,
          "state": "closed",
          "title": "feat: show the version when starting Codex",
          "url": "https://github.com/openai/codex/pull/1182",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1183,
          "state": "closed",
          "title": "fix: disable agent reasoning output by default in the GitHub Action",
          "url": "https://github.com/openai/codex/pull/1183",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1185,
          "state": "closed",
          "title": "fix: set `--config hide_agent_reasoning=true` in the GitHub Action",
          "url": "https://github.com/openai/codex/pull/1185",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1190,
          "state": "closed",
          "title": "chore: update the WORKFLOW_URL in install_native_deps.sh to the latest release",
          "url": "https://github.com/openai/codex/pull/1190",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1196,
          "state": "closed",
          "title": "chore: logging cleanup",
          "url": "https://github.com/openai/codex/pull/1196",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 173,
          "state": "closed",
          "title": "feat: shell command explanation option",
          "url": "https://github.com/openai/codex/pull/173",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1199,
          "state": "closed",
          "title": "feat: make reasoning effort/summaries configurable",
          "url": "https://github.com/openai/codex/pull/1199",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 178,
          "state": "closed",
          "title": "fix: allow continuing after interrupting assistant",
          "url": "https://github.com/openai/codex/pull/178",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3010,
          "state": "closed",
          "title": "chore(deps): bump regex-lite from 0.1.6 to 0.1.7 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3010",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1105,
          "state": "closed",
          "title": "fix: TUI was not honoring --skip-git-repo-check correctly",
          "url": "https://github.com/openai/codex/pull/1105",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1135,
          "state": "closed",
          "title": "fix: use o4-mini as the default model",
          "url": "https://github.com/openai/codex/pull/1135",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1136,
          "state": "closed",
          "title": "fix: update install_native_deps.sh to pick up the latest release",
          "url": "https://github.com/openai/codex/pull/1136",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1137,
          "state": "closed",
          "title": "feat: add support for -c/--config to override individual config items",
          "url": "https://github.com/openai/codex/pull/1137",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 111,
          "state": "closed",
          "title": "Back out @lib indirection in tsconfig.json",
          "url": "https://github.com/openai/codex/pull/111",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1148,
          "state": "closed",
          "title": "feat: introduce CellWidget trait",
          "url": "https://github.com/openai/codex/pull/1148",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1149,
          "state": "closed",
          "title": "fix: honor RUST_LOG in mcp-client CLI and default to DEBUG",
          "url": "https://github.com/openai/codex/pull/1149",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1150,
          "state": "closed",
          "title": "fix: ensure inputSchema for MCP tool always has \"properties\" field when talking to OpenAI",
          "url": "https://github.com/openai/codex/pull/1150",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1151,
          "state": "closed",
          "title": "fix: introduce ResponseInputItem::McpToolCallOutput variant",
          "url": "https://github.com/openai/codex/pull/1151",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue likely involves integration with an LLM provider (Azure OpenAI), which aligns with the criteria for an agent issue related to LLM provider usage."
      }
    },
    {
      "number": 14,
      "title": "Openrouter api support",
      "url": "https://github.com/openai/codex/issues/14",
      "state": "closed",
      "created_at": "2025-04-16T17:38:29Z",
      "closed_at": "2025-08-07T17:50:05Z",
      "body": "It would be awesome if we can use different api services.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1409,
          "state": "closed",
          "title": "chore: change arg from PathBuf to &Path",
          "url": "https://github.com/openai/codex/pull/1409",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1414,
          "state": "closed",
          "title": "feat: make file search cancellable",
          "url": "https://github.com/openai/codex/pull/1414",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1419,
          "state": "closed",
          "title": "feat: introduce --compute-indices flag to codex-file-search",
          "url": "https://github.com/openai/codex/pull/1419",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1420,
          "state": "closed",
          "title": "feat: highlight matching characters in fuzzy file search",
          "url": "https://github.com/openai/codex/pull/1420",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1421,
          "state": "closed",
          "title": "fix: build with `codegen-units = 1` for profile.release",
          "url": "https://github.com/openai/codex/pull/1421",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1422,
          "state": "closed",
          "title": "fix: support pre-release identifiers in tags",
          "url": "https://github.com/openai/codex/pull/1422",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1423,
          "state": "closed",
          "title": "chore: fix Rust release process so generated .tar.gz source works with Homebrew",
          "url": "https://github.com/openai/codex/pull/1423",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 144,
          "state": "closed",
          "title": "Fix markdown table in README",
          "url": "https://github.com/openai/codex/pull/144",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 141,
          "state": "closed",
          "title": "Adds link to prompting guide in README",
          "url": "https://github.com/openai/codex/pull/141",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 149,
          "state": "closed",
          "title": "minor change in description of Build from source in README.md",
          "url": "https://github.com/openai/codex/pull/149",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1430,
          "state": "closed",
          "title": "fix: need to check out the branch, not the tag",
          "url": "https://github.com/openai/codex/pull/1430",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1435,
          "state": "closed",
          "title": "feat: add query_params option to ModelProviderInfo to support Azure",
          "url": "https://github.com/openai/codex/pull/1435",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1436,
          "state": "closed",
          "title": "fix: softprops/action-gh-release@v2 should use existing tag instead of creating a new tag",
          "url": "https://github.com/openai/codex/pull/1436",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1440,
          "state": "closed",
          "title": "docs: update documentation to reflect Rust CLI release",
          "url": "https://github.com/openai/codex/pull/1440",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1467,
          "state": "closed",
          "title": "Fix Unicode handling in chat_composer \"@\" token detection",
          "url": "https://github.com/openai/codex/pull/1467",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1472,
          "state": "closed",
          "title": "chore: update release scripts for the TypeScript CLI",
          "url": "https://github.com/openai/codex/pull/1472",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1473,
          "state": "closed",
          "title": "feat: support custom HTTP headers for model providers",
          "url": "https://github.com/openai/codex/pull/1473",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1474,
          "state": "closed",
          "title": "chore: normalize repository.url in package.json",
          "url": "https://github.com/openai/codex/pull/1474",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1475,
          "state": "closed",
          "title": "docs: update README to include `npm install` again",
          "url": "https://github.com/openai/codex/pull/1475",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1476,
          "state": "closed",
          "title": "feat: add support for --sandbox flag",
          "url": "https://github.com/openai/codex/pull/1476",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1479,
          "state": "closed",
          "title": "chore: create a release script for the Rust CLI",
          "url": "https://github.com/openai/codex/pull/1479",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1484,
          "state": "closed",
          "title": "feat: add reasoning fields to profile settings",
          "url": "https://github.com/openai/codex/pull/1484",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1485,
          "state": "closed",
          "title": "chore: default to the latest version of the Codex CLI in the GitHub Action",
          "url": "https://github.com/openai/codex/pull/1485",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1486,
          "state": "closed",
          "title": "docs: document support for model_reasoning_effort and model_reasoning_summary in profiles",
          "url": "https://github.com/openai/codex/pull/1486",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1487,
          "state": "closed",
          "title": "feat: honor OPENAI_BASE_URL for the built-in openai provider",
          "url": "https://github.com/openai/codex/pull/1487",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1488,
          "state": "closed",
          "title": "Add Android platform support for Codex CLI",
          "url": "https://github.com/openai/codex/pull/1488",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1491,
          "state": "closed",
          "title": "feat: add `codex completion` to generate shell completions",
          "url": "https://github.com/openai/codex/pull/1491",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1494,
          "state": "closed",
          "title": "chore(rs): update dependencies",
          "url": "https://github.com/openai/codex/pull/1494",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1496,
          "state": "closed",
          "title": "fix: the `completion` subcommand should assume the CLI is named `codex`, not `codex-cli`",
          "url": "https://github.com/openai/codex/pull/1496",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1638,
          "state": "closed",
          "title": "chore(deps): bump strum_macros from 0.27.1 to 0.27.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1638",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1639,
          "state": "closed",
          "title": "chore(deps): bump strum from 0.27.1 to 0.27.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1639",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1400,
          "state": "closed",
          "title": "fix: add tiebreaker logic for paths when scores are equal",
          "url": "https://github.com/openai/codex/pull/1400",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1401,
          "state": "closed",
          "title": "feat: add support for @ to do file search",
          "url": "https://github.com/openai/codex/pull/1401",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1402,
          "state": "closed",
          "title": "Handle Ctrl+C quit when idle",
          "url": "https://github.com/openai/codex/pull/1402",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1407,
          "state": "closed",
          "title": "chore: change `built_in_model_providers` so \"openai\" is the only \"bundled\" provider",
          "url": "https://github.com/openai/codex/pull/1407",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue requests support for different API services, which likely involves LLM provider integration or configuration, aligning with the \"Incompatibility with LLM providers\" category."
      }
    },
    {
      "number": 24,
      "title": "Does it support API key from Azure?",
      "url": "https://github.com/openai/codex/issues/24",
      "state": "closed",
      "created_at": "2025-04-16T17:53:00Z",
      "closed_at": "2025-04-16T18:16:57Z",
      "body": "Does it support API key from Azure Chatgpt API?",
      "labels": [],
      "linked_prs": [
        {
          "number": 2432,
          "state": "closed",
          "title": "Add cache tests for UserTurn",
          "url": "https://github.com/openai/codex/pull/2432",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2435,
          "state": "closed",
          "title": "Support changing reasoning effort",
          "url": "https://github.com/openai/codex/pull/2435",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2437,
          "state": "closed",
          "title": "detect terminal and include in request headers",
          "url": "https://github.com/openai/codex/pull/2437",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2438,
          "state": "closed",
          "title": "Release zip archived binaries",
          "url": "https://github.com/openai/codex/pull/2438",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 261,
          "state": "closed",
          "title": "fix: improve Windows compatibility for CLI commands and sandbox",
          "url": "https://github.com/openai/codex/pull/261",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2440,
          "state": "closed",
          "title": "Show login options when not signed in with ChatGPT",
          "url": "https://github.com/openai/codex/pull/2440",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2442,
          "state": "closed",
          "title": "Fix #2429 Tweak the cursor position after tab completion",
          "url": "https://github.com/openai/codex/pull/2442",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2446,
          "state": "closed",
          "title": "fix: exclude sysprompt etc from context left %",
          "url": "https://github.com/openai/codex/pull/2446",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2457,
          "state": "closed",
          "title": "fix: fix missing spacing in review decision response",
          "url": "https://github.com/openai/codex/pull/2457",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2460,
          "state": "closed",
          "title": "Enable Dependabot updates for Rust toolchain",
          "url": "https://github.com/openai/codex/pull/2460",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2461,
          "state": "closed",
          "title": "Improve gpt-oss compatibility",
          "url": "https://github.com/openai/codex/pull/2461",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2462,
          "state": "closed",
          "title": "feat: move session ID bullet in /status",
          "url": "https://github.com/openai/codex/pull/2462",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2464,
          "state": "closed",
          "title": "docs: document writable_roots for sandbox_workspace_write",
          "url": "https://github.com/openai/codex/pull/2464",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2465,
          "state": "closed",
          "title": "chore: upgrade to Rust 1.89",
          "url": "https://github.com/openai/codex/pull/2465",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2466,
          "state": "closed",
          "title": "fix: prefer `cargo check` to `cargo build` to save time and space",
          "url": "https://github.com/openai/codex/pull/2466",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2467,
          "state": "closed",
          "title": "chore: Rust 1.89 promoted file locking to the standard library, so prefer stdlib to fs2",
          "url": "https://github.com/openai/codex/pull/2467",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2468,
          "state": "closed",
          "title": "fix apply patch when only one file is rendered",
          "url": "https://github.com/openai/codex/pull/2468",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2474,
          "state": "closed",
          "title": "Add a slash command to control permissions",
          "url": "https://github.com/openai/codex/pull/2474",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2475,
          "state": "closed",
          "title": "Fix: Sign in appear even if using other providers.",
          "url": "https://github.com/openai/codex/pull/2475",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2476,
          "state": "closed",
          "title": "Diff command",
          "url": "https://github.com/openai/codex/pull/2476",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2477,
          "state": "closed",
          "title": "[apply-patch] Fix applypatch for heredocs",
          "url": "https://github.com/openai/codex/pull/2477",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2484,
          "state": "closed",
          "title": "Refresh ChatGPT auth token",
          "url": "https://github.com/openai/codex/pull/2484",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2487,
          "state": "closed",
          "title": "Client headers",
          "url": "https://github.com/openai/codex/pull/2487",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2488,
          "state": "closed",
          "title": "tui: show diff hunk headers to separate sections",
          "url": "https://github.com/openai/codex/pull/2488",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2489,
          "state": "closed",
          "title": "tui: switch to using tokio + EventStream for processing crossterm events",
          "url": "https://github.com/openai/codex/pull/2489",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2492,
          "state": "closed",
          "title": "chore(deps): bump reqwest from 0.12.22 to 0.12.23 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2492",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2493,
          "state": "closed",
          "title": "chore(deps): bump uuid from 1.17.0 to 1.18.0 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2493",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2495,
          "state": "closed",
          "title": "fix: prefer config var to env var",
          "url": "https://github.com/openai/codex/pull/2495",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2496,
          "state": "closed",
          "title": "Added new auth-related methods and events to mcp server",
          "url": "https://github.com/openai/codex/pull/2496",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2497,
          "state": "closed",
          "title": "chore(deps): bump whoami from 1.6.0 to 1.6.1 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2497",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2498,
          "state": "closed",
          "title": "chore(deps): bump serde_json from 1.0.142 to 1.0.143 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2498",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 333,
          "state": "closed",
          "title": "feat: notify when a newer version is available",
          "url": "https://github.com/openai/codex/pull/333",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 247,
          "state": "closed",
          "title": "feat: support multiple providers via Responses-Completion transformation",
          "url": "https://github.com/openai/codex/pull/247",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3297,
          "state": "closed",
          "title": "chore(deps): bump image from 0.25.6 to 0.25.8 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3297",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2401,
          "state": "closed",
          "title": "fix: clean up styles & colors and define in styles.md",
          "url": "https://github.com/openai/codex/pull/2401",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2403,
          "state": "closed",
          "title": "chore(deps): bump clap_complete from 4.5.56 to 4.5.57 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2403",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2404,
          "state": "closed",
          "title": "chore(deps): bump clap from 4.5.43 to 4.5.45 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2404",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2405,
          "state": "closed",
          "title": "chore(deps): bump anyhow from 1.0.98 to 1.0.99 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2405",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2411,
          "state": "closed",
          "title": "chore(deps-dev): bump @types/node from 24.2.1 to 24.3.0 in /.github/actions/codex",
          "url": "https://github.com/openai/codex/pull/2411",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2412,
          "state": "closed",
          "title": "Fix #2391 Add Ctrl+H as backspace keyboard shortcut",
          "url": "https://github.com/openai/codex/pull/2412",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 493,
          "state": "closed",
          "title": "bump(version): 0.1.2504211509",
          "url": "https://github.com/openai/codex/pull/493",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2421,
          "state": "closed",
          "title": "fix: stop using ANSI blue",
          "url": "https://github.com/openai/codex/pull/2421",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2423,
          "state": "closed",
          "title": "chore: move mcp-server/src/wire_format.rs to protocol/src/mcp_protocol.rs",
          "url": "https://github.com/openai/codex/pull/2423",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2424,
          "state": "closed",
          "title": "chore: add TS annotation to generated mcp-types",
          "url": "https://github.com/openai/codex/pull/2424",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2425,
          "state": "closed",
          "title": "protocol-ts",
          "url": "https://github.com/openai/codex/pull/2425",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2427,
          "state": "closed",
          "title": "tui: support Ghostty Ctrl-b/Ctrl-f fallback",
          "url": "https://github.com/openai/codex/pull/2427",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2428,
          "state": "closed",
          "title": "consolidate reasoning enums into one",
          "url": "https://github.com/openai/codex/pull/2428",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2430,
          "state": "closed",
          "title": "[tui] Support /mcp command",
          "url": "https://github.com/openai/codex/pull/2430",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2431,
          "state": "closed",
          "title": "Add an operation to override current task context",
          "url": "https://github.com/openai/codex/pull/2431",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue explicitly references an API key from an LLM provider (Azure Chatgpt API), which aligns with the criteria for an agent issue related to LLM provider integration."
      }
    },
    {
      "number": 26,
      "title": "Support for local / other LLMs",
      "url": "https://github.com/openai/codex/issues/26",
      "state": "closed",
      "created_at": "2025-04-16T17:54:20Z",
      "closed_at": "2025-08-07T17:41:01Z",
      "body": "![Image](https://github.com/user-attachments/assets/15381a57-6e44-420b-8922-943ffc0d62ba)\n\nI’d love to be able to use Codex locally, for example to ask it questions about my system, my server, and everything I have on my computer, without necessarily having to go through your servers.\n\nThat would be really cool and would give everyone the opportunity to have full control over their own data.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2688,
          "state": "closed",
          "title": "Add auth to send_user_turn",
          "url": "https://github.com/openai/codex/pull/2688",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2690,
          "state": "closed",
          "title": "fix cursor after suspend",
          "url": "https://github.com/openai/codex/pull/2690",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2691,
          "state": "closed",
          "title": "single control flow for both Esc and Ctrl+C",
          "url": "https://github.com/openai/codex/pull/2691",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2692,
          "state": "closed",
          "title": "do not schedule frames for Tui::Draw events in backtrack",
          "url": "https://github.com/openai/codex/pull/2692",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2693,
          "state": "closed",
          "title": "queued messages rendered italic",
          "url": "https://github.com/openai/codex/pull/2693",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 262,
          "state": "closed",
          "title": "docs: mention dotenv support in Quickstart",
          "url": "https://github.com/openai/codex/pull/262",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2695,
          "state": "closed",
          "title": "Improved user message for rate-limit errors",
          "url": "https://github.com/openai/codex/pull/2695",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2696,
          "state": "closed",
          "title": "Custom /prompts",
          "url": "https://github.com/openai/codex/pull/2696",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 263,
          "state": "closed",
          "title": "add support for -w,--writable-root to add more writable roots for sandbox",
          "url": "https://github.com/openai/codex/pull/263",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 266,
          "state": "closed",
          "title": "fix: update regex to better match the retry error messages",
          "url": "https://github.com/openai/codex/pull/266",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2699,
          "state": "closed",
          "title": "Fixed a bug that causes token refresh to not work in a seamless manner",
          "url": "https://github.com/openai/codex/pull/2699",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 268,
          "state": "closed",
          "title": "fix: npm run format:fix in root",
          "url": "https://github.com/openai/codex/pull/268",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 261,
          "state": "closed",
          "title": "fix: improve Windows compatibility for CLI commands and sandbox",
          "url": "https://github.com/openai/codex/pull/261",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3618,
          "state": "closed",
          "title": "chore(deps): bump serde from 1.0.219 to 1.0.223 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3618",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2600,
          "state": "closed",
          "title": "tui: fix resize on wezterm",
          "url": "https://github.com/openai/codex/pull/2600",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2605,
          "state": "closed",
          "title": "transcript hint",
          "url": "https://github.com/openai/codex/pull/2605",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2607,
          "state": "closed",
          "title": "Resume conversation from an earlier point in history",
          "url": "https://github.com/openai/codex/pull/2607",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2611,
          "state": "closed",
          "title": "Fix cache hit rate by making MCP tools order deterministic",
          "url": "https://github.com/openai/codex/pull/2611",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2613,
          "state": "closed",
          "title": "feat(core): Add `remove_conversation` to `ConversationManager` for ma…",
          "url": "https://github.com/openai/codex/pull/2613",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2492,
          "state": "closed",
          "title": "chore(deps): bump reqwest from 0.12.22 to 0.12.23 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2492",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3010,
          "state": "closed",
          "title": "chore(deps): bump regex-lite from 0.1.6 to 0.1.7 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3010",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2758,
          "state": "closed",
          "title": "Bug fix: deduplicate assistant messages",
          "url": "https://github.com/openai/codex/pull/2758",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2633,
          "state": "closed",
          "title": "test: faster test execution in codex-core",
          "url": "https://github.com/openai/codex/pull/2633",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2637,
          "state": "closed",
          "title": "tui: queue messages",
          "url": "https://github.com/openai/codex/pull/2637",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2643,
          "state": "closed",
          "title": "[apply_patch] disable default freeform tool",
          "url": "https://github.com/openai/codex/pull/2643",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2646,
          "state": "closed",
          "title": "feat: use the arg0 trick with apply_patch",
          "url": "https://github.com/openai/codex/pull/2646",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2648,
          "state": "closed",
          "title": "[exec] Clean up apply-patch tests",
          "url": "https://github.com/openai/codex/pull/2648",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3673,
          "state": "closed",
          "title": "fix: read-only escalations",
          "url": "https://github.com/openai/codex/pull/3673",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2649,
          "state": "closed",
          "title": "fix: update gpt-5 stats",
          "url": "https://github.com/openai/codex/pull/2649",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2651,
          "state": "closed",
          "title": "[apply-patch] Fix lark grammar",
          "url": "https://github.com/openai/codex/pull/2651",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2661,
          "state": "closed",
          "title": "Fix esc",
          "url": "https://github.com/openai/codex/pull/2661",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2663,
          "state": "closed",
          "title": "fix: build is broken on main; introduce ToolsConfigParams to help fix",
          "url": "https://github.com/openai/codex/pull/2663",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2664,
          "state": "closed",
          "title": "fix: Scope ExecSessionManager to Session instead of using global singleton",
          "url": "https://github.com/openai/codex/pull/2664",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2665,
          "state": "closed",
          "title": "chore(deps): bump toml_edit from 0.23.3 to 0.23.4 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2665",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2666,
          "state": "closed",
          "title": "chore(deps): bump wiremock from 0.6.4 to 0.6.5 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2666",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2667,
          "state": "closed",
          "title": "chore(deps): bump thiserror from 2.0.12 to 2.0.16 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2667",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2674,
          "state": "closed",
          "title": "Fix crash when backspacing placeholders adjacent to multibyte text",
          "url": "https://github.com/openai/codex/pull/2674",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2677,
          "state": "closed",
          "title": "[mcp-server] Expose fuzzy file search in MCP",
          "url": "https://github.com/openai/codex/pull/2677",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2678,
          "state": "closed",
          "title": "Index file",
          "url": "https://github.com/openai/codex/pull/2678",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2683,
          "state": "closed",
          "title": "burst paste edge cases",
          "url": "https://github.com/openai/codex/pull/2683",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2684,
          "state": "closed",
          "title": "fix: use backslash as path separator on Windows",
          "url": "https://github.com/openai/codex/pull/2684",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2686,
          "state": "closed",
          "title": "enable alternate scroll in transcript mode",
          "url": "https://github.com/openai/codex/pull/2686",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2687,
          "state": "closed",
          "title": "Esc while there are queued messages drops the messages back into the composer",
          "url": "https://github.com/openai/codex/pull/2687",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue is an agent issue as it involves a feature request related to LLM provider integration, specifically the ability to use local LLMs like Codex, which aligns with the \"Unsupported models\" sub-category under \"Incompatibility with LLM providers\"."
      }
    },
    {
      "number": 30,
      "title": "codex doesn't recognize OPENAI_API_KEY after setting it",
      "url": "https://github.com/openai/codex/issues/30",
      "state": "closed",
      "created_at": "2025-04-16T18:00:13Z",
      "closed_at": "2025-04-16T18:08:03Z",
      "body": "My API key is available in the environment after running `source .env`, but I'm still getting\n\n```\nMissing OpenAI API key.\n\nSet the environment variable OPENAI_API_KEY and re-run this command.\nYou can create a key here: https://platform.openai.com/account/api-keys\n```\n\nDoes it need to be a special one, or is any OpenAI API Key accepted? (i.e. keys that are assigned to a project vs. default vs. personal)",
      "labels": [],
      "linked_prs": [
        {
          "number": 3074,
          "state": "closed",
          "title": "Move CodexAuth and AuthManager to the core crate",
          "url": "https://github.com/openai/codex/pull/3074",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3010,
          "state": "closed",
          "title": "chore(deps): bump regex-lite from 0.1.6 to 0.1.7 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3010",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3082,
          "state": "closed",
          "title": "docs: fix typo of config.md",
          "url": "https://github.com/openai/codex/pull/3082",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3083,
          "state": "closed",
          "title": "parse cd foo && ... for exec and apply_patch",
          "url": "https://github.com/openai/codex/pull/3083",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3086,
          "state": "closed",
          "title": "Use the new search tool",
          "url": "https://github.com/openai/codex/pull/3086",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3087,
          "state": "closed",
          "title": "tui: fix approval dialog for large commands",
          "url": "https://github.com/openai/codex/pull/3087",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3089,
          "state": "closed",
          "title": "docs: update link to point to https://agents.md/",
          "url": "https://github.com/openai/codex/pull/3089",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3093,
          "state": "closed",
          "title": "[mcp-server] Update read config interface",
          "url": "https://github.com/openai/codex/pull/3093",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3035,
          "state": "closed",
          "title": "remove extra quote from disabled-command message",
          "url": "https://github.com/openai/codex/pull/3035",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3038,
          "state": "closed",
          "title": "tui: hide '/init' suggestion when AGENTS.md exists",
          "url": "https://github.com/openai/codex/pull/3038",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3047,
          "state": "closed",
          "title": "Bug fix: ignore Enter on empty input to avoid queuing blank messages",
          "url": "https://github.com/openai/codex/pull/3047",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4525,
          "state": "closed",
          "title": "Remove legacy codex exec --json format",
          "url": "https://github.com/openai/codex/pull/4525",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 302,
          "state": "closed",
          "title": "fix: standardize filename to kebab-case 🐍➡️🥙",
          "url": "https://github.com/openai/codex/pull/302",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 304,
          "state": "closed",
          "title": "fix: handle invalid commands",
          "url": "https://github.com/openai/codex/pull/304",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3056,
          "state": "closed",
          "title": "chore: Clean up verbosity config",
          "url": "https://github.com/openai/codex/pull/3056",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 307,
          "state": "closed",
          "title": "fix: update context left display logic in TerminalChatInput component",
          "url": "https://github.com/openai/codex/pull/307",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 308,
          "state": "closed",
          "title": "add: changelog",
          "url": "https://github.com/openai/codex/pull/308",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3060,
          "state": "closed",
          "title": "Add logs to know when we users are changing the model",
          "url": "https://github.com/openai/codex/pull/3060",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3061,
          "state": "closed",
          "title": "Show loading state when @ search results are pending",
          "url": "https://github.com/openai/codex/pull/3061",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3062,
          "state": "closed",
          "title": "fix: leverage windows-11-arm for Windows ARM builds",
          "url": "https://github.com/openai/codex/pull/3062",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3063,
          "state": "closed",
          "title": "fix config reference table",
          "url": "https://github.com/openai/codex/pull/3063",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3065,
          "state": "closed",
          "title": "tui: fix extra blank lines in streamed agent messages",
          "url": "https://github.com/openai/codex/pull/3065",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3066,
          "state": "closed",
          "title": "fix: install zstd on the windows-11-arm image used to cut a release",
          "url": "https://github.com/openai/codex/pull/3066",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3067,
          "state": "closed",
          "title": "fix: include arm64 Windows executable in npm module",
          "url": "https://github.com/openai/codex/pull/3067",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3068,
          "state": "closed",
          "title": "prefer ratatui Stylized for constructing lines/spans",
          "url": "https://github.com/openai/codex/pull/3068",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3069,
          "state": "closed",
          "title": "core: correct sandboxed shell tool description (reads allowed anywhere)",
          "url": "https://github.com/openai/codex/pull/3069",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3070,
          "state": "closed",
          "title": "Added back the logic to handle rate-limit errors when using API key",
          "url": "https://github.com/openai/codex/pull/3070",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3071,
          "state": "closed",
          "title": "[feat] use experimental reasoning summary",
          "url": "https://github.com/openai/codex/pull/3071",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a problem with the OpenAI API key, which is related to model access misconfiguration, a sub-category of LLM operation issues. This aligns with the definition of an agent issue as it involves LLM provider integration and authentication credentials."
      }
    },
    {
      "number": 32,
      "title": "Provide suggestions on model picker",
      "url": "https://github.com/openai/codex/issues/32",
      "state": "closed",
      "created_at": "2025-04-16T18:00:52Z",
      "closed_at": "2025-04-24T23:56:02Z",
      "body": "It is impossible to remember model names. It would be nice if the model picker `/model` provided a list or populated models as I type them. \n \nCurrently, it does not seem to do any validation and accepts whatever input is typed. \n\n<img width=\"658\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/97ee0262-cc2a-447a-8667-004828e6197c\" />",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3270,
          "state": "closed",
          "title": "feat(core): re-export InitialHistory from conversation_manager",
          "url": "https://github.com/openai/codex/pull/3270",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3211,
          "state": "closed",
          "title": "tui: paste with ctrl+v checks file_list",
          "url": "https://github.com/openai/codex/pull/3211",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3212,
          "state": "closed",
          "title": "Never store requests",
          "url": "https://github.com/openai/codex/pull/3212",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3217,
          "state": "closed",
          "title": "Added logic to cancel pending oauth login to free up localhost port",
          "url": "https://github.com/openai/codex/pull/3217",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3218,
          "state": "closed",
          "title": "hide resume until it's complete",
          "url": "https://github.com/openai/codex/pull/3218",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3219,
          "state": "closed",
          "title": "Generate more typescript types and return conversation id with ConversationSummary",
          "url": "https://github.com/openai/codex/pull/3219",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3220,
          "state": "closed",
          "title": "feat(tui): show minutes/hours in thinking timer",
          "url": "https://github.com/openai/codex/pull/3220",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3221,
          "state": "closed",
          "title": "Move token usage/context information to session level",
          "url": "https://github.com/openai/codex/pull/3221",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3222,
          "state": "closed",
          "title": "fix: LoginChatGptCompleteNotification does not need to be listed explicitly in protocol-ts",
          "url": "https://github.com/openai/codex/pull/3222",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3223,
          "state": "closed",
          "title": "Added CLI version to `/status` output",
          "url": "https://github.com/openai/codex/pull/3223",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3282,
          "state": "closed",
          "title": "Use ConversationId instead of raw Uuids",
          "url": "https://github.com/openai/codex/pull/3282",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 594,
          "state": "closed",
          "title": "feat: display error on selection of invalid model",
          "url": "https://github.com/openai/codex/pull/594",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3226,
          "state": "closed",
          "title": "chore: rewrite codex-rs/scripts/create_github_release.sh in Python",
          "url": "https://github.com/openai/codex/pull/3226",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3285,
          "state": "closed",
          "title": "Clear non-empty prompts with ctrl + c",
          "url": "https://github.com/openai/codex/pull/3285",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3228,
          "state": "closed",
          "title": "chore: change create_github_release to create a fresh clone in a temp directory",
          "url": "https://github.com/openai/codex/pull/3228",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3288,
          "state": "closed",
          "title": "Unified execution",
          "url": "https://github.com/openai/codex/pull/3288",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3230,
          "state": "closed",
          "title": "chore: use gh instead of git to do work to avoid overhead of a local clone",
          "url": "https://github.com/openai/codex/pull/3230",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3231,
          "state": "closed",
          "title": "fix: change create_github_release to take either --publish-alpha or --publish-release",
          "url": "https://github.com/openai/codex/pull/3231",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3294,
          "state": "closed",
          "title": "chore(deps): bump insta from 1.43.1 to 1.43.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3294",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3296,
          "state": "closed",
          "title": "chore(deps): bump clap from 4.5.45 to 4.5.47 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3296",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3297,
          "state": "closed",
          "title": "chore(deps): bump image from 0.25.6 to 0.25.8 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3297",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3620,
          "state": "closed",
          "title": "chore(deps): bump tracing-subscriber from 0.3.19 to 0.3.20 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3620",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3243,
          "state": "closed",
          "title": "fix: improve MCP server initialization error handling #3196 #2346 #2555",
          "url": "https://github.com/openai/codex/pull/3243",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4525,
          "state": "closed",
          "title": "Remove legacy codex exec --json format",
          "url": "https://github.com/openai/codex/pull/4525",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3380,
          "state": "closed",
          "title": "Introduce rollout items ",
          "url": "https://github.com/openai/codex/pull/3380",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue relates to the model picker functionality, which involves LLM model names and potentially prompt management. This suggests an agent issue under \"Prompt-related issues\" or \"Model access misconfiguration,\" as it concerns the interaction with LLM provider models."
      }
    },
    {
      "number": 34,
      "title": "Network error",
      "url": "https://github.com/openai/codex/issues/34",
      "state": "closed",
      "created_at": "2025-04-16T18:06:13Z",
      "closed_at": "2025-04-16T18:22:17Z",
      "body": "Codex runs, but only responds with a network error message.  I can connect to ChatGPT.com and talk to o4-mini without any problems, and if I change my OPENAI_API_KEY to something invalid I get a very different error message.  The message below isn't very informative, though.  Any idea why it's not working?\n\nI'm running Ubuntu 20.04, have 128Gb of RAM (mostly free), and NodeJs v22.14.0.  \n\n\n╭──────────────────────────────────────────────────────────────╮\n│ ● OpenAI Codex (research preview) v0.1.04161006                                                                                 │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: 21349ad9a2974d4d9908f251feed32c5                                                                       │\n│ ↳ workdir: ~/xri/gates/src                                                                                                                         │\n│ ↳ model: o4-mini                                                                                                                                      │\n│ ↳ approval: suggest                                                                                                                                  │\n╰──────────────────────────────────────────────────────────────╯\nuser\ntest\n\n    system\n    ⚠️  Network error while contacting OpenAI. Please check your connection and try again.\n╭──────────────────────────────────────────────────────────────╮\n│ send a message                                                                                                                                        │\n╰──────────────────────────────────────────────────────────────╯\n  send q or ctrl+c to exit | send \"/clear\" to reset | send \"/help\" for commands | press enter to send\n",
      "labels": [],
      "linked_prs": [
        {
          "number": 3458,
          "state": "closed",
          "title": "chore: rust-release.yml should update the latest-alpha-cli branch",
          "url": "https://github.com/openai/codex/pull/3458",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3461,
          "state": "closed",
          "title": "[exec] add include-plan-tool flag and print it nicely",
          "url": "https://github.com/openai/codex/pull/3461",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3467,
          "state": "closed",
          "title": "Align user history message prefix width",
          "url": "https://github.com/openai/codex/pull/3467",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3469,
          "state": "closed",
          "title": "Add spacing before composer footer hints",
          "url": "https://github.com/openai/codex/pull/3469",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3470,
          "state": "closed",
          "title": "Update interruption error message styling",
          "url": "https://github.com/openai/codex/pull/3470",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3471,
          "state": "closed",
          "title": "Add spacing to timer duration formats",
          "url": "https://github.com/openai/codex/pull/3471",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3472,
          "state": "closed",
          "title": "Add spacing between dropdown headers and items",
          "url": "https://github.com/openai/codex/pull/3472",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3474,
          "state": "closed",
          "title": "Add spacing before queued status indicator messages",
          "url": "https://github.com/openai/codex/pull/3474",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3479,
          "state": "closed",
          "title": "NIT unified exec",
          "url": "https://github.com/openai/codex/pull/3479",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3483,
          "state": "closed",
          "title": "core: expand default sandbox",
          "url": "https://github.com/openai/codex/pull/3483",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3486,
          "state": "closed",
          "title": "fix: use -F instead of -f for force=true in gh call",
          "url": "https://github.com/openai/codex/pull/3486",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3488,
          "state": "closed",
          "title": "Log cf-ray header in client traces",
          "url": "https://github.com/openai/codex/pull/3488",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3489,
          "state": "closed",
          "title": "chore: enable clippy::redundant_clone",
          "url": "https://github.com/openai/codex/pull/3489",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3490,
          "state": "closed",
          "title": "Assign the entire gpt-5 model family same characteristics",
          "url": "https://github.com/openai/codex/pull/3490",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3494,
          "state": "closed",
          "title": "add(readme): IDE",
          "url": "https://github.com/openai/codex/pull/3494",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3495,
          "state": "closed",
          "title": "Use PlanType enum when formatting usage-limit CTA",
          "url": "https://github.com/openai/codex/pull/3495",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 438,
          "state": "closed",
          "title": "feat: allow multi-line input ",
          "url": "https://github.com/openai/codex/pull/438",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3400,
          "state": "closed",
          "title": "Added images to `UserMessageEvent`",
          "url": "https://github.com/openai/codex/pull/3400",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3401,
          "state": "closed",
          "title": "Review Mode (Core)",
          "url": "https://github.com/openai/codex/pull/3401",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3533,
          "state": "closed",
          "title": "Handle resuming/forking after compact",
          "url": "https://github.com/openai/codex/pull/3533",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3422,
          "state": "closed",
          "title": "Move initial history to protocol",
          "url": "https://github.com/openai/codex/pull/3422",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3425,
          "state": "closed",
          "title": "apply-patch: sort replacements and add regression tests",
          "url": "https://github.com/openai/codex/pull/3425",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3427,
          "state": "closed",
          "title": "Improved resiliency of two auth-related tests",
          "url": "https://github.com/openai/codex/pull/3427",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3428,
          "state": "closed",
          "title": "feat: add UserInfo request to JSON-RPC server",
          "url": "https://github.com/openai/codex/pull/3428",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3431,
          "state": "closed",
          "title": "fix: make GitHub Action publish to npm using trusted publishing",
          "url": "https://github.com/openai/codex/pull/3431",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3434,
          "state": "closed",
          "title": "fix trampling projects table when accepting trusted dirs",
          "url": "https://github.com/openai/codex/pull/3434",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3435,
          "state": "closed",
          "title": "fix: improve handle_sandbox_error timeouts",
          "url": "https://github.com/openai/codex/pull/3435",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3436,
          "state": "closed",
          "title": "Make user_agent optional",
          "url": "https://github.com/openai/codex/pull/3436",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3179,
          "state": "closed",
          "title": "feat: POSIX unification and snapshot sessions",
          "url": "https://github.com/openai/codex/pull/3179",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3439,
          "state": "closed",
          "title": "fix: ensure output of codex-rs/mcp-types/generate_mcp_types.py matches codex-rs/mcp-types/src/lib.rs",
          "url": "https://github.com/openai/codex/pull/3439",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3440,
          "state": "closed",
          "title": "Change forking to read the rollout from file",
          "url": "https://github.com/openai/codex/pull/3440",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3444,
          "state": "closed",
          "title": "Add Compact and Turn Context to the rollout items",
          "url": "https://github.com/openai/codex/pull/3444",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3445,
          "state": "closed",
          "title": "Clear composer on fork",
          "url": "https://github.com/openai/codex/pull/3445",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3446,
          "state": "closed",
          "title": "feat: context compaction",
          "url": "https://github.com/openai/codex/pull/3446",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3450,
          "state": "closed",
          "title": "fix: add check to ensure output of generate_mcp_types.py matches codex-rs/mcp-types/src/lib.rs",
          "url": "https://github.com/openai/codex/pull/3450",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM provider (OpenAI Codex) and references a network error related to the API key or connection, which aligns with the criteria for an agent issue involving LLM provider integration and operation."
      }
    },
    {
      "number": 38,
      "title": "OpenAI rejects requests",
      "url": "https://github.com/openai/codex/issues/38",
      "state": "closed",
      "created_at": "2025-04-16T18:15:33Z",
      "closed_at": "2025-04-16T18:30:53Z",
      "body": "<img width=\"1177\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4ed34138-8ebf-49ad-a11a-a507472f7306\" />\n\n**Environment information**\n- I have OPENAI_API_KEY set in `~/.zshrc`\n- I'm using node v22.13.0\n- MacOS 15.4 (24E248)\n\n**Steps to reproduce**\n\n1. `nvm use --lts` (for me it's v22.13.0)\n2. Add `export OPENAI_API_KEY=\"sk-proj-xxxx\"` to  `~/.zshrc` and source it (`source ~/.zshrc`)\n3. `npm install -g @openai/codex`\n4. `mkdir listing-web && cd listing-web && git init`\n5. `codex -m o4-mini -a full-auto --image someimage.jpg` also `codex \"what can you do?\"`\n\n**Expected result**\n- Not to reject my call\n\n**Steps tried to mitigate**\n- Create new API Key\n\nEDIT: Fixed typo in commands",
      "labels": [],
      "linked_prs": [
        {
          "number": 384,
          "state": "closed",
          "title": "fix: configure husky and lint-staged for pnpm monorepo",
          "url": "https://github.com/openai/codex/pull/384",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 385,
          "state": "closed",
          "title": "bump(version): 0.1.2504181820",
          "url": "https://github.com/openai/codex/pull/385",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 386,
          "state": "closed",
          "title": "feat: add user-defined safe commands configuration and approval logic #380",
          "url": "https://github.com/openai/codex/pull/386",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3846,
          "state": "closed",
          "title": "chore: prompt update to enforce good usage of apply_patch",
          "url": "https://github.com/openai/codex/pull/3846",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3849,
          "state": "closed",
          "title": "fix: some nit Rust reference issues",
          "url": "https://github.com/openai/codex/pull/3849",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3850,
          "state": "closed",
          "title": "chore: use tokio mutex and async function to prevent blocking a worker",
          "url": "https://github.com/openai/codex/pull/3850",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3857,
          "state": "closed",
          "title": "Make ESC button work when auto-compaction",
          "url": "https://github.com/openai/codex/pull/3857",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3867,
          "state": "closed",
          "title": "fix error on missing notifications in [tui]",
          "url": "https://github.com/openai/codex/pull/3867",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3868,
          "state": "closed",
          "title": "add(core): managed config",
          "url": "https://github.com/openai/codex/pull/3868",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3806,
          "state": "closed",
          "title": "fix: specify --repo when calling gh",
          "url": "https://github.com/openai/codex/pull/3806",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3871,
          "state": "closed",
          "title": "improve MCP tool call styling",
          "url": "https://github.com/openai/codex/pull/3871",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3807,
          "state": "closed",
          "title": "AGENTS.md: Add instruction to install missing commands",
          "url": "https://github.com/openai/codex/pull/3807",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4576,
          "state": "closed",
          "title": "Revert \"chore: prompt update to enforce good usage of apply_patch\"",
          "url": "https://github.com/openai/codex/pull/4576",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3874,
          "state": "closed",
          "title": "fix: ensure cwd for conversation and sandbox are separate concerns",
          "url": "https://github.com/openai/codex/pull/3874",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 478,
          "state": "closed",
          "title": "revert #386 due to unsafe shell command parsing",
          "url": "https://github.com/openai/codex/pull/478",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3878,
          "state": "closed",
          "title": "Move responses mocking helpers to a shared lib",
          "url": "https://github.com/openai/codex/pull/3878",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3814,
          "state": "closed",
          "title": "Use a unified shell tell to not break cache",
          "url": "https://github.com/openai/codex/pull/3814",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3880,
          "state": "closed",
          "title": "Add non_sandbox_test helper",
          "url": "https://github.com/openai/codex/pull/3880",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3881,
          "state": "closed",
          "title": "fix: update try_parse_word_only_commands_sequence() to return commands in order",
          "url": "https://github.com/openai/codex/pull/3881",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3819,
          "state": "closed",
          "title": "Switch to uuid_v7 and tighten ConversationId usage",
          "url": "https://github.com/openai/codex/pull/3819",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 493,
          "state": "closed",
          "title": "bump(version): 0.1.2504211509",
          "url": "https://github.com/openai/codex/pull/493",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3822,
          "state": "closed",
          "title": "chore: update \"Codex CLI harness, sandboxing, and approvals\" section",
          "url": "https://github.com/openai/codex/pull/3822",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3888,
          "state": "closed",
          "title": "Use helpers instead of fixtures",
          "url": "https://github.com/openai/codex/pull/3888",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 381,
          "state": "closed",
          "title": "fix: /bug report command, thinking indicator",
          "url": "https://github.com/openai/codex/pull/381",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider usage, specifically OpenAI API key configuration and model access, which aligns with the criteria for an agent issue related to model access misconfiguration."
      }
    },
    {
      "number": 41,
      "title": "codex does not respect .env on Mac",
      "url": "https://github.com/openai/codex/issues/41",
      "state": "closed",
      "created_at": "2025-04-16T18:23:48Z",
      "closed_at": "2025-04-16T19:36:01Z",
      "body": "carrying around API keys in the terminal environment isn't the best; dumping them on the command line history is definitely terrible.\n\nRight now codex doesn't use dotenv to look for a key, and I think it should! Today I have to put into my bash history \"export OPENAI_API_KEY=...\" or automatically put all my various provider keys into every terminal's environment variables -- neither is great.",
      "labels": [],
      "linked_prs": [
        {
          "number": 768,
          "state": "closed",
          "title": "bump(version): 0.1.2504301751",
          "url": "https://github.com/openai/codex/pull/768",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4101,
          "state": "closed",
          "title": "hide the status indicator when the answer stream starts",
          "url": "https://github.com/openai/codex/pull/4101",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4102,
          "state": "closed",
          "title": "Send limits when getting rate limited",
          "url": "https://github.com/openai/codex/pull/4102",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4105,
          "state": "closed",
          "title": "Use anyhow::Result in tests for error propagation",
          "url": "https://github.com/openai/codex/pull/4105",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4111,
          "state": "closed",
          "title": "Add Reset in for rate limits",
          "url": "https://github.com/openai/codex/pull/4111",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4112,
          "state": "closed",
          "title": "fix: `npm publish --tag alpha` when building an alpha release",
          "url": "https://github.com/openai/codex/pull/4112",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4113,
          "state": "closed",
          "title": "Show exec output on success with trimmed display",
          "url": "https://github.com/openai/codex/pull/4113",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4119,
          "state": "closed",
          "title": "adds a windows-specific method to check if a command is safe",
          "url": "https://github.com/openai/codex/pull/4119",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4124,
          "state": "closed",
          "title": "chore: upgrade to Rust 1.90",
          "url": "https://github.com/openai/codex/pull/4124",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 414,
          "state": "closed",
          "title": "feat: add common package registries domains to allowed-domains list",
          "url": "https://github.com/openai/codex/pull/414",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 416,
          "state": "closed",
          "title": "use spawn instead of exec to avoid injection vulnerability",
          "url": "https://github.com/openai/codex/pull/416",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 417,
          "state": "closed",
          "title": "re-enable Prettier check for codex-cli in CI",
          "url": "https://github.com/openai/codex/pull/417",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 419,
          "state": "closed",
          "title": "Make it so CONFIG_DIR is not in the list of writable roots by default",
          "url": "https://github.com/openai/codex/pull/419",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 420,
          "state": "closed",
          "title": "fix: remove unnecessary isLoggingEnabled() checks",
          "url": "https://github.com/openai/codex/pull/420",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4135,
          "state": "closed",
          "title": "nit: update auto compact to 250k",
          "url": "https://github.com/openai/codex/pull/4135",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4137,
          "state": "closed",
          "title": "nit: drop instruction override for auto-compact",
          "url": "https://github.com/openai/codex/pull/4137",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4140,
          "state": "closed",
          "title": "chore: extract readiness in a dedicated utils crate",
          "url": "https://github.com/openai/codex/pull/4140",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 434,
          "state": "closed",
          "title": "fix(raw-exec-process-group): improve test reliability",
          "url": "https://github.com/openai/codex/pull/434",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4154,
          "state": "closed",
          "title": "chore: remove `once_cell` dependency from multiple crates",
          "url": "https://github.com/openai/codex/pull/4154",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4156,
          "state": "closed",
          "title": "nit: 350k tokens",
          "url": "https://github.com/openai/codex/pull/4156",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4160,
          "state": "closed",
          "title": "Simplify tool implemetations",
          "url": "https://github.com/openai/codex/pull/4160",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4162,
          "state": "closed",
          "title": "fix: add tolerance for ambiguous behavior in `gh run list`",
          "url": "https://github.com/openai/codex/pull/4162",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4174,
          "state": "closed",
          "title": "ref: full state refactor",
          "url": "https://github.com/openai/codex/pull/4174",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4177,
          "state": "closed",
          "title": "Add explicit codex exec events",
          "url": "https://github.com/openai/codex/pull/4177",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4178,
          "state": "closed",
          "title": "Make model switcher two-stage",
          "url": "https://github.com/openai/codex/pull/4178",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4188,
          "state": "closed",
          "title": "chore: drop unused values from env_flags",
          "url": "https://github.com/openai/codex/pull/4188",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4194,
          "state": "closed",
          "title": "chore: refactor attempt_stream_responses() out of stream_responses()",
          "url": "https://github.com/openai/codex/pull/4194",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4195,
          "state": "closed",
          "title": "Send text parameter for non-gpt-5 models",
          "url": "https://github.com/openai/codex/pull/4195",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4196,
          "state": "closed",
          "title": "revamp /status",
          "url": "https://github.com/openai/codex/pull/4196",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4454,
          "state": "closed",
          "title": "fix: handle JSON Schema in additionalProperties for MCP tools",
          "url": "https://github.com/openai/codex/pull/4454",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider integration, specifically the handling of API keys, which is a component unique to agent systems. It suggests using dotenv for managing API keys, indicating a model access misconfiguration."
      }
    },
    {
      "number": 52,
      "title": "Why requires an OpenAI API key if it runs in a network-disabled environment?",
      "url": "https://github.com/openai/codex/issues/52",
      "state": "closed",
      "created_at": "2025-04-16T18:36:01Z",
      "closed_at": "2025-04-16T18:44:16Z",
      "body": "Is this some kind of magic?\n![Image](https://github.com/user-attachments/assets/fbe0dd4c-c92b-430d-b576-27aadcccbcc3)\n\nI've got a bunch of doubts atm:\n- Which model it runs?\n- Runs using GGML? EXL2?\n- Where's the source code of the model?",
      "labels": [],
      "linked_prs": [
        {
          "number": 523,
          "state": "closed",
          "title": "feat: show actionable errors when api keys are missing",
          "url": "https://github.com/openai/codex/pull/523",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 660,
          "state": "closed",
          "title": "bump(version): 0.1.2504251709",
          "url": "https://github.com/openai/codex/pull/660",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 559,
          "state": "closed",
          "title": "bump(version): 0.1.2504221401",
          "url": "https://github.com/openai/codex/pull/559",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue questions the requirement of an OpenAI API key, which is tied to LLM provider usage and model access, indicating potential misconfiguration or misunderstanding of LLM operation in a network-disabled environment."
      }
    },
    {
      "number": 53,
      "title": "OpenAI rejected the request (request ID: req_xxx). Please verify your settings and try again.",
      "url": "https://github.com/openai/codex/issues/53",
      "state": "closed",
      "created_at": "2025-04-16T18:37:26Z",
      "closed_at": "2025-04-16T18:45:16Z",
      "body": "I keep getting this issue, I have api key setup and all. ",
      "labels": [],
      "linked_prs": [
        {
          "number": 537,
          "state": "closed",
          "title": "feat: add support for custom provider configuration in the user config",
          "url": "https://github.com/openai/codex/pull/537",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 530,
          "state": "closed",
          "title": "fix(agent-loop): update required properties to include workdir and ti…",
          "url": "https://github.com/openai/codex/pull/530",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 660,
          "state": "closed",
          "title": "bump(version): 0.1.2504251709",
          "url": "https://github.com/openai/codex/pull/660",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue likely involves a misconfiguration related to LLM provider authentication (API key), which falls under the category of LLM operation issues, specifically model access misconfiguration."
      }
    },
    {
      "number": 55,
      "title": "Read API key from codex config",
      "url": "https://github.com/openai/codex/issues/55",
      "state": "closed",
      "created_at": "2025-04-16T18:41:01Z",
      "closed_at": "2025-04-16T19:36:13Z",
      "body": "Instead of exporting the OPENAI_API_KEY in my current terminal, it would be nice to set it in a ~/.codex/config file that can be read from so that I don't need to re-export every session",
      "labels": [],
      "linked_prs": [
        {
          "number": 660,
          "state": "closed",
          "title": "bump(version): 0.1.2504251709",
          "url": "https://github.com/openai/codex/pull/660",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 551,
          "state": "closed",
          "title": "feat: add openai model info configuration",
          "url": "https://github.com/openai/codex/pull/551",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 552,
          "state": "closed",
          "title": "feat: create parent directories when creating new files.",
          "url": "https://github.com/openai/codex/pull/552",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 556,
          "state": "closed",
          "title": "fix: when a shell tool call invokes apply_patch, resolve relative paths against workdir, if specified",
          "url": "https://github.com/openai/codex/pull/556",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 558,
          "state": "closed",
          "title": "fix typo in prompt",
          "url": "https://github.com/openai/codex/pull/558",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 559,
          "state": "closed",
          "title": "bump(version): 0.1.2504221401",
          "url": "https://github.com/openai/codex/pull/559",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves the configuration of an API key for an LLM provider, which falls under the category of model access misconfiguration in LLM operation issues."
      }
    },
    {
      "number": 59,
      "title": "o3 not supported in latest from-source build",
      "url": "https://github.com/openai/codex/issues/59",
      "state": "closed",
      "created_at": "2025-04-16T18:48:49Z",
      "closed_at": "2025-04-16T21:23:28Z",
      "body": "(base) catid@catid:~/sources/codex/codex-cli$ node ./dist/cli.js -m o3\n(node:100899) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n╭──────────────────────────────────────────────────────────────╮\n│ ● OpenAI Codex (research preview) v0.1.04160940              │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: 810087a93ca14116af535166557df7a5          │\n│ ↳ workdir: ~/sources/codex/codex-cli                         │\n│ ↳ model: o3                                                  │\n│ ↳ approval: suggest                                          │\n╰──────────────────────────────────────────────────────────────╯\n\n    system\n    Warning: model \"o3\" is not in the list of available models returned by OpenAI.\n╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ send a message                                                                                                                                                    │\n╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n  send q or ctrl+c to exit | send \"/clear\" to reset | send \"/help\" for commands | press enter to send\n",
      "labels": [],
      "linked_prs": [
        {
          "number": 3296,
          "state": "closed",
          "title": "chore(deps): bump clap from 4.5.45 to 4.5.47 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3296",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 594,
          "state": "closed",
          "title": "feat: display error on selection of invalid model",
          "url": "https://github.com/openai/codex/pull/594",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2404,
          "state": "closed",
          "title": "chore(deps): bump clap from 4.5.43 to 4.5.45 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2404",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 660,
          "state": "closed",
          "title": "bump(version): 0.1.2504251709",
          "url": "https://github.com/openai/codex/pull/660",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 597,
          "state": "closed",
          "title": "bug: fix error catching when checking for updates",
          "url": "https://github.com/openai/codex/pull/597",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an \"unsupported model\" as it reports that the \"o3\" model is not available from OpenAI, which falls under the category of incompatibility with LLM providers."
      }
    },
    {
      "number": 60,
      "title": "CLI crashes with “server_error: The server had an error while processing your request” when context window is nearly exhausted",
      "url": "https://github.com/openai/codex/issues/60",
      "state": "closed",
      "created_at": "2025-04-16T18:49:34Z",
      "closed_at": "2025-08-07T17:50:30Z",
      "body": "\nWhen using the `@openai/codex` CLI interactively with a very large conversation history, once the API context window is nearly full (e.g. “1% context left”), the CLI throws an internal server error and exits rather than gracefully warning or trimming the context.\n\n ## Reproduction Steps\n 1. Install the latest CLI:\n    ```bash\n    npm install -g @openai/codex\n    ```\n 2. Start an interactive session:\n    ```bash\n    codex\n    ```\n 3. Enter or paste a very long prompt (or build up many turns) until you see:\n    ```\n    — 1% context left\n    ```\n 4. Continue chatting or issue another prompt.\n 5. Observe the CLI crash with a stack trace similar to:\n    ```text\n    file:///…/codex/dist/cli.js:443\n    …pg.NEWLINE_REGEXP=/\\r\\n|[\\n\\r]/g;function Fwe(e,t){…}\n    …\n    [Error]: The server had an error while processing your request. Sorry about that!\n        at e.a [as iterator] (…/cli.js:443:1514)\n        at process.processTicksAndRejections (node:internal/…)\n        at async I0.run (…/cli.js:460:2356) {\n      status: undefined,\n      headers: undefined,\n      request_id: undefined,\n      error: {\n        type: 'server_error',\n        message: 'The server had an error while processing your request. Sorry about that!',\n      }\n    }\n    ```\n\n ## Expected Behavior\n - Detect that the context window is exhausted (or about to be) and either:\n   1. Prompt the user to trim or clear history (e.g. suggest `/clear`),  \n   2. Automatically drop the oldest tokens before continuing, or  \n   3. Smart auto-compact mechanism\n   4. At minimum, emit a clear warning instead of an unhandled server error.  \n\n ## Actual Behavior\n Once the API rejects due to context overflow, the CLI surfaces a raw server error stack trace and exits.\n\n ## Environment\n - macOS 13.5  \n - Node.js v20.18.3 (via nvm)  \n - No custom configuration\n\n",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 680,
          "state": "closed",
          "title": "fix: duplicate messages in quiet mode",
          "url": "https://github.com/openai/codex/pull/680",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2158,
          "state": "closed",
          "title": "chore(deps): bump clap_complete from 4.5.55 to 4.5.56 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2158",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 608,
          "state": "closed",
          "title": "fix(agent-loop): notify type",
          "url": "https://github.com/openai/codex/pull/608",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This is an agent issue because it involves a context length issue, where the CLI crashes due to exceeding the context window limit. This aligns with the LLM operation issues category, specifically context length issues, as it requires handling of context limits in an LLM-based system."
      }
    },
    {
      "number": 70,
      "title": "rate_limit_exceeded",
      "url": "https://github.com/openai/codex/issues/70",
      "state": "closed",
      "created_at": "2025-04-16T19:06:14Z",
      "closed_at": "2025-04-16T19:18:52Z",
      "body": "I'm experimenting with codex but I'm very constantly getting the error `rate_limit_exceeded`.\n\nIt is quite possible that I do something wrong, but the user experience is not so great.\n\nI'm runing codex:\n\n```\nnode@e542460e71f1:/app$ codex -m gpt-4.1-mini\n```\n\nThen I ask him to change some thing in a project. He does several steps, but after a small number of steps it failes with the error\n\n```\n\n\ne [Error]: Rate limit reached for gpt-4.1-mini in organization org-REDACTED on tokens per min (TPM): Limit 200000, Used 155151, Requested 49105. Please try again in 1.276s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///usr/local/lib/node_modules/@openai/codex/dist/cli.js:443:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async I0.run (file:///usr/local/lib/node_modules/@openai/codex/dist/cli.js:460:2356) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for gpt-4.1-mini in organization org-REDACTED on tokens per min (TPM): Limit 200000, Used 155151, Requested 49105. Please try again in 1.276s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nNode.js v20.19.0\nnode@e542460e71f1:/app$\n```\n\nThe problem here that it fails and the `codex` program finishes and I need to start from the very beginning (with the same result).\n\nProbably I'm using the wrong model, or I have incorrect settings for my key in the https://platform.openai.com\n\nBut maybe the codex could be improved so it does not exits, but sleeps for a minute (or asks for some user input)",
      "labels": [],
      "linked_prs": [
        {
          "number": 768,
          "state": "closed",
          "title": "bump(version): 0.1.2504301751",
          "url": "https://github.com/openai/codex/pull/768",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 704,
          "state": "closed",
          "title": "fix: drop d as keyboard shortcut for scrolling in the TUI",
          "url": "https://github.com/openai/codex/pull/704",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2155,
          "state": "closed",
          "title": "chore(deps): bump tokio-util from 0.7.15 to 0.7.16 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2155",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2156,
          "state": "closed",
          "title": "chore(deps): bump unicode-width from 0.1.14 to 0.2.1 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2156",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 701,
          "state": "closed",
          "title": "feat: `@mention` files in codex",
          "url": "https://github.com/openai/codex/pull/701",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation, specifically a token usage misconfiguration with rate limits being exceeded for the model gpt-4.1-mini. This aligns with the criteria for agent issues related to LLM provider integration and operation."
      }
    },
    {
      "number": 74,
      "title": "Extend configuration to accept OpenAI organization and project",
      "url": "https://github.com/openai/codex/issues/74",
      "state": "closed",
      "created_at": "2025-04-16T19:13:48Z",
      "closed_at": "2025-04-25T16:52:54Z",
      "body": "For users who belong to multiple organizations, OpenAI expects you to pass a header specifying which organization and project is used for an API request.\n\nSnippet from the [docs](https://platform.openai.com/docs/api-reference/authentication):\n\n```\ncurl https://api.openai.com/v1/models \\\n  -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n  -H \"OpenAI-Organization: YOUR_ORG_ID\" \\\n  -H \"OpenAI-Project: $PROJECT_ID\"\n```\n\nWould you be amenable to extending the [configuration](https://github.com/openai/codex/blob/24e86da575fd3c975f23f4c17b6c7fd0c1c62c52/codex-cli/src/utils/config.ts#L34-L37) to accept openai_organization and openai_project as new configuration keys?\n\nAlternatively, if that's not amenable, can you just support [custom headers](https://github.com/openai/openai-node/blob/b5a5ee43837778adae925f6abcbc395b30ed826b/src/index.ts#L215C3-L215C17] via a single env (comma-separated maybe?) to specify multiple headers?\n\nHappy to make the contribution!",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 740,
          "state": "closed",
          "title": "feat: codex-linux-sandbox standalone executable",
          "url": "https://github.com/openai/codex/pull/740",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 741,
          "state": "closed",
          "title": "chore: set Cargo workspace to version 0.0.2504291926 to create a scratch release",
          "url": "https://github.com/openai/codex/pull/741",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 742,
          "state": "closed",
          "title": "fix: remove expected dot after v in rust-v tag name",
          "url": "https://github.com/openai/codex/pull/742",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 743,
          "state": "closed",
          "title": "fix: primary output of the codex-cli crate is named codex, not codex-cli",
          "url": "https://github.com/openai/codex/pull/743",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 744,
          "state": "closed",
          "title": "chore: set Cargo workspace to version 0.0.2504291954 to create a scratch release",
          "url": "https://github.com/openai/codex/pull/744",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 745,
          "state": "closed",
          "title": "chore: fix errors in .github/workflows/rust-release.yml and prep 0.0.2504292006 release",
          "url": "https://github.com/openai/codex/pull/745",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2155,
          "state": "closed",
          "title": "chore(deps): bump tokio-util from 0.7.15 to 0.7.16 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2155",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2156,
          "state": "closed",
          "title": "chore(deps): bump unicode-width from 0.1.14 to 0.2.1 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2156",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 748,
          "state": "closed",
          "title": "fix: include x86_64-unknown-linux-gnu in the list of arch to build codex-linux-sandbox",
          "url": "https://github.com/openai/codex/pull/748",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 747,
          "state": "closed",
          "title": "fix: add another place where $dest was missing in rust-release.yml",
          "url": "https://github.com/openai/codex/pull/747",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 626,
          "state": "closed",
          "title": "feat: Add support for OpenAI-Organization and OpenAI-Project headers",
          "url": "https://github.com/openai/codex/pull/626",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1816,
          "state": "closed",
          "title": "chore(deps): bump tokio from 1.46.1 to 1.47.1 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1816",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves extending configuration to include OpenAI-specific headers for organization and project, which relates to LLM provider integration and API key usage, aligning with the criteria for an agent issue."
      }
    },
    {
      "number": 82,
      "title": "dont carsh in API errors",
      "url": "https://github.com/openai/codex/issues/82",
      "state": "closed",
      "created_at": "2025-04-16T19:36:08Z",
      "closed_at": "2025-04-16T20:00:11Z",
      "body": "when user have API error DONT carsh just print error and wait for user input\n\nexample error `rate_limit_exceeded` give the user the option to rerun in a minute \n\n```\ne [Error]: Rate limit reached for o4-mini in organization org-*** on tokens per min (TPM): Limit 200000, Used 143077, Requested 69194. Please try again in 3.681s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:443:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async I0.run (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:460:2356) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization org-***** on tokens per min (TPM): Limit 200000, Used 143077, Requested 69194. Please try again in 3.681s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nNode.js v23.10.0\n```",
      "labels": [],
      "linked_prs": [
        {
          "number": 829,
          "state": "closed",
          "title": "feat: support mcp_servers in config.toml",
          "url": "https://github.com/openai/codex/pull/829",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 822,
          "state": "closed",
          "title": "feat: initial McpClient for Rust",
          "url": "https://github.com/openai/codex/pull/822",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 831,
          "state": "closed",
          "title": "feat: update McpClient::new_stdio_client() to accept an env",
          "url": "https://github.com/openai/codex/pull/831",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves handling API errors related to LLM provider usage, specifically concerning rate limits. It suggests improving error handling by not crashing and allowing user input, which aligns with managing LLM operation issues like token usage misconfiguration."
      }
    },
    {
      "number": 83,
      "title": "[BUG] o3, o3-mini, o4-mini, 4.1 not working",
      "url": "https://github.com/openai/codex/issues/83",
      "state": "closed",
      "created_at": "2025-04-16T19:36:15Z",
      "closed_at": "2025-04-16T22:14:35Z",
      "body": "[Description]\nAble to hit all models via api, but not through codex for o3, o3-mini, o4-mini, 4.1. But able to use codex with 4o-mini.  \n",
      "labels": [],
      "linked_prs": [
        {
          "number": 833,
          "state": "closed",
          "title": "fix: build all crates individually as part of CI",
          "url": "https://github.com/openai/codex/pull/833",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 836,
          "state": "closed",
          "title": "feat: show MCP tool calls in TUI",
          "url": "https://github.com/openai/codex/pull/836",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 829,
          "state": "closed",
          "title": "feat: support mcp_servers in config.toml",
          "url": "https://github.com/openai/codex/pull/829",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2493,
          "state": "closed",
          "title": "chore(deps): bump uuid from 1.17.0 to 1.18.0 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2493",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 831,
          "state": "closed",
          "title": "feat: update McpClient::new_stdio_client() to accept an env",
          "url": "https://github.com/openai/codex/pull/831",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves model access misconfiguration, as it describes a problem with accessing specific models through codex, which is related to LLM provider integration and operation."
      }
    },
    {
      "number": 84,
      "title": "auto sleep in error `rate_limit_exceeded`",
      "url": "https://github.com/openai/codex/issues/84",
      "state": "closed",
      "created_at": "2025-04-16T19:37:12Z",
      "closed_at": "2025-04-16T19:59:22Z",
      "body": "when user have `rate_limit_exceeded` just sleep until is ready to work again ",
      "labels": [],
      "linked_prs": [
        {
          "number": 840,
          "state": "closed",
          "title": "fix: make all fields of Session struct private again",
          "url": "https://github.com/openai/codex/pull/840",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 841,
          "state": "closed",
          "title": "feat: show MCP tool calls in `codex exec` subcommand",
          "url": "https://github.com/openai/codex/pull/841",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 842,
          "state": "closed",
          "title": "Update cargo to 2024 edition",
          "url": "https://github.com/openai/codex/pull/842",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 843,
          "state": "closed",
          "title": "chore: introduce codex-common crate",
          "url": "https://github.com/openai/codex/pull/843",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 844,
          "state": "closed",
          "title": "chore: introduce new --native flag to Node module release process",
          "url": "https://github.com/openai/codex/pull/844",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 845,
          "state": "closed",
          "title": "feat: save session transcripts when using Rust CLI",
          "url": "https://github.com/openai/codex/pull/845",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves handling a `rate_limit_exceeded` error, which is related to LLM provider usage and token management. This aligns with LLM operation issues, specifically token usage misconfiguration, making it an agent issue."
      }
    },
    {
      "number": 88,
      "title": "Rate limit reached for o4-mini",
      "url": "https://github.com/openai/codex/issues/88",
      "state": "closed",
      "created_at": "2025-04-16T19:46:43Z",
      "closed_at": "2025-04-16T21:22:47Z",
      "body": "[Error]: Rate limit reached for o4-mini in organization org-******* on tokens per min (TPM): Limit 200000, Used 162960, Requested 42288. Please try again in 1.574s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///Users/***/.nvm/versions/node/v23.7.0/lib/node_modules/@openai/codex/dist/cli.js:443:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async I0.run (file:///Users/***/.nvm/versions/node/v23.7.0/lib/node_modules/@openai/codex/dist/cli.js:460:2513) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization org-**** on tokens per min (TPM): Limit 200000, Used 162960, Requested 42288. Please try again in 1.574s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}",
      "labels": [],
      "linked_prs": [
        {
          "number": 888,
          "state": "closed",
          "title": "restructure flake for codex-rs",
          "url": "https://github.com/openai/codex/pull/888",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 885,
          "state": "closed",
          "title": "feat: add support for AGENTS.md in Rust CLI",
          "url": "https://github.com/openai/codex/pull/885",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation, specifically a token usage misconfiguration, as it reports exceeding the token rate limit for an LLM provider, which aligns with the criteria for agent issues."
      }
    },
    {
      "number": 90,
      "title": "MCP Server connection",
      "url": "https://github.com/openai/codex/issues/90",
      "state": "closed",
      "created_at": "2025-04-16T19:51:13Z",
      "closed_at": "2025-04-16T19:52:06Z",
      "body": "Is there a way to connect MCP servers as a tool or smth to Codex?",
      "labels": [],
      "linked_prs": [
        {
          "number": 932,
          "state": "closed",
          "title": "bump(version): 0.1.2505140839",
          "url": "https://github.com/openai/codex/pull/932",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 903,
          "state": "closed",
          "title": "Add codespell support (config, workflow to detect/not fix) and make it fix some typos",
          "url": "https://github.com/openai/codex/pull/903",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 904,
          "state": "closed",
          "title": "fix: navigate initialization phase before tools/list request in MCP client",
          "url": "https://github.com/openai/codex/pull/904",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 905,
          "state": "closed",
          "title": "fix: use \"thinking\" instead of \"codex reasoning\" as the label for reasoning events in the TUI",
          "url": "https://github.com/openai/codex/pull/905",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 908,
          "state": "closed",
          "title": "fix: agent instructions were not being included when ~/.codex/instructions.md was empty",
          "url": "https://github.com/openai/codex/pull/908",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 909,
          "state": "closed",
          "title": "fix: always load version from package.json at runtime",
          "url": "https://github.com/openai/codex/pull/909",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves connecting MCP servers as a tool to Codex, which relates to tool invocation and configuration within an LLM-based agent system."
      }
    },
    {
      "number": 93,
      "title": "No tool output found for function call",
      "url": "https://github.com/openai/codex/issues/93",
      "state": "closed",
      "created_at": "2025-04-16T19:52:34Z",
      "closed_at": "2025-04-19T05:56:50Z",
      "body": "Everything was working OK, but codex has started to error out\n\n`   ⚠️  OpenAI rejected the request (request ID: req_c74acdda5bf45975a9f53c202601489d). Error details: Status: 400, Code: unknown, Type: invalid_request_error, Message: 400 No tool output found for function call\n    call_k20FunjGZouIu7PaUIAHz2G6.. Please verify your settings and try again.\n`",
      "labels": [],
      "linked_prs": [
        {
          "number": 930,
          "state": "closed",
          "title": "fix: gpt-4.1 apply_patch handling",
          "url": "https://github.com/openai/codex/pull/930",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 931,
          "state": "closed",
          "title": "fix: reasoning default to medium, show workdir when supplied",
          "url": "https://github.com/openai/codex/pull/931",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 932,
          "state": "closed",
          "title": "bump(version): 0.1.2505140839",
          "url": "https://github.com/openai/codex/pull/932",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 933,
          "state": "closed",
          "title": "fix: increase timeout for test_dev_null_write",
          "url": "https://github.com/openai/codex/pull/933",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 934,
          "state": "closed",
          "title": "feat: add mcp subcommand to CLI to run Codex as an MCP server",
          "url": "https://github.com/openai/codex/pull/934",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 935,
          "state": "closed",
          "title": "feat: add support for commands in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/935",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 936,
          "state": "closed",
          "title": "chore: handle all cases for EventMsg",
          "url": "https://github.com/openai/codex/pull/936",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 937,
          "state": "closed",
          "title": "fix: properly wrap lines in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/937",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 939,
          "state": "closed",
          "title": "feat: record messages from user in ~/.codex/history.jsonl",
          "url": "https://github.com/openai/codex/pull/939",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a tool invocation failure indicated by the error message \"No tool output found for function call,\" which aligns with tool-related issues in agent systems. Additionally, it references an LLM provider (OpenAI), suggesting an agent issue."
      }
    },
    {
      "number": 95,
      "title": "extra_forbidden error",
      "url": "https://github.com/openai/codex/issues/95",
      "state": "closed",
      "created_at": "2025-04-16T20:06:16Z",
      "closed_at": "2025-04-16T22:37:36Z",
      "body": "Hi guys, I tried to get Codex to create a web app using a photo of a flowchart I drew on paper. Got to the actually creating code bit and was given this error. This is using gpt-4.1 and MacOS Sequoia 15.4.\n\nCommand I used was `codex -m gpt-4.1 -a full-auto -i /Users/james/Desktop/AD0FC415-4EFD-46D1-B0E4-47B31314865C_1_102_a.jpeg` \n\n```\nfile:///Users/james/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:443\n`,\"\\r\"]);pg.NEWLINE_REGEXP=/\\r\\n|[\\n\\r]/g;function Fwe(e,t){for(let a=t??0;a<e.length;a++){if(e[a]===10)return{preceding:a,index:a+1,carriage:!1};if(e[a]===13)return{preceding:a,index:a+1,carriage:!0}}return null}function Tae(e){for(let n=0;n<e.length-1;n++){if(e[n]===10&&e[n+1]===10||e[n]===13&&e[n+1]===13)return n+2;if(e[n]===13&&e[n+1]===10&&n+3<e.length&&e[n+2]===13&&e[n+3]===10)return n+4}return-1}g();function UO(e){if(e[Symbol.asyncIterator])return e;let t=e.getReader();return{async next(){try{let r=await t.read();return r?.done&&t.releaseLock(),r}catch(r){throw t.releaseLock(),r}},async return(){let r=t.cancel();return t.releaseLock(),await r,{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}}}var nd=class e{constructor(t,r){this.iterator=t,this.controller=r}static fromSSEResponse(t,r){let n=!1;async function*a(){if(n)throw new Error(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");n=!0;let i=!1;try{for await(let s of Pwe(t,r))if(!i){if(s.data.startsWith(\"[DONE]\")){i=!0;continue}if(s.event===null||s.event.startsWith(\"response.\")||s.event.startsWith(\"transcript.\")){let c;try{c=JSON.parse(s.data)}catch(p){throw console.error(\"Could not parse message into JSON:\",s.data),console.error(\"From chunk:\",s.raw),p}if(c&&c.error)throw new mi(void 0,c.error,void 0,zO(t.headers));yield c}else{let c;try{c=JSON.parse(s.data)}catch(p){throw console.error(\"Could not parse message into JSON:\",s.data),console.error(\"From chunk:\",s.raw),p}if(s.event==\"error\")throw new mi(void 0,c.error,c.message,void 0);yield{event:s.event,data:c}}}i=!0}catch(s){if(s instanceof Error&&s.name===\"AbortError\")return;throw s}finally{i||r.abort()}}return new e(a,r)}static fromReadableStream(t,r){let n=!1;async function*a(){let s=new pg,c=UO(t);for await(let p of c)for(let f of s.decode(p))yield f;for(let p of s.flush())yield p}async function*i(){if(n)throw new Error(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");n=!0;let s=!1;try{for await(let c of a())s||c&&(yield JSON.parse(c));s=!0}catch(c){if(c instanceof Error&&c.name===\"AbortError\")return;throw c}finally{s||r.abort()}}return new e(i,r)}[Symbol.asyncIterator](){return this.iterator()}tee(){let t=[],r=[],n=this.iterator(),a=i=>({next:()=>{if(i.length===0){let s=n.next();t.push(s),r.push(s)}return i.shift()}});return[new e(()=>a(t),this.controller),new e(()=>a(r),this.controller)]}toReadableStream(){let t=this,r,n=new TextEncoder;return new wN({async start(){r=t[Symbol.asyncIterator]()},async pull(a){try{let{value:i,done:s}=await r.next();if(s)return a.close();let c=n.encode(JSON.stringify(i)+`\nn\ne [Error]: [{'type': 'extra_forbidden', 'loc': ('body', 'service_tier'), 'msg': 'Extra inputs are not permitted', 'input': 'auto'}]\n    at e.a [as iterator] (file:///Users/james/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:443:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async I0.run (file:///Users/james/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:460:2513) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'invalid_request_error',\n    code: null,\n    message: \"[{'type': 'extra_forbidden', 'loc': ('body', 'service_tier'), 'msg': 'Extra inputs are not permitted', 'input': 'auto'}]\",\n    param: null\n  },\n  code: null,\n  param: null,\n  type: 'invalid_request_error'\n}\n```",
      "labels": [],
      "linked_prs": [
        {
          "number": 951,
          "state": "closed",
          "title": "add: codex-mini-latest",
          "url": "https://github.com/openai/codex/pull/951",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 967,
          "state": "closed",
          "title": "bump(version): 0.1.2505161243",
          "url": "https://github.com/openai/codex/pull/967",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 952,
          "state": "closed",
          "title": "chore: update exec crate to use std::time instead of chrono",
          "url": "https://github.com/openai/codex/pull/952",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 953,
          "state": "closed",
          "title": "bump(version): 0.1.2505160811 `codex-mini-latest`",
          "url": "https://github.com/openai/codex/pull/953",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 954,
          "state": "closed",
          "title": "Fix diff command for filenames with special characters",
          "url": "https://github.com/openai/codex/pull/954",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 957,
          "state": "closed",
          "title": "feat: add support for file_opener option in Rust, similiar to #911",
          "url": "https://github.com/openai/codex/pull/957",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 958,
          "state": "closed",
          "title": "fix: introduce ExtractHeredocError that implements PartialEq",
          "url": "https://github.com/openai/codex/pull/958",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an error related to the use of an LLM provider (gpt-4.1) and incorrect parameters in the command, which aligns with the criteria for \"Incompatible parameters to LLM providers\" in agent issues."
      }
    },
    {
      "number": 97,
      "title": "Codex crashes when hitting rate limit rather than waiting",
      "url": "https://github.com/openai/codex/issues/97",
      "state": "closed",
      "created_at": "2025-04-16T20:12:32Z",
      "closed_at": "2025-04-16T20:21:01Z",
      "body": "Codex crashes when hitting rate limit rather than waiting.\n\nGiven that it needed to wait 3.6 seconds, it should really just hang back and wait.\n\n(It also listed all files which is fine, but included `node_modules` which made up a large chunk of those tokens.)\n\n```\n[Error]: Rate limit reached for o4-mini in organization org-<snip> on tokens per min (TPM): Limit 200000, Used 166273, Requested 46014. Please try again in 3.686s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///Users/adam/.nvm/versions/node/v22.13.1/lib/node_modules/@openai/codex/dist/cli.js:443:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async I0.run (file:///Users/adam/.nvm/versions/node/v22.13.1/lib/node_modules/@openai/codex/dist/cli.js:460:2513) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization org-<snip> on tokens per min (TPM): Limit 200000, Used 166273, Requested 46014. Please try again in 3.686s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n```",
      "labels": [],
      "linked_prs": [
        {
          "number": 977,
          "state": "closed",
          "title": "fix: do not let Tab keypress flow through to composer when used to toggle focus",
          "url": "https://github.com/openai/codex/pull/977",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 978,
          "state": "closed",
          "title": "bump(version): 0.1.2505161800",
          "url": "https://github.com/openai/codex/pull/978",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 970,
          "state": "closed",
          "title": "Remove unnecessary console log from test",
          "url": "https://github.com/openai/codex/pull/970",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 971,
          "state": "closed",
          "title": "feat: make it possible to toggle mouse mode in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/971",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 972,
          "state": "closed",
          "title": "fix: make codex-mini-latest the default model in the Rust TUI",
          "url": "https://github.com/openai/codex/pull/972",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 974,
          "state": "closed",
          "title": "add: sign in with chatgpt credits",
          "url": "https://github.com/openai/codex/pull/974",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue is an agent issue because it involves LLM operation issues, specifically related to token usage misconfiguration. The Codex crashes instead of handling the rate limit by waiting, which is a workflow anomaly in the agent's orchestration."
      }
    },
    {
      "number": 102,
      "title": "Listing all files, including node modules",
      "url": "https://github.com/openai/codex/issues/102",
      "state": "closed",
      "created_at": "2025-04-16T20:25:28Z",
      "closed_at": "2025-04-16T20:26:16Z",
      "body": "Codex continues to list all files including node_modules, in a variety of ways, despite being told in CODEX.md not to.\n\nThe only way I have stopped it from doing this so far is to tell it at the very beginning to always use `tree --gitignore` for file listings.\n\nIf Codex could respect .gitignore that'd save many tokens!",
      "labels": [
        "model-behavior"
      ],
      "linked_prs": [
        {
          "number": 2157,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.4 to 0.9.5 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2157",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1815,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.2 to 0.9.4 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1815",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue relates to prompt management problems, as it involves Codex not respecting the .gitignore file and listing unnecessary files, which affects token usage. This aligns with prompt-related issues in agent systems."
      }
    },
    {
      "number": 106,
      "title": "\"Previous response cannot be used for this organization due to Zero Data Retention\"",
      "url": "https://github.com/openai/codex/issues/106",
      "state": "closed",
      "created_at": "2025-04-16T20:41:08Z",
      "closed_at": "2025-08-07T18:01:47Z",
      "body": "I am using a OpenAI Enterprise account, and no matter what query I put in, codex fails with the following message:\n```\n OpenAI rejected the request (request ID: req_1a9b278241d22896524af079e9ba9c8c). Error details: Status: 400, Code: unsupported_parameter, Type: invalid_request_error, Message: 400 Previous\n    response cannot be used for this organization due to Zero Data Retention.. Please verify your settings and try again.\n```",
      "labels": [
        "documentation"
      ],
      "linked_prs": [
        {
          "number": 234,
          "state": "closed",
          "title": "docs: add ZDR org limitation to README",
          "url": "https://github.com/openai/codex/pull/234",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1061,
          "state": "closed",
          "title": "feat: introduce support for shell_environment_policy in config.toml",
          "url": "https://github.com/openai/codex/pull/1061",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM provider (OpenAI) and mentions an error related to unsupported parameters, which aligns with the \"Incompatible parameters to LLM providers\" sub-category of agent issues."
      }
    },
    {
      "number": 110,
      "title": "Shell Command Explanation",
      "url": "https://github.com/openai/codex/issues/110",
      "state": "closed",
      "created_at": "2025-04-16T20:47:38Z",
      "closed_at": "2025-04-17T20:28:59Z",
      "body": "When model presents a Shell Command giving the option to 'Allow', also give an option to explain the command in more detail. ",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1105,
          "state": "closed",
          "title": "fix: TUI was not honoring --skip-git-repo-check correctly",
          "url": "https://github.com/openai/codex/pull/1105",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 173,
          "state": "closed",
          "title": "feat: shell command explanation option",
          "url": "https://github.com/openai/codex/pull/173",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves enhancing the agent's tool invocation feature by adding an option to explain shell commands, which relates to tool-related issues and prompt management in agent systems."
      }
    },
    {
      "number": 114,
      "title": "bug: unable to continue after hitting esc esc to interrupt assistant",
      "url": "https://github.com/openai/codex/issues/114",
      "state": "closed",
      "created_at": "2025-04-16T21:11:58Z",
      "closed_at": "2025-08-07T18:01:51Z",
      "body": "after interrupting, it's not possible to continue usage without clearing the history. Subsequent messages consistently yield errors like:\n```\n⚠️  OpenAI rejected the request (request ID:\n    req_***). Please verify your\n    settings and try again.\n```",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 178,
          "state": "closed",
          "title": "fix: allow continuing after interrupting assistant",
          "url": "https://github.com/openai/codex/pull/178",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1148,
          "state": "closed",
          "title": "feat: introduce CellWidget trait",
          "url": "https://github.com/openai/codex/pull/1148",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1149,
          "state": "closed",
          "title": "fix: honor RUST_LOG in mcp-client CLI and default to DEBUG",
          "url": "https://github.com/openai/codex/pull/1149",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves memory-related symptoms, specifically the inability to continue usage without clearing history, which aligns with memory initialization issues. Additionally, it includes an LLM provider error message, indicating a potential model access misconfiguration or context length issue."
      }
    },
    {
      "number": 115,
      "title": "feat: don't close program when out of credits or when API key is missing",
      "url": "https://github.com/openai/codex/issues/115",
      "state": "closed",
      "created_at": "2025-04-16T21:14:14Z",
      "closed_at": "2025-08-07T18:01:53Z",
      "body": "Current behavior\n\nProgram exits with an error when `OPENAI_API_KEY` is missing, when I have `insufficient_quota`, `rate_limit_exceeded` or when my org isn't verified to use certain models. This happens after my first prompt.\n\nDesired\n\nIt would be nice to keep the program open and print an error to the user when this happens.\n",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3010,
          "state": "closed",
          "title": "chore(deps): bump regex-lite from 0.1.6 to 0.1.7 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3010",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1150,
          "state": "closed",
          "title": "fix: ensure inputSchema for MCP tool always has \"properties\" field when talking to OpenAI",
          "url": "https://github.com/openai/codex/pull/1150",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1151,
          "state": "closed",
          "title": "fix: introduce ResponseInputItem::McpToolCallOutput variant",
          "url": "https://github.com/openai/codex/pull/1151",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider usage, specifically concerning API key management and handling of errors related to insufficient quota and rate limits, which are tied to LLM operation issues."
      }
    },
    {
      "number": 118,
      "title": "Feat: Support streaming all outputs and also support passing history with -q",
      "url": "https://github.com/openai/codex/issues/118",
      "state": "closed",
      "created_at": "2025-04-16T21:36:46Z",
      "closed_at": "2025-08-07T18:02:00Z",
      "body": "Hi, thanks for making this open source!\n\nI want to propose a few cli options for non-interactive mode (`-q`):\n\n```\n--history - pass a message history for non-interactive mode to continue working\n--stream - stream all outputs (not just the final output) from non-interactive mode.\n```\n\nNote that for --stream, I believe this may already be available as `-j`/`--json` and it needs to be exposed? https://github.com/openai/codex/blob/main/codex-cli/src/cli.tsx#L37\n\n## Example use case for history\n\nIf a user runs an initial command with -q (or -j), then gets all the message history from stdout, then they could pass that information back to another -q / -j call in order to incrementally work with the LLM. This is similar to interactive mode, but it also allows non-interactive consumers to pass message history properly in the standard openai message format. \n\nI'm currently working on an API server at https://github.com/Flux159/codex-api-server that could then expose this functionality to other clients via HTTP/S (with auth) - allowing a number of other clients to be built with codex without being restricted by the terminal api. \n\n## Storing history\n\nThere's another potential command around history that may be useful purely for the interactive CLI `--save-history`. Essentially it would store chat history in `~/.codex/chats`. This would allow a user to restart an interactive session with a previous history by using `--load-history ~/.codex/chats/chat-1.json` without losing the intermediate messages & context.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1185,
          "state": "closed",
          "title": "fix: set `--config hide_agent_reasoning=true` in the GitHub Action",
          "url": "https://github.com/openai/codex/pull/1185",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1180,
          "state": "closed",
          "title": "feat: dim the timestamp in the exec output",
          "url": "https://github.com/openai/codex/pull/1180",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1181,
          "state": "closed",
          "title": "feat: add hide_agent_reasoning config option",
          "url": "https://github.com/openai/codex/pull/1181",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1182,
          "state": "closed",
          "title": "feat: show the version when starting Codex",
          "url": "https://github.com/openai/codex/pull/1182",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1183,
          "state": "closed",
          "title": "fix: disable agent reasoning output by default in the GitHub Action",
          "url": "https://github.com/openai/codex/pull/1183",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves memory-related behaviors, specifically the management and passing of message history in non-interactive mode, which aligns with memory initialization issues and memory content errors in agent systems."
      }
    },
    {
      "number": 121,
      "title": "bug: No such file or directory",
      "url": "https://github.com/openai/codex/issues/121",
      "state": "closed",
      "created_at": "2025-04-16T21:44:24Z",
      "closed_at": "2025-08-07T18:02:03Z",
      "body": "I'm getting this bug on Macos 15.2. The program is unable to edit files. It's likely a permissions issue.\n\n```\nexport OPENAI_API_KEY=XXXXX && codex -m gpt-4o --full-auto\n```\n\n```\n    command\n\n    $ ls\n\n    command.stdout (code: 0, duration: 0s)\n\n    CONTRIBUTING.md\n    LICENSE.md\n    README.md\n    app\n    ... (18 more lines)\n\n    codex\n    The directory contains the following files and folders:\n\n        * `CONTRIBUTING.md`\n        * `LICENSE.md`\n        * `README.md`\n```\n(truncated)\n\n```\n    If you need to modify or access any specific files, feel free to let me know!\nuser\nadd any line to README.md\n\n    codex\n    Let's add a comment line to the README.md. I'll proceed with that.\n\n    command\n\n    $ \"echo '\n    <\\!-- This is a sample comment added for demonstration purposes. -->\n    ' >> README.md\"\n\n    command.stdout (code: 71, duration: 0s)\n\n    sandbox-exec: execvp() of 'echo '\n    <!-- This is a sample comment added for demonstration purposes. -->\n    ' >> README.md' failed: No such file or directory\n\n\n    codex\n    I encountered an issue with the execution environment. Let's modify the README.md directly using a patch.\n\n    command\n\n    $ 'cat README.md'\n\n    command.stdout (code: 71, duration: 0s)\n\n    sandbox-exec: execvp() of 'cat README.md' failed: No such file or directory\n\n\n    codex\n    It seems there's a consistent error accessing the file. Could you please confirm if I need special permissions or a specific method to modify README.md in this environment?\n```",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1211,
          "state": "closed",
          "title": "codex-rs: make tool calls prettier",
          "url": "https://github.com/openai/codex/pull/1211",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1212,
          "state": "closed",
          "title": "feat: add support for login with ChatGPT",
          "url": "https://github.com/openai/codex/pull/1212",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation errors related to file editing, which is a behavior unique to agent systems. The problem appears to be related to the execution environment's permissions or configuration, aligning with tool-related issues in agent systems."
      }
    },
    {
      "number": 128,
      "title": "Handle rate limit issues",
      "url": "https://github.com/openai/codex/issues/128",
      "state": "closed",
      "created_at": "2025-04-16T22:20:04Z",
      "closed_at": "2025-04-16T22:28:19Z",
      "body": "Rate limit exceeded very fast for simple 'explain the project' prompt in a medium size repository. A configuration option to avoid this would be nice.",
      "labels": [],
      "linked_prs": [
        {
          "number": 3617,
          "state": "closed",
          "title": "chore(deps): bump serde_json from 1.0.143 to 1.0.145 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3617",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation, specifically token usage misconfiguration, as it mentions rate limits being exceeded, which is tied to LLM provider usage and configuration."
      }
    },
    {
      "number": 137,
      "title": "Graceful backoff on rate limits",
      "url": "https://github.com/openai/codex/issues/137",
      "state": "closed",
      "created_at": "2025-04-16T23:10:05Z",
      "closed_at": "2025-04-29T03:18:58Z",
      "body": "It's normal to hit rate limits, but the current behavior of codex is to basically crash and abort everything in flight:\n\n```\n[Error]: Rate limit reached for gpt-4.1 in organization org-abcxyz on tokens per min (TPM): Limit 450000, \nUsed 368526, Requested 91276. Please try again in 1.306s.\n```\n\nA better behavior would be to take that output, and retry 1.4 seconds later with exponential backoff. Furthermore, given the limits are well-known, an even better behavior would be to display tokens left (or %) and have the CLI be aware enough to influence the AI behavior. For example, at 95% write a plan for a next session, etc.",
      "labels": [],
      "linked_prs": [
        {
          "number": 1376,
          "state": "closed",
          "title": "fix: pretty-print the sandbox config in the TUI/exec modes",
          "url": "https://github.com/openai/codex/pull/1376",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1378,
          "state": "closed",
          "title": "chore: rename unless-allow-listed to untrusted",
          "url": "https://github.com/openai/codex/pull/1378",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1379,
          "state": "closed",
          "title": "chore: improve docstring for --full-auto",
          "url": "https://github.com/openai/codex/pull/1379",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1373,
          "state": "closed",
          "title": "feat: redesign sandbox config",
          "url": "https://github.com/openai/codex/pull/1373",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1374,
          "state": "closed",
          "title": "chore: install clippy and rustfmt in the devcontainer for Linux development",
          "url": "https://github.com/openai/codex/pull/1374",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1375,
          "state": "closed",
          "title": "chore: install `just` in the devcontainer for Linux development",
          "url": "https://github.com/openai/codex/pull/1375",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation issues, specifically token usage misconfiguration and handling of rate limits. It suggests improvements in handling rate limits and retry mechanisms, which are related to LLM provider integration and workflow management in agent systems."
      }
    },
    {
      "number": 145,
      "title": "Add support for Ollama",
      "url": "https://github.com/openai/codex/issues/145",
      "state": "closed",
      "created_at": "2025-04-16T23:49:13Z",
      "closed_at": "2025-04-16T23:58:12Z",
      "body": "**Description:**\nCurrently, the OpenAI Python client is tightly coupled to the OpenAI API (requiring an API key and pointing to api.openai.com). It would be extremely valuable to enable first‑class support for Ollama, so that developers can seamlessly target local or self‑hosted models without the need for an OpenAI API key.\n\n⸻\n\n**Use Cases:**\n\t•\tOffline development & testing: Work with local models (e.g. StarCoder, CodeLlama) served by Ollama on your machine or private network.\n\t•\tCost savings & privacy: Run inference on self‑hosted hardware without incurring OpenAI usage fees or sharing sensitive prompts/data externally.\n\t•\tFlexible deployment: Switch between OpenAI’s hosted models and local Ollama endpoints via configuration, without changing application code.\n\n\n![image](https://github.com/user-attachments/assets/17702568-8383-49b8-ad1b-275a6a967931)",
      "labels": [],
      "linked_prs": [
        {
          "number": 1467,
          "state": "closed",
          "title": "Fix Unicode handling in chat_composer \"@\" token detection",
          "url": "https://github.com/openai/codex/pull/1467",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue requests support for Ollama, allowing developers to use local or self-hosted models instead of the OpenAI API. This involves LLM provider integration and configuration, which are components unique to agent systems, aligning with the definition of an agent issue."
      }
    },
    {
      "number": 146,
      "title": "feat: session persistence",
      "url": "https://github.com/openai/codex/issues/146",
      "state": "closed",
      "created_at": "2025-04-16T23:50:46Z",
      "closed_at": "2025-08-07T18:02:10Z",
      "body": "Allow the user to continue a previously saved session/thread with the same current working directory by using a command like `/session`. This command can only be used before any message has been sent.\n\nIncremental thread state is already persisted in `~/.codex/sessions/rollout-*.json` but an alternative structure is necessary to store thread information.\n\nA simple alternative could allow the user to continue the most recently saved thread state for the current working directory.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1467,
          "state": "closed",
          "title": "Fix Unicode handling in chat_composer \"@\" token detection",
          "url": "https://github.com/openai/codex/pull/1467",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves memory-related behaviors, specifically session persistence and thread state management, which are unique to agent systems. It suggests changes to how session data is stored and accessed, aligning with memory initialization and content management issues in agent systems."
      }
    },
    {
      "number": 157,
      "title": "Rate‑limit 429 causes Codex CLI abort / raw‑mode crash",
      "url": "https://github.com/openai/codex/issues/157",
      "state": "closed",
      "created_at": "2025-04-17T00:42:48Z",
      "closed_at": "2025-04-29T03:19:35Z",
      "body": "### Environment\n* **CLI version:** `codex --version` → v0.1.04161006  \n* **Model:** o3  \n* **OS:** macOS Sequoia 15.4 (Apple Silicon)  \n* **Node.js:** v23.10.0  \n* **Org ID:** `org‑REDACTED`\n\n### Steps to reproduce\n1. Run `codex --model o3 edit` (interactive mode)  \n2. Submit a large `apply_patch` block (~29 k tokens)  \n3. CLI retries once, then receives 429 → Ink **raw‑mode** crash  \n\n### Observed error\n[Error]: Rate limit reached for o3 in organization org‑REDACTED on tokens per min (TPM): Limit 30000, Used 23669, Requested 29142. Please try again in 45.622s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:443:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async I0.run (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:460:2356) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o3 in organization org-REDACTED on tokens per min (TPM): Limit 30000, Used 23669, Requested 29142. Please try again in 45.622s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nThe session aborts; partial patch is lost.\n\n### Expected behavior\n* CLI should automatically back‑off or chunk large patches after a 429  \n* No fatal crash when Ink UI fails to enter raw mode\n\n### Possible improvements\n* Document `OPENAI_MAX_RETRIES` / `OPENAI_MS_BETWEEN_RETRIES`  \n* Auto‑chunk patches > 30 k tokens  \n* Default to `--no-ui` on automatic retries to avoid raw‑mode issues",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1571,
          "state": "closed",
          "title": "Deduplicate MCP tool names",
          "url": "https://github.com/openai/codex/pull/1571",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation issues, specifically token usage misconfiguration, as it reports a rate-limit error related to token management. It also suggests improvements for handling large token submissions, which aligns with agent-specific concerns of LLM provider integration and operation."
      }
    },
    {
      "number": 159,
      "title": "can't see user prompt or much of response from LLM",
      "url": "https://github.com/openai/codex/issues/159",
      "state": "closed",
      "created_at": "2025-04-17T01:06:11Z",
      "closed_at": "2025-08-07T18:02:22Z",
      "body": "Here I can't see what I would type:\n\n![Image](https://github.com/user-attachments/assets/2d4b8f56-d47b-4e49-8585-26768f7ddbd5)\n\nHere I can't see the full response from the LLM w.r.t. allowing command:\n\n![Image](https://github.com/user-attachments/assets/790d7d14-a0b6-4a6e-8b26-cad68195c91e)\n\nHere I hit CTRL-C to see things:\n\n![Image](https://github.com/user-attachments/assets/80679f1b-91e2-426c-96c1-389f64506749)\n\n\nJust using Ubuntu 22.  Claude code has worked perfectly fine.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1637,
          "state": "closed",
          "title": "chore(deps): bump rand from 0.9.1 to 0.9.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1637",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1590,
          "state": "closed",
          "title": "fix: update bin/codex.js so it listens for exit on the child process",
          "url": "https://github.com/openai/codex/pull/1590",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1591,
          "state": "closed",
          "title": "Added mcp-server name validation",
          "url": "https://github.com/openai/codex/pull/1591",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1594,
          "state": "closed",
          "title": "Add streaming to exec and tui",
          "url": "https://github.com/openai/codex/pull/1594",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1596,
          "state": "closed",
          "title": "Storing the sessions in a more organized way for easier look up.",
          "url": "https://github.com/openai/codex/pull/1596",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1598,
          "state": "closed",
          "title": "Record Git metadata to rollout",
          "url": "https://github.com/openai/codex/pull/1598",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1599,
          "state": "closed",
          "title": "Implement redraw debounce",
          "url": "https://github.com/openai/codex/pull/1599",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt visibility and response handling, which are related to prompt management and model output handling in an LLM-based agent system. These are indicators of an agent issue as per the provided criteria."
      }
    },
    {
      "number": 165,
      "title": "Can't use some models",
      "url": "https://github.com/openai/codex/issues/165",
      "state": "closed",
      "created_at": "2025-04-17T02:08:10Z",
      "closed_at": "2025-05-17T20:53:00Z",
      "body": "Logs:\n```\n│ ↳ model: o4-mini                                             │\n│ ↳ approval: suggest                                          │\n╰──────────────────────────────────────────────────────────────╯\nuser\ntest\n\n    system\n    ⚠️  OpenAI rejected the request (request ID: req_1800747adab1d5d22256b202de8e8542). Please verify your settings and\n    try again.\n\n    system\n    Switched model to o4-mini\n\n    system\n    Switched model to chatgpt-4o-latest\nuser\ntest\n\n    system\n    ⚠️  OpenAI rejected the request (request ID: req_75fb5da5cd5c27f0a02d365651a20dfc). Please verify your settings and\n    try again.\n╭──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ send a message                                                                                                       │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n  send q or ctrl+c to exit | send \"/clear\" to reset | send \"/help\" for commands | press enter to send\n\n╭──────────────────────────────────────────────────────────────────────────────╮\n│ Switch model                                                                 │\n│ Current model: chatgpt-4o-latest                                             │\n│                                                                              │\n│                                                                              │\n\n    system\n    Switched model to chatgpt-4o-latest\n\n    system\n    Switched model to ft:gpt-4o-2024-08-06:pruszyn:my-exp4:AE8LHDHD:ckpt-step-80\nuser\ntest\n\n    codex\n    I'm here! How can I assist you today with your code?\n╭──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ send a message                                                                                                       │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n  send q or ctrl+c to exit | send \"/clear\" to reset | send \"/help\" for commands | press enter to send\n\n```\n\nI am unable to the latest models, as well as custom ones such as chatgpt-4o-latest or o1-mini, among others. Only 4o and 4o-mini are functional, while 4.1 does not work either and of course o4-mini and o3.,\n\nMy api are:\nYour organization is currently in Usage tier 3. Your limits will automatically be increased once you move to the next usage tier based on the criteria outlined below. Visit our [usage tiers documentation](https://platform.openai.com/docs/guides/rate-limits#usage-tiers) to learn more about the limits associated with each tier.\nCurrent tier\nUsage tier 3\nOnce the following criteria are met, you'll automatically move to the next tier:\nAt least $250 spent on the API since account creation.\nAt least 14 days passed since first successful payment.\n[View payment history](https://platform.openai.com/settings/organization/billing/history)\n[Buy credits](https://platform.openai.com/settings/organization/billing)\n\n",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1650,
          "state": "closed",
          "title": "chore: install an extension for TOML syntax highlighting in the devcontainer",
          "url": "https://github.com/openai/codex/pull/1650",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1653,
          "state": "closed",
          "title": "feat: support dotenv (including ~/.codex/.env)",
          "url": "https://github.com/openai/codex/pull/1653",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1656,
          "state": "closed",
          "title": "chore: for release build, build specific targets instead of --all-targets",
          "url": "https://github.com/openai/codex/pull/1656",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2666,
          "state": "closed",
          "title": "chore(deps): bump wiremock from 0.6.4 to 0.6.5 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2666",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1659,
          "state": "closed",
          "title": "Improve messages emitted for exec failures",
          "url": "https://github.com/openai/codex/pull/1659",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves incompatibility with LLM providers, specifically unsupported models and potential misconfiguration of model access, which are components unique to LLM-based agent systems."
      }
    },
    {
      "number": 171,
      "title": "Azure OpenAI endpoint support?",
      "url": "https://github.com/openai/codex/issues/171",
      "state": "closed",
      "created_at": "2025-04-17T03:02:02Z",
      "closed_at": "2025-04-17T03:19:43Z",
      "body": "Just curious is there a config for me to point this tool to my Azure OpenAI endpoint? Thanks!",
      "labels": [],
      "linked_prs": [
        {
          "number": 1712,
          "state": "closed",
          "title": "Add support for a separate chatgpt auth endpoint",
          "url": "https://github.com/openai/codex/pull/1712",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1713,
          "state": "closed",
          "title": "replace login screen with a simple prompt",
          "url": "https://github.com/openai/codex/pull/1713",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1715,
          "state": "closed",
          "title": "Mcp protocol",
          "url": "https://github.com/openai/codex/pull/1715",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1716,
          "state": "closed",
          "title": "Add login status command",
          "url": "https://github.com/openai/codex/pull/1716",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4028,
          "state": "closed",
          "title": "chore(deps): bump chrono from 0.4.41 to 0.4.42 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/4028",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1710,
          "state": "closed",
          "title": "fix: long lines incorrectly wrapped",
          "url": "https://github.com/openai/codex/pull/1710",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1711,
          "state": "closed",
          "title": "feat: map ^U to kill-line-to-head",
          "url": "https://github.com/openai/codex/pull/1711",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue references the configuration of an LLM provider endpoint, specifically Azure OpenAI, which aligns with the criteria of being tied to LLM provider usage."
      }
    },
    {
      "number": 174,
      "title": "Azure OpenAI Python SDK works, but codex CLI fails with 404",
      "url": "https://github.com/openai/codex/issues/174",
      "state": "closed",
      "created_at": "2025-04-17T03:14:10Z",
      "closed_at": "2025-08-07T18:02:43Z",
      "body": "## 📓 Context\n\nI’m able to successfully connect to Azure OpenAI using the Python SDK with the following code:\n\n```python\nimport os\nfrom openai import AzureOpenAI\n\nendpoint = \"https://REDACTED.openai.azure.com/\"\ndeployment = \"o4-mini\"\nsubscription_key = \"REDACTED\"\napi_version = \"2025-03-01-preview\"\n\nclient = AzureOpenAI(\n    api_version=api_version,\n    azure_endpoint=endpoint,\n    api_key=subscription_key,\n)\n\nresponse = client.chat.completions.create(\n    messages=[\n        {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n        {\"role\": \"user\", \"content\": \"I am going to Paris, what should I see?\"}\n    ],\n    max_completion_tokens=100000,\n    model=deployment\n)\n\nprint(response.choices[0].message.content)\n```\n\nThis works as expected and returns a valid completion from the o4-mini deployment.\n\n---\n\n## ❗ Issue\n\nHowever, when I attempt to use the Codex CLI with the following environment variables:\n\n```bash\nexport OPENAI_API_KEY=\"REDACTED\"\nexport OPENAI_API_TYPE=\"azure\"\nexport OPENAI_BASE_URL=\"https://REDACTED.openai.azure.com/\"\nexport OPENAI_API_VERSION=\"2025-03-01-preview\"\n```\n\nand run:\n\n```\ncodex\n```\n\nand ask a question, I get this:\n\n```\n⚠️  OpenAI rejected the request. Error details: \nStatus: 404, Code: 404, Type: unknown, \nMessage: 404 Resource not found. Please verify your settings and try again.\n```\n\nI also tried setting these values in `.codex/config.yaml` but still got the same error.\n\n---\n\n## 🔍 Ask\n\nCould someone help confirm:\n1. Is Codex CLI compatible with Azure OpenAI?\n2. If yes, what’s the correct way to configure it for a custom deployment like o4-mini?\n3. Is there a different env var required for specifying the deployment name?\n\nWould appreciate a quick fix or workaround here—blocking usage on our end. Thanks!\n\n<img width=\"794\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8ddcb0f0-68d7-451a-9f34-7be1c5c71e0f\" />",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1744,
          "state": "closed",
          "title": "chore: add support for a new label, codex-rust-review",
          "url": "https://github.com/openai/codex/pull/1744",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1745,
          "state": "closed",
          "title": "Auto format toml",
          "url": "https://github.com/openai/codex/pull/1745",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1747,
          "state": "closed",
          "title": "fix git tests",
          "url": "https://github.com/openai/codex/pull/1747",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1748,
          "state": "closed",
          "title": "Detect kitty terminals",
          "url": "https://github.com/openai/codex/pull/1748",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1740,
          "state": "closed",
          "title": "moving input item from MCP Protocol back to core Protocol",
          "url": "https://github.com/openai/codex/pull/1740",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1743,
          "state": "closed",
          "title": "add keyboard enhancements to support shift_return",
          "url": "https://github.com/openai/codex/pull/1743",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider integration, specifically with Azure OpenAI, and concerns the configuration and compatibility of the Codex CLI tool, which aligns with the criteria for agent issues related to LLM provider integration and tool configuration issues."
      }
    },
    {
      "number": 177,
      "title": "Error: “Sandbox was mandated, but no sandbox is available!” when running OpenAI Codex CLI on Windows",
      "url": "https://github.com/openai/codex/issues/177",
      "state": "closed",
      "created_at": "2025-04-17T03:27:33Z",
      "closed_at": "2025-04-17T03:40:06Z",
      "body": "C:\\temp>codex --approval-mode full-auto \"create the fanciest personal task managment app, frontend angular, backend java with springboot, postgresql db in docker all core features suggested add them,authentication not needed Basic CRUD (create/read/update/delete), Due dates, reminders/notifications, tags/categories, priorities, recurring tasks, Kanban board, calendar view, timeline/Gantt chart\"\n╭──────────────────────────────────────────────────────────────╮\n│ ● OpenAI Codex (research preview) v0.1.2504161551            │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: e71bbd648f0244bba24196e668396aa3          │\n│ ↳ workdir: C:\\temp                                           │\n│ ↳ model: o4-mini                                             │\n│ ↳ approval: full-auto                                        │\n╰──────────────────────────────────────────────────────────────╯\nuser\ncreate the fanciest personal task managment app, frontend angular, backend java with springboot, postgresql db in docker\n all core features suggested add them,authentication not needed Basic CRUD (create/read/update/delete), Due dates,\nreminders/notifications, tags/categories, priorities, recurring tasks, Kanban board, calendar view, timeline/Gantt chart\n\n    thinking for 42s\n\n\nfile:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:439\n        STDERR: ${d}),{stdout:c,stderr:d,exitCode:f,durationMs:s}}var P3e=async()=>{try{return await F3e(\"/proc/1/cgroup\"),!0}catch{return!1}};async function Q3e(e){if(e){if(process.platform===\"darwin\")return\"macos.seatbelt\";if(await P3e())return\"none\";throw new Error(\"Sandbox was mandated, but no sandbox is available!\")}else return\"none\"}async function Cte(e,t,r){let{review:n,customDenyMessage:a}=await r(e.cmd,t);if(n===\"always\"){let i=bte(e.cmd);vte.add(i)}if(n!==\"yes\"&&n!==\"always\"){let i=n===\"no-continue\"?a?.trim()||\"No, don't do that \\u2014 keep going though.\":\"No, don't do that \\u2014 stop for now.\";return{outputText:\"aborted\",metadata:{},additionalItems:[{type:\"message\",role:\"user\",content:[{type:\"input_text\",text:i}]}]}}else return null}import{randomUUID as sNe}from\"node:crypto\";g();g();g();var $I=\"RFC3986\",jI={RFC1738:e=>String(e).replace(/%20/g,\"+\"),RFC3986:e=>String(e)},Ite=\"RFC1738\";g();g();var U3e=Array.isArray,Ku=(()=>{let e=[];for(let t=0;t<256;++t)e.push(\"%\"+((t<16?\"0\":\"\")+t.toString(16)).toUpperCase());return e})();var yN=1024,Dte=(e,t,r,n,a)=>{if(e.length===0)return e;let i=e;if(typeof e==\"symbol\"?i=Symbol.prototype.toString.call(e):typeof e!=\"string\"&&(i=String(e)),r===\"iso-8859-1\")return escape(i).replace(/%u[0-9a-f]{4}/gi,function(c){return\"%26%23\"+parseInt(c.slice(2),16)+\"%3B\"});let s=\"\";for(let c=0;c<i.length;c+=yN){let d=i.length>=yN?i.slice(c,c+yN):i,f=[];for(let A=0;A<d.length;++A){let y=d.charCodeAt(A);if(y===45||y===46||y===95||y===126||y>=48&&y<=57||y>=65&&y<=90||y>=97&&y<=122||a===Ite&&(y===40||y===41)){f[f.length]=d.charAt(A);continue}if(y<128){f[f.length]=Ku[y];continue}if(y<2048){f[f.length]=Ku[192|y>>6]+Ku[128|y&63];continue}if(y<55296||y>=57344){f[f.length]=Ku[224|y>>12]+Ku[128|y>>6&63]+Ku[128|y&63];continue}A+=1,y=65536+((y&1023)<<10|d.charCodeAt(A)&1023),f[f.length]=Ku[240|y>>18]+Ku[128|y>>12&63]+Ku[128|y>>6&63]+Ku[128|y&63]}s+=f.join(\"\")}return s};function wte(e){return!e||typeof e!=\"object\"?!1:!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}function SN(e,t){if(U3e(e)){let r=[];for(let n=0;n<e.length;n+=1)r.push(t(e[n]));return r}return t(e)}var G3e=Object.prototype.hasOwnProperty,Rte={brackets(e){return String(e)+\"[]\"},comma:\"comma\",indices(e,t){return String(e)+\"[\"+t+\"]\"},repeat(e){return String(e)}},$u=Array.isArray,z3e=Array.prototype.push,Nte=function(e,t){z3e.apply(e,$u(t)?t:[t])},H3e=Date.prototype.toISOString,Oi={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:\"indices\",charset:\"utf-8\",charsetSentinel:!1,delimiter:\"&\",encode:!0,encodeDotInKeys:!1,encoder:Dte,encodeValuesOnly:!1,format:$I,formatter:jI[$I],indices:!1,serializeDate(e){return H3e.call(e)},skipNulls:!1,strictNullHandling:!1};function Y3e(e){return typeof e==\"string\"||typeof e==\"number\"||typeof e==\"boolean\"||typeof e==\"symbol\"||typeof e==\"bigint\"}var CN={};function Ote(e,t,r,n,a,i,s,c,d,f,A,y,C,v,I,w,D,x){let B=e,U=x,z=0,ee=!1;for(;(U=U.get(CN))!==void 0&&!ee;){let se=U.get(e);if(z+=1,typeof se<\"u\"){if(se===z)throw new RangeError(\"Cyclic object value\");ee=!0}typeof U.get(CN)>\"u\"&&(z=0)}if(typeof f==\"function\"?B=f(t,B):B instanceof Date?B=C?.(B):r===\"comma\"&&$u(B)&&(B=SN(B,function(se){return se instanceof Date?C?.(se):se})),B===null){if(i)return d&&!w?d(t,Oi.encoder,D,\"key\",v):t;B=\"\"}if(Y3e(B)||wte(B)){if(d){let se=w?t:d(t,Oi.encoder,D,\"key\",v);return[I?.(se)+\"=\"+I?.(d(B,Oi.encoder,D,\"value\",v))]}return[I?.(t)+\"=\"+I?.(String(B))]}let te=[];if(typeof B>\"u\")return te;let re;if(r===\"comma\"&&$u(B))w&&d&&(B=SN(B,d)),re=[{value:B.length>0?B.join(\",\")||null:void 0}];else if($u(f))re=f;else{let se=Object.keys(B);re=A?se.sort(A):se}let oe=c?String(t).replace(/\\./g,\"%2E\"):String(t),Z=n&&$u(B)&&B.length===1?oe+\"[]\":oe;if(a&&$u(B)&&B.length===0)return Z+\"[]\";for(let se=0;se<re.length;++se){let ue=re[se],Fe=typeof ue==\"object\"&&typeof ue.value<\"u\"?ue.value:B[ue];if(s&&Fe===null)continue;let Ne=y&&c?ue.replace(/\\./g,\"%2E\"):ue,_t=$u(B)?typeof r==\"function\"?r(Z,Ne):Z:Z+(y?\".\"+Ne:\"[\"+Ne+\"]\");x.set(e,z);let Ce=new WeakMap;Ce.set(CN,x),Nte(te,Ote(Fe,_t,r,n,a,i,s,c,r===\"comma\"&&w&&$u(B)?null:d,f,A,y,C,v,I,w,D,Ce))}return te}function q3e(e=Oi){if(typeof e.allowEmptyArrays<\"u\"&&typeof e.allowEmptyArrays!=\"boolean\")throw new TypeError(\"allowEmptyArrays option can only be true or false, when provided\");if(typeof e.encodeDotInKeys<\"u\"&&typeof e.encodeDotInKeys!=\"boolean\")throw new TypeError(\"encodeDotInKeys option can only be true or false, when provided\");if(e.encoder!==null&&typeof e.encoder<\"u\"&&typeof e.encoder!=\"function\")throw new TypeError(\"Encoder has to be a function.\");let t=e.charset||Oi.charset;if(typeof e.charset<\"u\"&&e.charset!==\"utf-8\"&&e.charset!==\"iso-8859-1\")throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");let r=$I;if(typeof e.format<\"u\"){if(!G3e.call(jI,e.format))throw new TypeError(\"Unknown format option provided.\");r=e.format}let n=jI[r],a=Oi.filter;(typeof e.filter==\"function\"||$u(e.filter))&&(a=e.filter);let i;if(e.arrayFormat&&e.arrayFormat in Rte?i=e.arrayFormat:\"indices\"in e?i=e.indices?\"indices\":\"repeat\":i=Oi.arrayFormat,\"commaRoundTrip\"in e&&typeof e.commaRoundTrip!=\"boolean\")throw new TypeError(\"commaRoundTrip must be a boolean, or absent\");let s=typeof e.allowDots>\"u\"?e.encodeDotInKeys?!0:Oi.allowDots:!!e.allowDots;return{addQueryPrefix:typeof e.addQueryPrefix==\"boolean\"?e.addQueryPrefix:Oi.addQueryPrefix,allowDots:s,allowEmptyArrays:typeof e.allowEmptyArrays==\"boolean\"?!!e.allowEmptyArrays:Oi.allowEmptyArrays,arrayFormat:i,charset:t,charsetSentinel:typeof e.charsetSentinel==\"boolean\"?e.charsetSentinel:Oi.charsetSentinel,commaRoundTrip:!!e.commaRoundTrip,delimiter:typeof e.delimiter>\"u\"?Oi.delimiter:e.delimiter,encode:typeof e.encode==\"boolean\"?e.encode:Oi.encode,encodeDotInKeys:typeof e.encodeDotInKeys==\"boolean\"?e.encodeDotInKeys:Oi.encodeDotInKeys,encoder:typeof e.encoder==\"function\"?e.encoder:Oi.encoder,encodeValuesOnly:typeof e.encodeValuesOnly==\"boolean\"?e.encodeValuesOnly:Oi.encodeValuesOnly,filter:a,format:r,formatter:n,serializeDate:typeof e.serializeDate==\"function\"?e.serializeDate:Oi.serializeDate,skipNulls:typeof e.skipNulls==\"boolean\"?e.skipNulls:Oi.skipNulls,sort:typeof e.sort==\"function\"?e.sort:null,strictNullHandling:typeof e.strictNullHandling==\"boolean\"?e.strictNullHandling:Oi.strictNullHandling}}function vN(e,t={}){let r=e,n=q3e(t),a,i;typeof n.filter==\"function\"?(i=n.filter,r=i(\"\",r)):$u(n.filter)&&(i=n.filter,a=i);let s=[];if(typeof r!=\"object\"||r===null)return\"\";let c=Rte[n.arrayFormat],d=c===\"comma\"&&n.commaRoundTrip;a||(a=Object.keys(r)),n.sort&&a.sort(n.sort);let f=new WeakMap;for(let C=0;C<a.length;++C){let v=a[C];n.skipNulls&&r[v]===null||Nte(s,Ote(r[v],v,c,d,n.allowEmptyArrays,n.strictNullHandling,n.skipNulls,n.encodeDotInKeys,n.encode?n.encoder:null,n.filter,n.sort,n.allowDots,n.serializeDate,n.format,n.formatter,n.encodeValuesOnly,n.charset,f))}let A=s.join(n.delimiter),y=n.addQueryPrefix===!0?\"?\":\"\";return n.charsetSentinel&&(n.charset===\"iso-8859-1\"?y+=\"utf8=%26%2310003%3B&\":y+=\"utf8=%E2%9C%93&\"),A.length>0?y+A:\"\"}g();g();var Zm=\"4.94.0\";g();g();g();var xte=!1,eg,bN,W3e,K3e,$3e,TN,j3e,JI,IN,DN,wN,XI,RN;function kte(e,t={auto:!1}){if(xte)throw new Error(you must \\import 'openai/shims/${e.kind}'\\ before importing anything else from openai);if(eg)throw new Error(can't \\import 'openai/shims/${e.kind}'\\ after \\import 'openai/shims/${eg}'\\);xte=t.auto,eg=e.kind,bN=e.fetch,W3e=e.Request,K3e=e.Response,$3e=e.Headers,TN=e.FormData,j3e=e.Blob,JI=e.File,IN=e.ReadableStream,DN=e.getMultipartRequestOptions,wN=e.getDefaultAgent,XI=e.fileFromPath,RN=e.isFsReadStream}g();var Z1=Le(hre(),1);g();g();mS();EO();import{inspect as Awe}from\"util\";g();B4();var Yne=e=>e instanceof ed;O4();g();import{deprecate as _we}from\"util\";var qne=_we(()=>{},'Constructor \"entries\" argument is not spec-compliant and will be removed in next major release.');var td=function(e,t,r,n){if(r===\"a\"&&!n)throw new TypeError(\"Private accessor was defined without a getter\");if(typeof t==\"function\"?e!==t||!n:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return r===\"m\"?n:r===\"a\"?n.call(e):n?n.value:t.get(e)},F4,rd,yO,P4=class{constructor(t){F4.add(this),rd.set(this,new Map),t&&(qne(),t.forEach(({name:r,value:n,fileName:a})=>this.append(r,n,a)))}static[(rd=new WeakMap,F4=new WeakSet,Symbol.hasInstance)](t){return!!(t&&ei(t.constructor)&&t[Symbol.toStringTag]===\"FormData\"&&ei(t.append)&&ei(t.set)&&ei(t.get)&&ei(t.getAll)&&ei(t.has)&&ei(t.delete)&&ei(t.entries)&&ei(t.values)&&ei(t.keys)&&ei(t[Symbol.iterator])&&ei(t.forEach))}append(t,r,n){td(this,F4,\"m\",yO).call(this,{name:t,fileName:n,append:!0,rawValue:r,argsLength:arguments.length})}set(t,r,n){td(this,F4,\"m\",yO).call(this,{name:t,fileName:n,append:!1,rawValue:r,argsLength:arguments.length})}get(t){let r=td(this,rd,\"f\").get(String(t));return r?r[0]:null}getAll(t){let r=td(this,rd,\"f\").get(String(t));return r?r.slice():[]}has(t){return td(this,rd,\"f\").has(String(t))}delete(t){td(this,rd,\"f\").delete(String(t))}*keys(){for(let t of td(this,rd,\"f\").keys())yield t}*entries(){for(let t of this.keys()){let r=this.getAll(t);for(let n of r)yield[t,n]}}*values(){for(let[,t]of this)yield t}[(yO=function({name:r,rawValue:n,append:a,fileName:i,argsLength:s}){let c=a?\"append\":\"set\";if(s<2)throw new TypeError(Failed to execute '${c}' on 'FormData': 2 arguments required, but only ${s} present.);r=String(r);let d;if(hO(n))d=i===void 0?n:new zc([n],i,{type:n.type,lastModified:n.lastModified});else if(Yne(n))d=new zc([n],i===void 0?\"blob\":i,{type:n.type});else{if(i)throw new TypeError(Failed to execute '${c}' on 'FormData': parameter 2 is not of type 'Blob'.);d=String(n)}let f=td(this,rd,\"f\").get(r);if(!f)return void td(this,rd,\"f\").set(r,[d]);if(!a)return void td(this,rd,\"f\").set(r,[d]);f.push(d)},Symbol.iterator)](){return this.entries()}forEach(t,r){for(let[n,a]of this)t.call(r,a,n,this)}get[Symbol.toStringTag](){return\"FormData\"}[Awe.custom](){return this[Symbol.toStringTag]}};B4();mS();var MO=Le(nae(),1),Oae=Le(_ae(),1);import{ReadStream as $we}from\"node:fs\";g();g();g();var Aae=\"abcdefghijklmnopqrstuvwxyz0123456789\";function Bwe(){let e=16,t=\"\";for(;e--;)t+=Aae[Math.random()*Aae.length<<0];return t}var hae=Bwe;g();var Lwe=e=>Object.prototype.toString.call(e).slice(8,-1).toLowerCase();function Mwe(e){if(Lwe(e)!==\"object\")return!1;let t=Object.getPrototypeOf(e);return t==null?!0:(t.constructor&&t.constructor.toString())===Object.toString()}var OO=Mwe;g();var Fwe=e=>String(e).replace(/\\r|\\n/g,(t,r,n)=>t===\"\\r\"&&n[r+1]!==\n                                                                                                                                                                                                                                                                    ^\n\n**Error: Sandbox was mandated, but no sandbox is available!**\n    at Q3e (file:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:439:254)\n    at async EN (file:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:437:5568)\n    at async Tte (file:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:437:4863)\n    at async R0.handleFunctionCall (file:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:461:3960)\n    at async R0.processEventsWithoutStreaming (file:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:462:4719)\n    at async R0.run (file:///C:/Users/crave/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:462:3045)\n\nNode.js v22.14.0",
      "labels": [],
      "linked_prs": [
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1770,
          "state": "closed",
          "title": "Add a TurnDiffTracker to create a unified diff for an entire turn",
          "url": "https://github.com/openai/codex/pull/1770",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1771,
          "state": "closed",
          "title": "do not dispatch key releases",
          "url": "https://github.com/openai/codex/pull/1771",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1772,
          "state": "closed",
          "title": "fix: always send KeyEvent, we now check kind in the handler",
          "url": "https://github.com/openai/codex/pull/1772",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1774,
          "state": "closed",
          "title": "fix insert_history modifier handling",
          "url": "https://github.com/openai/codex/pull/1774",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The error \"Sandbox was mandated, but no sandbox is available!\" indicates a problem related to LLM operation, specifically model access misconfiguration or environment setup, which is tied to the agent's execution environment."
      }
    },
    {
      "number": 182,
      "title": "Remove redundant thinking updates",
      "url": "https://github.com/openai/codex/issues/182",
      "state": "closed",
      "created_at": "2025-04-17T03:44:12Z",
      "closed_at": "2025-04-17T15:13:31Z",
      "body": "```\n    thinking for 201s\n\n    thinking for 201s\n\n    thinking for 202s\n\n    thinking for 202s\n\n    thinking for 202s\n```\n\nI don't know if this is intended or not, but I occasionally will get a group of these thinking responses within a second or two of each other, typically in groups of five before a command is displayed.\n\n```\n    thinking for 59s\n\n    thinking for 59s\n\n    thinking for 59s\n\n    thinking for 59s\n\n    thinking for 60s\n\n    command\n```\n\nThis takes up vertical space in terminal without giving useful information.",
      "labels": [
        "bug",
        "good first issue"
      ],
      "linked_prs": [
        {
          "number": 1824,
          "state": "closed",
          "title": "show a transient history cell for commands",
          "url": "https://github.com/openai/codex/pull/1824",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1826,
          "state": "closed",
          "title": "Restore API key and query param overrides",
          "url": "https://github.com/openai/codex/pull/1826",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1828,
          "state": "closed",
          "title": "[codex] stop printing error message when --output-last-message is not specified",
          "url": "https://github.com/openai/codex/pull/1828",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2317,
          "state": "closed",
          "title": "fix: move general sandbox tests to codex-rs/core/tests/sandbox.rs",
          "url": "https://github.com/openai/codex/pull/2317",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 216,
          "state": "closed",
          "title": "bugfix: remove redundant thinking updates and put a thinking timer above the prompt instead",
          "url": "https://github.com/openai/codex/pull/216",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1820,
          "state": "closed",
          "title": "support more keys in textarea",
          "url": "https://github.com/openai/codex/pull/1820",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1822,
          "state": "closed",
          "title": "Initial implementation of /init",
          "url": "https://github.com/openai/codex/pull/1822",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1823,
          "state": "closed",
          "title": "test(core): add seatbelt sem lock tests",
          "url": "https://github.com/openai/codex/pull/1823",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes agent workflow anomalies, specifically repeated \"thinking\" updates that do not provide useful information, indicating a problem with the agent's orchestration or execution flow."
      }
    },
    {
      "number": 183,
      "title": "Keep thinking",
      "url": "https://github.com/openai/codex/issues/183",
      "state": "closed",
      "created_at": "2025-04-17T03:52:59Z",
      "closed_at": "2025-08-07T18:02:46Z",
      "body": "it's about my API key issue？\n\n![Image](https://github.com/user-attachments/assets/2086183f-5f44-484d-8ade-2283634bc359)\n\n![Image](https://github.com/user-attachments/assets/181066ca-17e3-4dfd-b079-6066f3602128)",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1830,
          "state": "closed",
          "title": "Scrollable slash commands",
          "url": "https://github.com/openai/codex/pull/1830",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1834,
          "state": "closed",
          "title": "Request the simplified auth flow",
          "url": "https://github.com/openai/codex/pull/1834",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1836,
          "state": "closed",
          "title": "[prompts] Better user_instructions handling",
          "url": "https://github.com/openai/codex/pull/1836",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1837,
          "state": "closed",
          "title": "fix: disable reorderArrays in tamasfe.even-better-toml",
          "url": "https://github.com/openai/codex/pull/1837",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1838,
          "state": "closed",
          "title": "chore: introduce ModelFamily abstraction",
          "url": "https://github.com/openai/codex/pull/1838",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1839,
          "state": "closed",
          "title": "[prompt] Update prompt.md",
          "url": "https://github.com/openai/codex/pull/1839",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue explicitly references an API key, which is tied to LLM provider usage, indicating a potential misconfiguration or authentication problem related to LLM operation."
      }
    },
    {
      "number": 187,
      "title": "something about having an insuficient quota",
      "url": "https://github.com/openai/codex/issues/187",
      "state": "closed",
      "created_at": "2025-04-17T04:19:34Z",
      "closed_at": "2025-04-19T14:24:30Z",
      "body": "I have my model set to 4o and have this error when i ask it anything\n```\n\nfile:///C:/Users/Eli%20Mindell/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:445\n`,\"\\r\"]);gg.NEWLINE_REGEXP=/\\r\\n|[\\n\\r]/g;function nRe(e,t){for(let a=t??0;a<e.length;a++){if(e[a]===10)return{preceding:a,index:a+1,carriage:!1};if(e[a]===13)return{preceding:a,index:a+1,carriage:!0}}return null}function kae(e){for(let n=0;n<e.length-1;n++){if(e[n]===10&&e[n+1]===10||e[n]===13&&e[n+1]===13)return n+2;if(e[n]===13&&e[n+1]===10&&n+3<e.length&&e[n+2]===13&&e[n+3]===10)return n+4}return-1}g();function PO(e){if(e[Symbol.asyncIterator])return e;let t=e.getReader();return{async next(){try{let r=await t.read();return r?.done&&t.releaseLock(),r}catch(r){throw t.releaseLock(),r}},async return(){let r=t.cancel();return t.releaseLock(),await r,{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}}}var ad=class e{constructor(t,r){this.iterator=t,this.controller=r}static fromSSEResponse(t,r){let n=!1;async function*a(){if(n)throw new Error(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");n=!0;let i=!1;try{for await(let s of aRe(t,r))if(!i){if(s.data.startsWith(\"[DONE]\")){i=!0;continue}if(s.event===null||s.event.startsWith(\"response.\")||s.event.startsWith(\"transcript.\")){let c;try{c=JSON.parse(s.data)}catch(d){throw console.error(\"Could not parse message into JSON:\",s.data),console.error(\"From chunk:\",s.raw),d}if(c&&c.error)throw new mi(void 0,c.error,void 0,UO(t.headers));yield c}else{let c;try{c=JSON.parse(s.data)}catch(d){throw console.error(\"Could not parse message into JSON:\",s.data),console.error(\"From chunk:\",s.raw),d}if(s.event==\"error\")throw new mi(void 0,c.error,c.message,void 0);yield{event:s.event,data:c}}}i=!0}catch(s){if(s instanceof Error&&s.name===\"AbortError\")return;throw s}finally{i||r.abort()}}return new e(a,r)}static fromReadableStream(t,r){let n=!1;async function*a(){let s=new gg,c=PO(t);for await(let d of c)for(let f of s.decode(d))yield f;for(let d of s.flush())yield d}async function*i(){if(n)throw new Error(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");n=!0;let s=!1;try{for await(let c of a())s||c&&(yield JSON.parse(c));s=!0}catch(c){if(c instanceof Error&&c.name===\"AbortError\")return;throw c}finally{s||r.abort()}}return new e(i,r)}[Symbol.asyncIterator](){return this.iterator()}tee(){let t=[],r=[],n=this.iterator(),a=i=>({next:()=>{if(i.length===0){let s=n.next();t.push(s),r.push(s)}return i.shift()}});return[new e(()=>a(t),this.controller),new e(()=>a(r),this.controller)]}toReadableStream(){let t=this,r,n=new TextEncoder;return new IN({async start(){r=t[Symbol.asyncIterator]()},async pull(a){try{let{value:i,done:s}=await r.next();if(s)return a.close();let c=n.encode(JSON.stringify(i)+`\nn\ne [Error]: You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.\n    at e.a [as iterator] (file:///C:/Users/Eli%20Mindell/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:445:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async R0.run (file:///C:/Users/Eli%20Mindell/AppData/Roaming/npm/node_modules/@openai/codex/dist/cli.js:462:2639) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'insufficient_quota',\n    code: 'insufficient_quota',\n    message: 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.',\n    param: null\n  },\n  code: 'insufficient_quota',\n  param: null,\n  type: 'insufficient_quota'\n}\n\nNode.js v22.11.0\n\nC:\\Users\\Eli Mindell\\OneDrive\\Documents\\FlutterProject12039>npm install -g @openai/codex\nnpm warn deprecated lodash.isequal@4.5.0: This package is deprecated. Use require('node:util').isDeepStrictEqual instead.\n\nchanged 162 packages in 6s\n\n57 packages are looking for funding\n  run `npm fund` for details\n```",
      "labels": [],
      "linked_prs": [
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1870,
          "state": "closed",
          "title": "clear terminal on launch",
          "url": "https://github.com/openai/codex/pull/1870",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1871,
          "state": "closed",
          "title": "tweak comment",
          "url": "https://github.com/openai/codex/pull/1871",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1872,
          "state": "closed",
          "title": "fix: only tag as prerelease when the version has an -alpha or -beta suffix",
          "url": "https://github.com/openai/codex/pull/1872",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1873,
          "state": "closed",
          "title": "[feat] add /status slash command",
          "url": "https://github.com/openai/codex/pull/1873",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1874,
          "state": "closed",
          "title": "fix: add stricter checks and better error messages to create_github_release.sh",
          "url": "https://github.com/openai/codex/pull/1874",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1875,
          "state": "closed",
          "title": "docs: add more detail to the codex-rust-review",
          "url": "https://github.com/openai/codex/pull/1875",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1876,
          "state": "closed",
          "title": "First pass at a TUI onboarding",
          "url": "https://github.com/openai/codex/pull/1876",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1877,
          "state": "closed",
          "title": "[tests] Investigate flakey mcp-server test",
          "url": "https://github.com/openai/codex/pull/1877",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 367,
          "state": "closed",
          "title": "gracefully handle SSE parse errors and suppress raw parser code",
          "url": "https://github.com/openai/codex/pull/367",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue explicitly references an LLM provider (OpenAI) and involves a quota error related to API usage, which is tied to LLM provider integration and operation. This aligns with the criteria for an agent issue."
      }
    },
    {
      "number": 188,
      "title": "Warning: model \"o4-mini\" is not in the list of available models returned by OpenAI.",
      "url": "https://github.com/openai/codex/issues/188",
      "state": "closed",
      "created_at": "2025-04-17T04:28:47Z",
      "closed_at": "2025-04-17T04:43:32Z",
      "body": "When I try to run the Codex CLI I get the following warning and error:\n\n```\n    Warning: model \"o4-mini\" is not in the list of available models returned by OpenAI.\n```\n\n![Image](https://github.com/user-attachments/assets/c821e9cb-ce87-46fd-8203-2108bbec7ac1)\n\nNot sure why it wouldn't be available for me, I have $15 balance, I checked that the API key is valid and working. And also located in the US",
      "labels": [],
      "linked_prs": [
        {
          "number": 1880,
          "state": "closed",
          "title": "feat: interrupt running task on ctrl-z",
          "url": "https://github.com/openai/codex/pull/1880",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1881,
          "state": "closed",
          "title": "feat: update launch screen",
          "url": "https://github.com/openai/codex/pull/1881",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1884,
          "state": "closed",
          "title": "[env] Remove git config for now",
          "url": "https://github.com/openai/codex/pull/1884",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1886,
          "state": "closed",
          "title": "chore: rename INIT.md to prompt_for_init_command.md and move closer to usage",
          "url": "https://github.com/openai/codex/pull/1886",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 1887,
          "state": "closed",
          "title": "fix: add more instructions to ensure GitHub Action reviews only the necessary code",
          "url": "https://github.com/openai/codex/pull/1887",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an unsupported model warning from OpenAI, indicating a problem with LLM provider integration, specifically under the \"Unsupported models\" sub-category of agent issues."
      }
    },
    {
      "number": 202,
      "title": "[Feature Request] Enable local llm mode for offline use.",
      "url": "https://github.com/openai/codex/issues/202",
      "state": "closed",
      "created_at": "2025-04-17T06:22:20Z",
      "closed_at": "2025-04-17T21:12:58Z",
      "body": "It would be great to have the option to run local llm models via ollama or llm studio for an offline mode when internet is not available or not an option etc.",
      "labels": [],
      "linked_prs": [
        {
          "number": 2028,
          "state": "closed",
          "title": "Show ChatGPT login URL during onboarding",
          "url": "https://github.com/openai/codex/pull/2028",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2029,
          "state": "closed",
          "title": "Re-add markdown streaming",
          "url": "https://github.com/openai/codex/pull/2029",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2023,
          "state": "closed",
          "title": "Fix multiline exec command rendering",
          "url": "https://github.com/openai/codex/pull/2023",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue is a feature request related to LLM provider integration, specifically enabling local LLM models for offline use, which aligns with agent issues concerning LLM operation and model access configurations."
      }
    },
    {
      "number": 204,
      "title": "no o3 model in list",
      "url": "https://github.com/openai/codex/issues/204",
      "state": "closed",
      "created_at": "2025-04-17T06:35:06Z",
      "closed_at": "2025-08-07T18:18:10Z",
      "body": "│ localhost session: 5ea6def79ff24dd6b2b2bc451da1518f          │\n│ ↳ workdir: ~/Documents/CodexCLI                              │\n│ ↳ model: o3                                                  │\n│ ↳ approval: suggest                                          │\n╰──────────────────────────────────────────────────────────────╯\n\n    system\n    Warning: model \"o3\" is not in the list of available models returned by\n    OpenAI.\n",
      "labels": [
        "question"
      ],
      "linked_prs": [
        {
          "number": 2048,
          "state": "closed",
          "title": "chore: remove the TypeScript code from the repository",
          "url": "https://github.com/openai/codex/pull/2048",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2049,
          "state": "closed",
          "title": "Chores: Refactor approval Patch UI. Stack: [1/2]",
          "url": "https://github.com/openai/codex/pull/2049",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2050,
          "state": "closed",
          "title": "TUI: Show apply patch diff. Stack: [2/2]",
          "url": "https://github.com/openai/codex/pull/2050",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2040,
          "state": "closed",
          "title": "feat: include Windows binary of the CLI in the npm release",
          "url": "https://github.com/openai/codex/pull/2040",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2042,
          "state": "closed",
          "title": "Use certifi certificate when available",
          "url": "https://github.com/openai/codex/pull/2042",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2043,
          "state": "closed",
          "title": "fix: try building the npm package in CI",
          "url": "https://github.com/openai/codex/pull/2043",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2046,
          "state": "closed",
          "title": "Format large numbers in a more readable way.",
          "url": "https://github.com/openai/codex/pull/2046",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an unsupported model (\"o3\") not being recognized by the LLM provider (OpenAI), which aligns with the \"Unsupported models\" sub-category of agent issues."
      }
    },
    {
      "number": 205,
      "title": "[Feature Request] .codexignore file",
      "url": "https://github.com/openai/codex/issues/205",
      "state": "closed",
      "created_at": "2025-04-17T06:41:41Z",
      "closed_at": "2025-08-07T18:18:17Z",
      "body": "Add support for removing files and path from codex.\n\nIntended use is to prevent files that contain sensitive data from being sent to the AI model. For example test files with sensitive input data for testing.\n\nThe .codexignore file is similar to a .gitignore file and contains paths that aren't read/updated by the AI.",
      "labels": [],
      "linked_prs": [
        {
          "number": 2049,
          "state": "closed",
          "title": "Chores: Refactor approval Patch UI. Stack: [1/2]",
          "url": "https://github.com/openai/codex/pull/2049",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2050,
          "state": "closed",
          "title": "TUI: Show apply patch diff. Stack: [2/2]",
          "url": "https://github.com/openai/codex/pull/2050",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2053,
          "state": "closed",
          "title": "[core] Allow resume after client errors",
          "url": "https://github.com/openai/codex/pull/2053",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2054,
          "state": "closed",
          "title": "feat: allow esc to interrupt session",
          "url": "https://github.com/openai/codex/pull/2054",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2055,
          "state": "closed",
          "title": "fix: improve npm release process",
          "url": "https://github.com/openai/codex/pull/2055",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2056,
          "state": "closed",
          "title": "Trace RAW sse events",
          "url": "https://github.com/openai/codex/pull/2056",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue relates to prompt management and LLM operation by suggesting a feature to prevent certain files from being sent to the AI model, which aligns with prompt-related issues and model operation concerns in agent systems."
      }
    },
    {
      "number": 224,
      "title": "OpenAI rejected the request",
      "url": "https://github.com/openai/codex/issues/224",
      "state": "closed",
      "created_at": "2025-04-17T09:52:26Z",
      "closed_at": "2025-08-07T18:18:27Z",
      "body": "⚠️  OpenAI rejected the request (request ID: req_807b5f248c8df9365ddfb64e0991673e). Please verify your\n    settings and try again.\n\nI got the above error after some connection issues (using codex on the move with phone hotspot)\nAfter regaining internet connection, I wasn't able to end any more messages (kept getting this error for any message that I sent) and had to close the app (losing all context and then having to rebuild a lot).\n\n\n",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2272,
          "state": "closed",
          "title": "[prompt] xml-format EnvironmentContext",
          "url": "https://github.com/openai/codex/pull/2272",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2240,
          "state": "closed",
          "title": "chore: introduce ConversationManager as a clearinghouse for all conversations",
          "url": "https://github.com/openai/codex/pull/2240",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2242,
          "state": "closed",
          "title": "Fix build break and build release",
          "url": "https://github.com/openai/codex/pull/2242",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2243,
          "state": "closed",
          "title": "[context] Store context messages in rollouts",
          "url": "https://github.com/openai/codex/pull/2243",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2244,
          "state": "closed",
          "title": "Fix release build",
          "url": "https://github.com/openai/codex/pull/2244",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2245,
          "state": "closed",
          "title": "Show progress indicator for /diff command",
          "url": "https://github.com/openai/codex/pull/2245",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2246,
          "state": "closed",
          "title": "fix: display canonical command name in help",
          "url": "https://github.com/openai/codex/pull/2246",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2247,
          "state": "closed",
          "title": "Fix frontend test",
          "url": "https://github.com/openai/codex/pull/2247",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2249,
          "state": "closed",
          "title": "Update header from Working once batched commands are done",
          "url": "https://github.com/openai/codex/pull/2249",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider usage, specifically an error related to OpenAI request rejection, which aligns with LLM operation issues such as model access misconfiguration or context length issues."
      }
    },
    {
      "number": 229,
      "title": "WIN/PS - Insists on using sh - assumes linux/mac - assumes chat wants to tool",
      "url": "https://github.com/openai/codex/issues/229",
      "state": "closed",
      "created_at": "2025-04-17T11:45:31Z",
      "closed_at": "2025-08-07T18:18:31Z",
      "body": "# Tried this in Powershell -- needs some TLC\n> I don't use powershell as my default except on Windows. I'm sure this would have been OK in linux/mac (I'll test those too). I happened to be on Windows this morning because I was gaming last night before bed.\n\n1. Codex used my wsl installation to run commands (this is fine)\n2. It failed at using it though.\n3. It couldn't even figure out how to list the files using native Powershell and eventually used `git ls-files` (clever)\n\n## Shouldn't codex know what OS it's on and leverage the shell it is currently running from?\n- `dir`, or such would have worked straight away\n- because codex knew it was possible to try `wsl` it must have also known it was running on Windows?\n\n## After this, I simply asked \"What is the difference between o4-mini and o3-mini\"\n1. It tried to treat these models as files by grepping for them. \n2. It eventually got it right that these were models.\n\nThis seems odd, and I know this is new so wanted to report it. \n\nI love that you're providing us a CLI! It just needs some TLC and context awareness.\n\nI'd suggest some basic awareness if it's not already in place:\n- OS\n- Current shell / parent process\n- Environment variables from the OS\n- Introspection on available tooling (gnu, native windows, native mac, whatever, and any available package managers brew, choco, npm, etc.)\n- Perhaps a deeper introspection could be run at first start and later re-run to refresh it or something, where shallow introspection could just look at the shell, env, etc. and refer to what was previously found? (just an idea)\n\nThanks OpenAI!",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2294,
          "state": "closed",
          "title": "Port login server to rust",
          "url": "https://github.com/openai/codex/pull/2294",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2291,
          "state": "closed",
          "title": "exploration: create Session as part of Codex::spawn()",
          "url": "https://github.com/openai/codex/pull/2291",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2326,
          "state": "closed",
          "title": "Fix #2296 Add \"minimal\" reasoning effort for GPT 5 models",
          "url": "https://github.com/openai/codex/pull/2326",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2305,
          "state": "closed",
          "title": "fix: parallelize logic in Session::new()",
          "url": "https://github.com/openai/codex/pull/2305",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation failures and workflow anomalies, as the Codex agent incorrectly attempts to use shell commands and misidentifies models as files. It suggests improvements in context awareness, which aligns with agent-specific components related to tool invocation and workflow management."
      }
    },
    {
      "number": 230,
      "title": "feat: Add the ability to run `/compact`",
      "url": "https://github.com/openai/codex/issues/230",
      "state": "closed",
      "created_at": "2025-04-17T12:20:45Z",
      "closed_at": "2025-08-07T18:18:35Z",
      "body": "Add the ability to summarise the existing conversation and clear context, adding only the summarised message to the context (similar to Claude Code).",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2304,
          "state": "closed",
          "title": "Tag InputItem",
          "url": "https://github.com/openai/codex/pull/2304",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2305,
          "state": "closed",
          "title": "fix: parallelize logic in Session::new()",
          "url": "https://github.com/openai/codex/pull/2305",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2306,
          "state": "closed",
          "title": "AGENTS.md more strongly suggests running targeted tests first",
          "url": "https://github.com/openai/codex/pull/2306",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2307,
          "state": "closed",
          "title": "remove logs from composer by default",
          "url": "https://github.com/openai/codex/pull/2307",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2308,
          "state": "closed",
          "title": "fix: do not allow dotenv to create/modify environment variables starting with CODEX_",
          "url": "https://github.com/openai/codex/pull/2308",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2309,
          "state": "closed",
          "title": "Fix AF_UNIX, sockpair, recvfrom in linux sandbox",
          "url": "https://github.com/openai/codex/pull/2309",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2539,
          "state": "closed",
          "title": "[apply-patch] Clean up apply-patch tool definitions",
          "url": "https://github.com/openai/codex/pull/2539",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2302,
          "state": "closed",
          "title": "text elements in textarea for pasted content",
          "url": "https://github.com/openai/codex/pull/2302",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2303,
          "state": "closed",
          "title": "[tools] Add apply_patch tool",
          "url": "https://github.com/openai/codex/pull/2303",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves memory-related behavior, specifically summarizing and managing conversation context, which aligns with memory content errors or memory initialization issues in agent systems."
      }
    },
    {
      "number": 231,
      "title": "Add automatic retry with backoff for rate limit errors",
      "url": "https://github.com/openai/codex/issues/231",
      "state": "closed",
      "created_at": "2025-04-17T12:32:20Z",
      "closed_at": "2025-04-17T21:41:46Z",
      "body": "When running Codex, I encountered a rate limit error that caused the entire application to exit immediately:\n\n`[Error]: Rate limit reached for o4-mini in organization org-xxxxxxxxxx on tokens per min (TPM): Limit 200000, Used 164863, Requested 38980. Please try again in 1.152s. Visit https://platform.openai.com/account/rate-limits to learn more.`\n\nThe error message itself suggests waiting 1.152 seconds before retrying, but instead of implementing this wait-and-retry logic, the application exits completely. This results in wasted resources and a poor user experience, as users must manually restart the process.\n\nEnvironment:\nNode.js: v22.14.0\nOS: Ubuntu 24 LTS\n\nProposed Solution:\nImplement automatic retry logic with exponential backoff for rate limit errors. Since the API response already specifies the recommended wait time (1.152s in this case), the application could:\n\nCatch rate limit exceptions:\n- Parse the suggested wait time from the error message\n- Wait for the specified duration (plus a small buffer)\n- Automatically retry the request\n- Implement a maximum retry count to prevent infinite loops\n\nThis would significantly improve user experience and prevent wasted resources.",
      "labels": [],
      "linked_prs": [
        {
          "number": 2313,
          "state": "closed",
          "title": "fix bash commands being incorrectly quoted in display",
          "url": "https://github.com/openai/codex/pull/2313",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2314,
          "state": "closed",
          "title": "replace /prompts with a rotating placeholder",
          "url": "https://github.com/openai/codex/pull/2314",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2524,
          "state": "closed",
          "title": "refactor onboarding screen to a separate \"app\"",
          "url": "https://github.com/openai/codex/pull/2524",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2316,
          "state": "closed",
          "title": "hide CoT by default; show headers in status indicator",
          "url": "https://github.com/openai/codex/pull/2316",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2317,
          "state": "closed",
          "title": "fix: move general sandbox tests to codex-rs/core/tests/sandbox.rs",
          "url": "https://github.com/openai/codex/pull/2317",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2318,
          "state": "closed",
          "title": "fix: run python_multiprocessing_lock_works integration test on Mac and Linux",
          "url": "https://github.com/openai/codex/pull/2318",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2319,
          "state": "closed",
          "title": "Bridge command generation to powershell when on Windows",
          "url": "https://github.com/openai/codex/pull/2319",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves handling rate limit errors from an LLM provider, which relates to LLM operation issues, specifically token usage misconfiguration and model access misconfiguration. The proposed solution involves modifying the agent's workflow to include automatic retry logic, aligning with agent issue criteria."
      }
    },
    {
      "number": 232,
      "title": "Error: Sandbox was mandated, but no sandbox is available!",
      "url": "https://github.com/openai/codex/issues/232",
      "state": "closed",
      "created_at": "2025-04-17T12:41:36Z",
      "closed_at": "2025-04-17T21:40:21Z",
      "body": "Hello everyone!\n\nI am having this issue. What would be?\n\n```\nboomg@LAPTOP-GD55J8ID MINGW64 ~/Documents/workspace/ws-web/landing-page-yagua (main)\n$ codex\n╭──────────────────────────────────────────────────────────────╮\n│ ● OpenAI Codex (research preview) v0.1.2504161551            │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: 05704d5922a9489b91365fa3b0800bc7          │\n│ ↳ workdir: ~\\...\\ws-web\\landing-page-yagua                   │\n│ ↳ model: o4-mini                                             │\n│ ↳ approval: suggest                                          │\n╰──────────────────────────────────────────────────────────────╯\n\n    system\n    Switched approval mode to full-auto\n\n    system\n    Switched model to o4-mini\n\n    system\n    Switched model to gpt-4.1-mini\nuser\nHey!\n\n    codex\n    Hey! How can I help you today?\nuser\nHey!\n\nCan you do a mockup, using Plain HTML/CSS with the most recent best pratices. Follows this webpage:\nhttps://materiais.syos.com/solucao-syos-para-supermercado?utm_source=facebook&utm_medium=cpc&utm_campaign=interesses-2025&dk_placement=feed&dk_target=grupo-\n7&dk_ad=supermercados-pricing&dk_canal=midia-paga&utm_id=120216122827630135&utm_content=120220233288930135&utm_term=120220233288880135&fbclid=PAY2xjawJjkl9l\neHRuA2FlbQEwAGFkaWQBqxuqdfcflwGn6QSFcPFmFOytPgd2ZQZHsEIqCwGZ01XziVU_l23jIzk_pXBHujB8RPgTnWg_aem_LLKjXwKPpUYgah9MvgXp-g . In this first moment, you can apply\n chances in the best way you will find.\n\n    codex\n    Got it. I'll create a plain HTML/CSS mockup based on the referenced webpage using modern best practices, focusing on semantic structure, responsiveness,\n     accessibility, and clean styling. I'll adapt and improve the structure and style where it makes sense, but not replicate the entire page content (only\n    the visible main layout and structure elements).\n\n    Let's start with a simple but scalable layout that contains:\n\n        * A header with navigation and branding\n        * A main hero section with headline, subhead, and CTA\n        * Some feature/info sections below\n        * A footer\n\n    I'll create a new file with the mockup now.\n\n    command\n\n    $ head -70\n\n    command.stdout (code: 0, duration: 0.1s)\n\n╭──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│(   ●  )  Thinking.                                                                                                                                       │\n╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n  send q or ctrl+c to exit | send \"/clear\" to reset | send \"/help\" for commands | press enter to send\n\nfile:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:439\n        STDERR: ${d}`),{stdout:c,stderr:d,exitCode:f,durationMs:s}}var P3e=async()=>{try{return await F3e(\"/proc/1/cgroup\"),!0}catch{return!1}};async function Q3e(e){if(e){if(process.platform===\"darwin\")return\"macos.seatbelt\";if(await P3e())return\"none\";throw new Error(\"Sandbox was mandated, but no sandbox is available!\")}else return\"none\"}async function Cte(e,t,r){let{review:n,customDenyMessage:a}=await r(e.cmd,t);if(n===\"always\"){let i=bte(e.cmd);vte.add(i)}if(n!==\"yes\"&&n!==\"always\"){let i=n===\"no-continue\"?a?.trim()||\"No, don't do that \\u2014 keep going though.\":\"No, don't do that \\u2014 stop for now.\";return{outputText:\"aborted\",metadata:{},additionalItems:[{type:\"message\",role:\"user\",content:[{type:\"input_text\",text:i}]}]}}else return null}import{randomUUID as sNe}from\"node:crypto\";g();g();g();var $I=\"RFC3986\",jI={RFC1738:e=>String(e).replace(/%20/g,\"+\"),RFC3986:e=>String(e)},Ite=\"RFC1738\";g();g();var U3e=Array.isArray,Ku=(()=>{let e=[];for(let t=0;t<256;++t)e.push(\"%\"+((t<16?\"0\":\"\")+t.toString(16)).toUpperCase());return e})();var yN=1024,Dte=(e,t,r,n,a)=>{if(e.length===0)return e;let i=e;if(typeof e==\"symbol\"?i=Symbol.prototype.toString.call(e):typeof e!=\"string\"&&(i=String(e)),r===\"iso-8859-1\")return escape(i).replace(/%u[0-9a-f]{4}/gi,function(c){return\"%26%23\"+parseInt(c.slice(2),16)+\"%3B\"});let s=\"\";for(let c=0;c<i.length;c+=yN){let d=i.length>=yN?i.slice(c,c+yN):i,f=[];for(let A=0;A<d.length;++A){let y=d.charCodeAt(A);if(y===45||y===46||y===95||y===126||y>=48&&y<=57||y>=65&&y<=90||y>=97&&y<=122||a===Ite&&(y===40||y===41)){f[f.length]=d.charAt(A);continue}if(y<128){f[f.length]=Ku[y];continue}if(y<2048){f[f.length]=Ku[192|y>>6]+Ku[128|y&63];continue}if(y<55296||y>=57344){f[f.length]=Ku[224|y>>12]+Ku[128|y>>6&63]+Ku[128|y&63];continue}A+=1,y=65536+((y&1023)<<10|d.charCodeAt(A)&1023),f[f.length]=Ku[240|y>>18]+Ku[128|y>>12&63]+Ku[128|y>>6&63]+Ku[128|y&63]}s+=f.join(\"\")}return s};function wte(e){return!e||typeof e!=\"object\"?!1:!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}function SN(e,t){if(U3e(e)){let r=[];for(let n=0;n<e.length;n+=1)r.push(t(e[n]));return r}return t(e)}var G3e=Object.prototype.hasOwnProperty,Rte={brackets(e){return String(e)+\"[]\"},comma:\"comma\",indices(e,t){return String(e)+\"[\"+t+\"]\"},repeat(e){return String(e)}},$u=Array.isArray,z3e=Array.prototype.push,Nte=function(e,t){z3e.apply(e,$u(t)?t:[t])},H3e=Date.prototype.toISOString,Oi={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:\"indices\",charset:\"utf-8\",charsetSentinel:!1,delimiter:\"&\",encode:!0,encodeDotInKeys:!1,encoder:Dte,encodeValuesOnly:!1,format:$I,formatter:jI[$I],indices:!1,serializeDate(e){return H3e.call(e)},skipNulls:!1,strictNullHandling:!1};function Y3e(e){return typeof e==\"string\"||typeof e==\"number\"||typeof e==\"boolean\"||typeof e==\"symbol\"||typeof e==\"bigint\"}var CN={};function Ote(e,t,r,n,a,i,s,c,d,f,A,y,C,v,I,w,D,x){let B=e,U=x,z=0,ee=!1;for(;(U=U.get(CN))!==void 0&&!ee;){let se=U.get(e);if(z+=1,typeof se<\"u\"){if(se===z)throw new RangeError(\"Cyclic object value\");ee=!0}typeof U.get(CN)>\"u\"&&(z=0)}if(typeof f==\"function\"?B=f(t,B):B instanceof Date?B=C?.(B):r===\"comma\"&&$u(B)&&(B=SN(B,function(se){return se instanceof Date?C?.(se):se})),B===null){if(i)return d&&!w?d(t,Oi.encoder,D,\"key\",v):t;B=\"\"}if(Y3e(B)||wte(B)){if(d){let se=w?t:d(t,Oi.encoder,D,\"key\",v);return[I?.(se)+\"=\"+I?.(d(B,Oi.encoder,D,\"value\",v))]}return[I?.(t)+\"=\"+I?.(String(B))]}let te=[];if(typeof B>\"u\")return te;let re;if(r===\"comma\"&&$u(B))w&&d&&(B=SN(B,d)),re=[{value:B.length>0?B.join(\",\")||null:void 0}];else if($u(f))re=f;else{let se=Object.keys(B);re=A?se.sort(A):se}let oe=c?String(t).replace(/\\./g,\"%2E\"):String(t),Z=n&&$u(B)&&B.length===1?oe+\"[]\":oe;if(a&&$u(B)&&B.length===0)return Z+\"[]\";for(let se=0;se<re.length;++se){let ue=re[se],Fe=typeof ue==\"object\"&&typeof ue.value<\"u\"?ue.value:B[ue];if(s&&Fe===null)continue;let Ne=y&&c?ue.replace(/\\./g,\"%2E\"):ue,_t=$u(B)?typeof r==\"function\"?r(Z,Ne):Z:Z+(y?\".\"+Ne:\"[\"+Ne+\"]\");x.set(e,z);let Ce=new WeakMap;Ce.set(CN,x),Nte(te,Ote(Fe,_t,r,n,a,i,s,c,r===\"comma\"&&w&&$u(B)?null:d,f,A,y,C,v,I,w,D,Ce))}return te}function q3e(e=Oi){if(typeof e.allowEmptyArrays<\"u\"&&typeof e.allowEmptyArrays!=\"boolean\")throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");if(typeof e.encodeDotInKeys<\"u\"&&typeof e.encodeDotInKeys!=\"boolean\")throw new TypeError(\"`encodeDotInKeys` option can only be `true` or `false`, when provided\");if(e.encoder!==null&&typeof e.encoder<\"u\"&&typeof e.encoder!=\"function\")throw new TypeError(\"Encoder has to be a function.\");let t=e.charset||Oi.charset;if(typeof e.charset<\"u\"&&e.charset!==\"utf-8\"&&e.charset!==\"iso-8859-1\")throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");let r=$I;if(typeof e.format<\"u\"){if(!G3e.call(jI,e.format))throw new TypeError(\"Unknown format option provided.\");r=e.format}let n=jI[r],a=Oi.filter;(typeof e.filter==\"function\"||$u(e.filter))&&(a=e.filter);let i;if(e.arrayFormat&&e.arrayFormat in Rte?i=e.arrayFormat:\"indices\"in e?i=e.indices?\"indices\":\"repeat\":i=Oi.arrayFormat,\"commaRoundTrip\"in e&&typeof e.commaRoundTrip!=\"boolean\")throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");let s=typeof e.allowDots>\"u\"?e.encodeDotInKeys?!0:Oi.allowDots:!!e.allowDots;return{addQueryPrefix:typeof e.addQueryPrefix==\"boolean\"?e.addQueryPrefix:Oi.addQueryPrefix,allowDots:s,allowEmptyArrays:typeof e.allowEmptyArrays==\"boolean\"?!!e.allowEmptyArrays:Oi.allowEmptyArrays,arrayFormat:i,charset:t,charsetSentinel:typeof e.charsetSentinel==\"boolean\"?e.charsetSentinel:Oi.charsetSentinel,commaRoundTrip:!!e.commaRoundTrip,delimiter:typeof e.delimiter>\"u\"?Oi.delimiter:e.delimiter,encode:typeof e.encode==\"boolean\"?e.encode:Oi.encode,encodeDotInKeys:typeof e.encodeDotInKeys==\"boolean\"?e.encodeDotInKeys:Oi.encodeDotInKeys,encoder:typeof e.encoder==\"function\"?e.encoder:Oi.encoder,encodeValuesOnly:typeof e.encodeValuesOnly==\"boolean\"?e.encodeValuesOnly:Oi.encodeValuesOnly,filter:a,format:r,formatter:n,serializeDate:typeof e.serializeDate==\"function\"?e.serializeDate:Oi.serializeDate,skipNulls:typeof e.skipNulls==\"boolean\"?e.skipNulls:Oi.skipNulls,sort:typeof e.sort==\"function\"?e.sort:null,strictNullHandling:typeof e.strictNullHandling==\"boolean\"?e.strictNullHandling:Oi.strictNullHandling}}function vN(e,t={}){let r=e,n=q3e(t),a,i;typeof n.filter==\"function\"?(i=n.filter,r=i(\"\",r)):$u(n.filter)&&(i=n.filter,a=i);let s=[];if(typeof r!=\"object\"||r===null)return\"\";let c=Rte[n.arrayFormat],d=c===\"comma\"&&n.commaRoundTrip;a||(a=Object.keys(r)),n.sort&&a.sort(n.sort);let f=new WeakMap;for(let C=0;C<a.length;++C){let v=a[C];n.skipNulls&&r[v]===null||Nte(s,Ote(r[v],v,c,d,n.allowEmptyArrays,n.strictNullHandling,n.skipNulls,n.encodeDotInKeys,n.encode?n.encoder:null,n.filter,n.sort,n.allowDots,n.serializeDate,n.format,n.formatter,n.encodeValuesOnly,n.charset,f))}let A=s.join(n.delimiter),y=n.addQueryPrefix===!0?\"?\":\"\";return n.charsetSentinel&&(n.charset===\"iso-8859-1\"?y+=\"utf8=%26%2310003%3B&\":y+=\"utf8=%E2%9C%93&\"),A.length>0?y+A:\"\"}g();g();var Zm=\"4.94.0\";g();g();g();var xte=!1,eg,bN,W3e,K3e,$3e,TN,j3e,JI,IN,DN,wN,XI,RN;function kte(e,t={auto:!1}){if(xte)throw new Error(`you must \\`import 'openai/shims/${e.kind}'\\` before importing anything else from openai`);if(eg)throw new Error(`can't \\`import 'openai/shims/${e.kind}'\\` after \\`import 'openai/shims/${eg}'\\``);xte=t.auto,eg=e.kind,bN=e.fetch,W3e=e.Request,K3e=e.Response,$3e=e.Headers,TN=e.FormData,j3e=e.Blob,JI=e.File,IN=e.ReadableStream,DN=e.getMultipartRequestOptions,wN=e.getDefaultAgent,XI=e.fileFromPath,RN=e.isFsReadStream}g();var Z1=Le(hre(),1);g();g();mS();EO();import{inspect as Awe}from\"util\";g();B4();var Yne=e=>e instanceof ed;O4();g();import{deprecate as _we}from\"util\";var qne=_we(()=>{},'Constructor \"entries\" argument is not spec-compliant and will be removed in next major release.');var td=function(e,t,r,n){if(r===\"a\"&&!n)throw new TypeError(\"Private accessor was defined without a getter\");if(typeof t==\"function\"?e!==t||!n:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return r===\"m\"?n:r===\"a\"?n.call(e):n?n.value:t.get(e)},F4,rd,yO,P4=class{constructor(t){F4.add(this),rd.set(this,new Map),t&&(qne(),t.forEach(({name:r,value:n,fileName:a})=>this.append(r,n,a)))}static[(rd=new WeakMap,F4=new WeakSet,Symbol.hasInstance)](t){return!!(t&&ei(t.constructor)&&t[Symbol.toStringTag]===\"FormData\"&&ei(t.append)&&ei(t.set)&&ei(t.get)&&ei(t.getAll)&&ei(t.has)&&ei(t.delete)&&ei(t.entries)&&ei(t.values)&&ei(t.keys)&&ei(t[Symbol.iterator])&&ei(t.forEach))}append(t,r,n){td(this,F4,\"m\",yO).call(this,{name:t,fileName:n,append:!0,rawValue:r,argsLength:arguments.length})}set(t,r,n){td(this,F4,\"m\",yO).call(this,{name:t,fileName:n,append:!1,rawValue:r,argsLength:arguments.length})}get(t){let r=td(this,rd,\"f\").get(String(t));return r?r[0]:null}getAll(t){let r=td(this,rd,\"f\").get(String(t));return r?r.slice():[]}has(t){return td(this,rd,\"f\").has(String(t))}delete(t){td(this,rd,\"f\").delete(String(t))}*keys(){for(let t of td(this,rd,\"f\").keys())yield t}*entries(){for(let t of this.keys()){let r=this.getAll(t);for(let n of r)yield[t,n]}}*values(){for(let[,t]of this)yield t}[(yO=function({name:r,rawValue:n,append:a,fileName:i,argsLength:s}){let c=a?\"append\":\"set\";if(s<2)throw new TypeError(`Failed to execute '${c}' on 'FormData': 2 arguments required, but only ${s} present.`);r=String(r);let d;if(hO(n))d=i===void 0?n:new zc([n],i,{type:n.type,lastModified:n.lastModified});else if(Yne(n))d=new zc([n],i===void 0?\"blob\":i,{type:n.type});else{if(i)throw new TypeError(`Failed to execute '${c}' on 'FormData': parameter 2 is not of type 'Blob'.`);d=String(n)}let f=td(this,rd,\"f\").get(r);if(!f)return void td(this,rd,\"f\").set(r,[d]);if(!a)return void td(this,rd,\"f\").set(r,[d]);f.push(d)},Symbol.iterator)](){return this.entries()}forEach(t,r){for(let[n,a]of this)t.call(r,a,n,this)}get[Symbol.toStringTag](){return\"FormData\"}[Awe.custom](){return this[Symbol.toStringTag]}};B4();mS();var MO=Le(nae(),1),Oae=Le(_ae(),1);import{ReadStream as $we}from\"node:fs\";g();g();g();var Aae=\"abcdefghijklmnopqrstuvwxyz0123456789\";function Bwe(){let e=16,t=\"\";for(;e--;)t+=Aae[Math.random()*Aae.length<<0];return t}var hae=Bwe;g();var Lwe=e=>Object.prototype.toString.call(e).slice(8,-1).toLowerCase();function Mwe(e){if(Lwe(e)!==\"object\")return!1;let t=Object.getPrototypeOf(e);return t==null?!0:(t.constructor&&t.constructor.toString())===Object.toString()}var OO=Mwe;g();var Fwe=e=>String(e).replace(/\\r|\\n/g,(t,r,n)=>t===\"\\r\"&&n[r+1]!==`\n                                                                                                                                                                                                                                                                    ^\n\nError: Sandbox was mandated, but no sandbox is available!\n    at Q3e (file:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:439:254)\n    at async EN (file:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:437:5568)\n    at async Tte (file:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:437:4863)\n    at async R0.handleFunctionCall (file:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:461:3960)\n    at async R0.processEventsWithoutStreaming (file:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:462:4719)\n    at async R0.run (file:///C:/Users/boomg/AppData/Roaming/nvm/v23.11.0/node_modules/@openai/codex/dist/cli.js:462:3045)\n\nNode.js v23.11.0\n```",
      "labels": [],
      "linked_prs": [
        {
          "number": 2338,
          "state": "closed",
          "title": "fix: tighten up checks against writable folders for SandboxPolicy",
          "url": "https://github.com/openai/codex/pull/2338",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2340,
          "state": "closed",
          "title": "fix: introduce MutexExt::lock_unchecked() so we stop ignoring unwrap() throughout codex.rs",
          "url": "https://github.com/openai/codex/pull/2340",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2343,
          "state": "closed",
          "title": "feat: introduce TurnContext",
          "url": "https://github.com/openai/codex/pull/2343",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2345,
          "state": "closed",
          "title": "feat: introduce ClientRequest::SendUserTurn",
          "url": "https://github.com/openai/codex/pull/2345",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2321,
          "state": "closed",
          "title": "add a timer to running exec commands",
          "url": "https://github.com/openai/codex/pull/2321",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2322,
          "state": "closed",
          "title": "fix: add call_id to ApprovalParams in mcp-server/src/wire_format.rs",
          "url": "https://github.com/openai/codex/pull/2322",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2324,
          "state": "closed",
          "title": "fix: ensure rust-ci always \"runs\" when a PR is submitted",
          "url": "https://github.com/openai/codex/pull/2324",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2325,
          "state": "closed",
          "title": "clear running commands in various places",
          "url": "https://github.com/openai/codex/pull/2325",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2326,
          "state": "closed",
          "title": "Fix #2296 Add \"minimal\" reasoning effort for GPT 5 models",
          "url": "https://github.com/openai/codex/pull/2326",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2327,
          "state": "closed",
          "title": "fix: trying to simplify rust-ci.yml",
          "url": "https://github.com/openai/codex/pull/2327",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2328,
          "state": "closed",
          "title": "Added `allow-expect-in-tests` / `allow-unwrap-in-tests`",
          "url": "https://github.com/openai/codex/pull/2328",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2329,
          "state": "closed",
          "title": "feat: introduce Op:UserTurn",
          "url": "https://github.com/openai/codex/pull/2329",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an error related to the OpenAI Codex, which is an LLM provider. The error message \"Sandbox was mandated, but no sandbox is available!\" suggests a problem with the LLM operation or configuration, aligning with the criteria for an agent issue."
      }
    },
    {
      "number": 233,
      "title": "Add built‑in exponential backoff & retry on OpenAI API rate‐limit errors",
      "url": "https://github.com/openai/codex/issues/233",
      "state": "closed",
      "created_at": "2025-04-17T12:53:45Z",
      "closed_at": "2025-04-22T22:42:26Z",
      "body": "## Summary\n\nCodex wrote this issue for me:\nCurrently any 429 \"rate limit\" response from the OpenAI API bubbles all the way out and causes the Codex‑CLI process to crash. We should instead catch rate‑limit errors, wait (with exponential back‑off), and retry automatically, so brief spikes don't kill the user's session.\n\n## Problem\n\n- Hitting the OpenAI API rate limit immediately aborts the CLI.\n- Users lose work/context when a single 429 becomes an unhandled exception.\n- There is no way to tune retry parameters or gracefully recover.\n\n## Proposal\n\n1. Introduce a helper, e.g. `codex/utils/openai_backoff.py`:\n   ```python\n   import time\n   from openai.error import RateLimitError, OpenAIError\n\n   def openai_with_backoff(fn, *args, max_retries=10, initial_delay=1.0, **kwargs):\n       \"\"\"\n       Wrap any OpenAI call (fn) so on RateLimitError it waits and retries\n       with exponential backoff (capped at e.g. 60s).\n       \"\"\"\n       delay = initial_delay\n       for attempt in range(max_retries):\n           try:\n               return fn(*args, **kwargs)\n           except RateLimitError:\n               print(f\"⏳ Rate limit hit, sleeping {delay:.1f}s (attempt {attempt+1}/{max_retries})\")\n               time.sleep(delay)\n               delay = min(delay * 2, 60.0)\n           except OpenAIError:\n               raise\n       raise RuntimeError(f\"OpenAI call failed after {max_retries} retries\")\n   ```\n\n2. Monkey‑patch the two main entrypoints in startup (e.g. in `codex/cli.py`):\n   ```python\n   import openai\n   from codex.utils.openai_backoff import openai_with_backoff\n\n   _orig_chat = openai.ChatCompletion.create\n   openai.ChatCompletion.create = lambda *args, **kw: openai_with_backoff(_orig_chat, *args, **kw)\n\n   _orig_comp = openai.Completion.create\n   openai.Completion.create = lambda *args, **kw: openai_with_backoff(_orig_comp, *args, **kw)\n   ```\n\n3. Expose `max_retries`/`initial_delay` in user config or CLI flags.\n4. Add unit tests that simulate `openai.error.RateLimitError` and verify retry logic.\n\n## Benefits\n\n* CLI no longer crashes on intermittent rate limits.\n* Configurable retry policy for power users.\n* Better out‑of‑the‑box resilience under heavy load.\n",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2336,
          "state": "closed",
          "title": "chore: remove duplicated lockfile",
          "url": "https://github.com/openai/codex/pull/2336",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2337,
          "state": "closed",
          "title": "color the status letter in apply patch summary",
          "url": "https://github.com/openai/codex/pull/2337",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2338,
          "state": "closed",
          "title": "fix: tighten up checks against writable folders for SandboxPolicy",
          "url": "https://github.com/openai/codex/pull/2338",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2340,
          "state": "closed",
          "title": "fix: introduce MutexExt::lock_unchecked() so we stop ignoring unwrap() throughout codex.rs",
          "url": "https://github.com/openai/codex/pull/2340",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2343,
          "state": "closed",
          "title": "feat: introduce TurnContext",
          "url": "https://github.com/openai/codex/pull/2343",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2345,
          "state": "closed",
          "title": "feat: introduce ClientRequest::SendUserTurn",
          "url": "https://github.com/openai/codex/pull/2345",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2329,
          "state": "closed",
          "title": "feat: introduce Op:UserTurn",
          "url": "https://github.com/openai/codex/pull/2329",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2331,
          "state": "closed",
          "title": "Cleanup rust login server a bit more",
          "url": "https://github.com/openai/codex/pull/2331",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2332,
          "state": "closed",
          "title": "re-implement status",
          "url": "https://github.com/openai/codex/pull/2332",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2333,
          "state": "closed",
          "title": "Format multiline commands",
          "url": "https://github.com/openai/codex/pull/2333",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2334,
          "state": "closed",
          "title": "tui: include optional full command line in history display",
          "url": "https://github.com/openai/codex/pull/2334",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves handling OpenAI API rate-limit errors, which is related to LLM provider integration. The proposal includes modifying the agent system to handle these errors gracefully using exponential backoff and retry logic, aligning with the definition of an agent issue."
      }
    },
    {
      "number": 238,
      "title": "(feat) create log file with all actions executed",
      "url": "https://github.com/openai/codex/issues/238",
      "state": "closed",
      "created_at": "2025-04-17T14:09:35Z",
      "closed_at": "2025-08-07T18:18:42Z",
      "body": "I'm always a bit paranoid about the changes ai agents do, git allow us to see some of them but would be nice to have a detailed log file will all actions (and maybe a brief explanation of why is doing that) to check in more detail",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2381,
          "state": "closed",
          "title": "Add the ability to interrupt and provide feedback to the model",
          "url": "https://github.com/openai/codex/pull/2381",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2388,
          "state": "closed",
          "title": "fix: refactor login/src/server.rs so process_request() is a separate function",
          "url": "https://github.com/openai/codex/pull/2388",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2389,
          "state": "closed",
          "title": "chore: prefer returning Err to expect()",
          "url": "https://github.com/openai/codex/pull/2389",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2393,
          "state": "closed",
          "title": "fix: async-ify login flow",
          "url": "https://github.com/openai/codex/pull/2393",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2394,
          "state": "closed",
          "title": "fix: change `shutdown_flag` from `Arc<AtomicBool>` to `tokio::sync::Notify`",
          "url": "https://github.com/openai/codex/pull/2394",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2395,
          "state": "closed",
          "title": "fix: eliminate ServerOptions.login_timeout and have caller use tokio::time::timeout() instead",
          "url": "https://github.com/openai/codex/pull/2395",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2396,
          "state": "closed",
          "title": "fix: make ShutdownHandle a private field of LoginServer",
          "url": "https://github.com/openai/codex/pull/2396",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2398,
          "state": "closed",
          "title": "fix: reduce references to Server in codex-login crate",
          "url": "https://github.com/openai/codex/pull/2398",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2399,
          "state": "closed",
          "title": "fix: remove shutdown_flag param to run_login_server()",
          "url": "https://github.com/openai/codex/pull/2399",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This is an agent issue as it involves a feature request for logging actions executed by an AI agent, which relates to utility implementation in agent systems."
      }
    },
    {
      "number": 239,
      "title": "support for other models",
      "url": "https://github.com/openai/codex/issues/239",
      "state": "closed",
      "created_at": "2025-04-17T14:18:40Z",
      "closed_at": "2025-04-17T14:55:32Z",
      "body": "add support for local ollama models as well as gemeni and grok.. ",
      "labels": [],
      "linked_prs": [
        {
          "number": 2412,
          "state": "closed",
          "title": "Fix #2391 Add Ctrl+H as backspace keyboard shortcut",
          "url": "https://github.com/openai/codex/pull/2412",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2389,
          "state": "closed",
          "title": "chore: prefer returning Err to expect()",
          "url": "https://github.com/openai/codex/pull/2389",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2393,
          "state": "closed",
          "title": "fix: async-ify login flow",
          "url": "https://github.com/openai/codex/pull/2393",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2394,
          "state": "closed",
          "title": "fix: change `shutdown_flag` from `Arc<AtomicBool>` to `tokio::sync::Notify`",
          "url": "https://github.com/openai/codex/pull/2394",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2395,
          "state": "closed",
          "title": "fix: eliminate ServerOptions.login_timeout and have caller use tokio::time::timeout() instead",
          "url": "https://github.com/openai/codex/pull/2395",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2396,
          "state": "closed",
          "title": "fix: make ShutdownHandle a private field of LoginServer",
          "url": "https://github.com/openai/codex/pull/2396",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2398,
          "state": "closed",
          "title": "fix: reduce references to Server in codex-login crate",
          "url": "https://github.com/openai/codex/pull/2398",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2399,
          "state": "closed",
          "title": "fix: remove shutdown_flag param to run_login_server()",
          "url": "https://github.com/openai/codex/pull/2399",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue is an agent issue as it requests support for additional LLM models, which falls under the category of \"Unsupported models\" in the taxonomy of agent issues."
      }
    },
    {
      "number": 246,
      "title": "Rate limit reached",
      "url": "https://github.com/openai/codex/issues/246",
      "state": "closed",
      "created_at": "2025-04-17T16:20:59Z",
      "closed_at": "2025-04-17T19:28:30Z",
      "body": "codex fails due Rate Limit while patching some few files (3).\nAll previous context was lost. \n\n\n```\n[Error]: Rate limit reached for o4-mini in organization org-mdt28vhrVuhXiMZEnjyLSjcV on tokens per min (TPM): Limit 200000, Used 162582, Requested 45297. Please try again in 2.363s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///Users/aarusso/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:445:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async R0.run (file:///Users/aarusso/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:462:2639) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization org-mdt28vhrVuhXiMZEnjyLSjcV on tokens per min (TPM): Limit 200000, Used 162582, Requested 45297. Please try again in 2.363s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n```",
      "labels": [],
      "linked_prs": [
        {
          "number": 2464,
          "state": "closed",
          "title": "docs: document writable_roots for sandbox_workspace_write",
          "url": "https://github.com/openai/codex/pull/2464",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3297,
          "state": "closed",
          "title": "chore(deps): bump image from 0.25.6 to 0.25.8 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3297",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2465,
          "state": "closed",
          "title": "chore: upgrade to Rust 1.89",
          "url": "https://github.com/openai/codex/pull/2465",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2467,
          "state": "closed",
          "title": "chore: Rust 1.89 promoted file locking to the standard library, so prefer stdlib to fs2",
          "url": "https://github.com/openai/codex/pull/2467",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2468,
          "state": "closed",
          "title": "fix apply patch when only one file is rendered",
          "url": "https://github.com/openai/codex/pull/2468",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2466,
          "state": "closed",
          "title": "fix: prefer `cargo check` to `cargo build` to save time and space",
          "url": "https://github.com/openai/codex/pull/2466",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2460,
          "state": "closed",
          "title": "Enable Dependabot updates for Rust toolchain",
          "url": "https://github.com/openai/codex/pull/2460",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2461,
          "state": "closed",
          "title": "Improve gpt-oss compatibility",
          "url": "https://github.com/openai/codex/pull/2461",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2462,
          "state": "closed",
          "title": "feat: move session ID bullet in /status",
          "url": "https://github.com/openai/codex/pull/2462",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation, specifically token usage misconfiguration, as it reports a rate limit error related to token management in the LLM provider integration."
      }
    },
    {
      "number": 251,
      "title": "Unclear Running Instruction - Was not able to use.",
      "url": "https://github.com/openai/codex/issues/251",
      "state": "closed",
      "created_at": "2025-04-17T16:36:38Z",
      "closed_at": "2025-08-07T18:18:52Z",
      "body": "None of the models seem to work. \nThey say either outdated in the case of babbage and davinci or qouta exceeded in the case of 3.5 and 4o.\nWhat do I do?",
      "labels": [
        "documentation"
      ],
      "linked_prs": [
        {
          "number": 3297,
          "state": "closed",
          "title": "chore(deps): bump image from 0.25.6 to 0.25.8 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3297",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2516,
          "state": "closed",
          "title": "tui: link docs when no MCP servers configured",
          "url": "https://github.com/openai/codex/pull/2516",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2518,
          "state": "closed",
          "title": "Fix typo in AGENTS.md",
          "url": "https://github.com/openai/codex/pull/2518",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue references specific model names and mentions problems related to model usage, which aligns with the criteria for LLM provider-related agent issues, specifically under \"Unsupported models\" and \"Model access misconfiguration.\""
      }
    },
    {
      "number": 256,
      "title": "Add ability to interrupt a request without exiting the process completely",
      "url": "https://github.com/openai/codex/issues/256",
      "state": "closed",
      "created_at": "2025-04-17T17:21:36Z",
      "closed_at": "2025-08-07T18:18:58Z",
      "body": "As the title said, I would like the ability to interrupt an on-going request without exiting the process completely and lose the context.\n\n<img width=\"869\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1ea86a3e-75fc-4f6c-90db-603cbcd46153\" />\n\ni.e: we could add a shortcut.\n\nI can investigate this.\n\nWhat do people think?",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2690,
          "state": "closed",
          "title": "fix cursor after suspend",
          "url": "https://github.com/openai/codex/pull/2690",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2562,
          "state": "closed",
          "title": "tui: transcript mode updates live",
          "url": "https://github.com/openai/codex/pull/2562",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2564,
          "state": "closed",
          "title": "Update README.md",
          "url": "https://github.com/openai/codex/pull/2564",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2567,
          "state": "closed",
          "title": "Copying / Dragging image files (MacOS Terminal + iTerm)",
          "url": "https://github.com/openai/codex/pull/2567",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2568,
          "state": "closed",
          "title": "show diff output in the pager",
          "url": "https://github.com/openai/codex/pull/2568",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2569,
          "state": "closed",
          "title": "improve suspend behavior",
          "url": "https://github.com/openai/codex/pull/2569",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2683,
          "state": "closed",
          "title": "burst paste edge cases",
          "url": "https://github.com/openai/codex/pull/2683",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves maintaining the context during an interruption, which relates to memory behaviors in agent systems. It suggests adding functionality to handle ongoing requests without losing context, aligning with memory-related issues in agent workflows."
      }
    },
    {
      "number": 259,
      "title": "feat: grounding in documentation ",
      "url": "https://github.com/openai/codex/issues/259",
      "state": "closed",
      "created_at": "2025-04-17T17:51:26Z",
      "closed_at": "2025-08-07T18:19:02Z",
      "body": "This would be a tool that searches specifically for relevant documentation when unsure about syntax or arguments.\n\nThe models have fairly good knowledge of these but still make mistakes especially for niche packages/languages.\n\nThe logic to do this should be similar to what a human would do (a last resort): try using what you remember first, observe errors, fix using what you remember, observe persistent errors, check online, damn still not working, *check docs*, record the lesson in the memory.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2592,
          "state": "closed",
          "title": "tui: open transcript mode at the bottom",
          "url": "https://github.com/openai/codex/pull/2592",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3297,
          "state": "closed",
          "title": "chore(deps): bump image from 0.25.6 to 0.25.8 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3297",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2594,
          "state": "closed",
          "title": "fix: prefer sending MCP structuredContent as the function call response, if available",
          "url": "https://github.com/openai/codex/pull/2594",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2595,
          "state": "closed",
          "title": "Move models.rs to protocol",
          "url": "https://github.com/openai/codex/pull/2595",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2593,
          "state": "closed",
          "title": "improve performance of 'cargo test -p codex-tui'",
          "url": "https://github.com/openai/codex/pull/2593",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2590,
          "state": "closed",
          "title": "tui: coalesce command output; show unabridged commands in transcript",
          "url": "https://github.com/openai/codex/pull/2590",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation and memory behaviors, as it suggests implementing a tool to search documentation and record lessons in memory, aligning with agent-specific components like tool configuration and memory content errors."
      }
    },
    {
      "number": 260,
      "title": "feat: lessons",
      "url": "https://github.com/openai/codex/issues/260",
      "state": "closed",
      "created_at": "2025-04-17T18:03:37Z",
      "closed_at": "2025-08-07T18:19:07Z",
      "body": "Each session will provide opportunities for model learning. The user will not like a diff, there'll be a syntax error when running that will be fixed after some extensive searching, the logic of the project will be misunderstood in some way causing an error.\n\nI suggest that these lessons be automatically created as part of the agent loop, human checked by default, and stored in the project folder. These lessons should help avoid mistakes for the user but will importantly generate valuable data for model providers if users wish to share.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2600,
          "state": "closed",
          "title": "tui: fix resize on wezterm",
          "url": "https://github.com/openai/codex/pull/2600",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3618,
          "state": "closed",
          "title": "chore(deps): bump serde from 1.0.219 to 1.0.223 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3618",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2605,
          "state": "closed",
          "title": "transcript hint",
          "url": "https://github.com/openai/codex/pull/2605",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2607,
          "state": "closed",
          "title": "Resume conversation from an earlier point in history",
          "url": "https://github.com/openai/codex/pull/2607",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue suggests enhancements to the agent's workflow by automatically creating and storing lessons, which involves memory behaviors and workflow anomalies. This aligns with the definition of an agent issue, as it relates to memory mechanisms and agent workflows."
      }
    },
    {
      "number": 290,
      "title": "feat: enable api/llm model to converse in between each step",
      "url": "https://github.com/openai/codex/issues/290",
      "state": "closed",
      "created_at": "2025-04-18T00:46:48Z",
      "closed_at": "2025-08-07T18:19:23Z",
      "body": "It would be beneficial to enhance the Codex CLI by allowing the LLM to engage in conversational interactions between execution steps. This feature would enable users to:​\n- Review and discuss intermediate outputs before proceeding.\n- Provide additional context or corrections during multi-step tasks.\n- Iteratively refine actions based on real-time feedback.​\n\nImplementing this capability would improve user control and adaptability, especially in complex workflows.​\n\nProposed Implementation:\n- Introduce an optional conversational mode that pauses after each step, awaiting user input.\n- Allow users to confirm, modify, or skip subsequent actions based on the assistant's suggestions.\n- Maintain a history of interactions to provide context for ongoing tasks.​\n\nThis feature would align with the goal of creating a more interactive and user-friendly coding assistant within the terminal environment",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3010,
          "state": "closed",
          "title": "chore(deps): bump regex-lite from 0.1.6 to 0.1.7 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3010",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2907,
          "state": "closed",
          "title": "TUI: fix MCP docs hyperlink in empty_mcp_output",
          "url": "https://github.com/openai/codex/pull/2907",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue is an agent issue as it involves enhancing the LLM-based agent system to enable conversational interactions between execution steps, which relates to agent workflows and prompt management, both of which are components unique to agent systems."
      }
    },
    {
      "number": 295,
      "title": "feat: add /report command",
      "url": "https://github.com/openai/codex/issues/295",
      "state": "closed",
      "created_at": "2025-04-18T01:36:30Z",
      "closed_at": "2025-04-21T20:45:23Z",
      "body": "It would be really convenient for bug reports and feature requests if there were a chat command (maybe `/report`) to automate the following:\n\n* Gather context from the chat session\n* Open a draft GH Issue on the repo with anything helpful to the maintainers prefilled (system info, commands used, chat history, etc) ",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3618,
          "state": "closed",
          "title": "chore(deps): bump serde from 1.0.219 to 1.0.223 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3618",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a feature request for an LLM-based agent system to gather context from chat sessions and automate GitHub issue creation, indicating prompt management and memory behavior concerns."
      }
    },
    {
      "number": 303,
      "title": "codex crashes on rate limit error instead of retrying",
      "url": "https://github.com/openai/codex/issues/303",
      "state": "closed",
      "created_at": "2025-04-18T03:07:30Z",
      "closed_at": "2025-04-18T18:30:54Z",
      "body": "### What version of Codex is running?\n\n0.1.2504161510\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux 6.8.0-1026-gcp x86_64 x86_64\n\n### What steps can reproduce the bug?\n\nRun a complex command that generates a high token load, e.g.\n\ncodex --approval-mode full-auto \"perform this complicated task\"\n\nWait until a rate limit is reached (e.g. due to high usage of o4-mini model)\n\n### What is the expected behavior?\n\nCodex should wait the suggested time (e.g., 6.379 seconds), then retry the request gracefully\n\n### What do you see instead?\n\nCodex crashes with an unhandled rate_limit_exceeded error. No retry is attempted.\n\nHere’s the error message:\n\n[Error]: Rate limit reached for o4-mini in organization [REDACTED_ORG_ID] on tokens per min (TPM): Limit 200000, Used 158833, Requested 62431. Please try again in 6.379s.\n    at e.a [as iterator] (dist/cli.js:449:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async T0.run (dist/cli.js:466:2933) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization [REDACTED_ORG_ID] on tokens per min (TPM): Limit 200000, Used 158833, Requested 62431. Please try again in 6.379s.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nNode.js v22.14.0\n\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3035,
          "state": "closed",
          "title": "remove extra quote from disabled-command message",
          "url": "https://github.com/openai/codex/pull/3035",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3038,
          "state": "closed",
          "title": "tui: hide '/init' suggestion when AGENTS.md exists",
          "url": "https://github.com/openai/codex/pull/3038",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves LLM operation issues, specifically related to handling rate limits for an LLM provider. The problem is with the system's failure to retry after a rate limit error, which is a behavior unique to agent systems."
      }
    },
    {
      "number": 306,
      "title": "Setup information missing from documentation?",
      "url": "https://github.com/openai/codex/issues/306",
      "state": "closed",
      "created_at": "2025-04-18T05:54:32Z",
      "closed_at": "2025-08-07T18:18:03Z",
      "body": "### What is the type of issue?\n\n_No response_\n\n### What is the issue?\n\nSome steps are missing, like if a new person is trying to install your codex in terminal, how can you directly export your OpenAI API key here? What step does he have to do, like create a folder in ReactJS or a normal then create a file .env.\n\n### Where did you find it?\n\n_No response_",
      "labels": [
        "documentation"
      ],
      "linked_prs": [
        {
          "number": 3060,
          "state": "closed",
          "title": "Add logs to know when we users are changing the model",
          "url": "https://github.com/openai/codex/pull/3060",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3061,
          "state": "closed",
          "title": "Show loading state when @ search results are pending",
          "url": "https://github.com/openai/codex/pull/3061",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3062,
          "state": "closed",
          "title": "fix: leverage windows-11-arm for Windows ARM builds",
          "url": "https://github.com/openai/codex/pull/3062",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3063,
          "state": "closed",
          "title": "fix config reference table",
          "url": "https://github.com/openai/codex/pull/3063",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3065,
          "state": "closed",
          "title": "tui: fix extra blank lines in streamed agent messages",
          "url": "https://github.com/openai/codex/pull/3065",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3066,
          "state": "closed",
          "title": "fix: install zstd on the windows-11-arm image used to cut a release",
          "url": "https://github.com/openai/codex/pull/3066",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3067,
          "state": "closed",
          "title": "fix: include arm64 Windows executable in npm module",
          "url": "https://github.com/openai/codex/pull/3067",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3068,
          "state": "closed",
          "title": "prefer ratatui Stylized for constructing lines/spans",
          "url": "https://github.com/openai/codex/pull/3068",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3069,
          "state": "closed",
          "title": "core: correct sandboxed shell tool description (reads allowed anywhere)",
          "url": "https://github.com/openai/codex/pull/3069",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves missing setup instructions related to exporting an OpenAI API key, which is tied to LLM provider usage and configuration, aligning with the definition of an agent issue."
      }
    },
    {
      "number": 311,
      "title": "Bug: Quota exhausted reading in symbols from DerivedData",
      "url": "https://github.com/openai/codex/issues/311",
      "state": "closed",
      "created_at": "2025-04-18T07:16:35Z",
      "closed_at": "2025-08-07T17:23:51Z",
      "body": "### What version of Codex is running?\n\n0.1.2504161551\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nDarwin 24.4.0 arm64 ar\n\n### What steps can reproduce the bug?\n\nWe're working on an iOS / macOS mixed project (obj-c / swift). I had codex running at the root folder of the project (millions of lines of code, spread across directories). I gave a lengthy instruction with explicit file names to swift for and method names to study, however it was unable to look for the methods oddly (claude code is able to do this easily, for context) and then it started searching in the `DerivedData` folder (which is marked as a hidden folder within the same project folder: `.DerivedData.noindex`). It then wasted the entire context on this. \n\nCodex understood it's looking under the wrong folder but even after _adjustments_ it continued looking under DerivedData till it suddenly quit with a rate_limit error:\n\n```\nSearching for alarm templates\n\n    I’m not finding any matches, which makes me wonder if it’s actually supposed to be spelled as '-defaultAlarmTemplatesForEventType:' without a prefix. Since\n    grep found nothing, it suggests this code might not be in the current repository. It’s possible that it resides in macOS-calendaring frameworks or maybe it’s\n    hidden in Objective-C files. To dig deeper, I’m going to search for \"AlarmTemplates\" next.\n\n    thinking for 54s\n\n    thinking for 54s\n\n    command\n\n    $ grep -R AlarmTemplate -n .\n\n    command.stdout (code: 143, duration: 10s)\n\n    Binary file ./calendar/.DerivedData.noindex/BusyCal/Index.noindex/DataStore/v5/records/PC/CalendarWC+Menu_Edit.m-X7CO5DPE91PC matches\n    Binary file ./calendar/.DerivedData.noindex/BusyCal/Index.noindex/DataStore/v5/records/YQ/PrefsController+TimedEventAlarms.m-3IJEW4UF6NXYQ matches\n    Binary file ./calendar/.DerivedData.noindex/BusyCal/Index.noindex/DataStore/v5/records/SJ/BirthdaySyncTask.m-25TBHWRI9IMSJ matches\n    Binary file ./calendar/.DerivedData.noindex/BusyCal/Index.noindex/DataStore/v5/records/9X/PrefsController.h-LIMW3D9IY89X matches\n    ... (342 more lines)\n\n    thinking for 74s\n\n    Refining search paths\n\n    I noticed that the grep command returned excessive output, with many automatically generated Swift headers from the DerivedData directory. That's definitely\n    not useful! I need to focus on source code definitions in Swift or Objective-C files instead. Since this project is an Xcode project, I'll refocus my search\n    specifically inside the calendar/ directory and ignore DerivedData altogether. It seems I need to adjust my grep command to skip the DerivedData directory for\n    a cleaner search.\n\n    thinking for 74s\n\n    thinking for 74s\n\n    thinking for 74s\n```\n\n### What is the expected behavior?\n\nLook for the correct code, ignore hidden folders with a `.`\n\n### What do you see instead?\n\nSearching the wrong folders, unable to find correctly specified method name (its prefix) in a obj-c .m file in one of the sub-folders.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "model-behavior"
      ],
      "linked_prs": [
        {
          "number": 3110,
          "state": "closed",
          "title": "Add a common way to create HTTP client",
          "url": "https://github.com/openai/codex/pull/3110",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3112,
          "state": "closed",
          "title": "Update guidance on API key permissions",
          "url": "https://github.com/openai/codex/pull/3112",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3116,
          "state": "closed",
          "title": "Introduce Rollout Policy",
          "url": "https://github.com/openai/codex/pull/3116",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3117,
          "state": "closed",
          "title": "Include originator in authentication URL parameters",
          "url": "https://github.com/openai/codex/pull/3117",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3118,
          "state": "closed",
          "title": "[codex] document `use_experimental_reasoning_summary` toml key config",
          "url": "https://github.com/openai/codex/pull/3118",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM-based agent (Codex) mismanaging context by searching in incorrect directories, leading to a rate limit error. This aligns with agent workflow anomalies and context length issues, as the agent fails to properly handle file search paths and context management."
      }
    },
    {
      "number": 320,
      "title": "Can touch files and dirs, and run npm commands but will not write to files - macOS",
      "url": "https://github.com/openai/codex/issues/320",
      "state": "closed",
      "created_at": "2025-04-18T09:00:20Z",
      "closed_at": "2025-08-07T18:25:12Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504172351\n\n### Which model were you using?\n\ngpt-4.1-mini\n\n### What platform is your computer?\n\nDarwin 24.3.0 x86_64 i386\n\n### What steps can reproduce the bug?\n\nCodex just seems to get stuck and not write anything out like the below example. Sometimes it does not get stuck and all the steps look correct - it will tell me that it has written out the files but all the files are empty.\n\n```\n➜ codex-reforge-test (main) ✔ codex --full-auto\n╭──────────────────────────────────────────────────────────────╮\n│ ● OpenAI Codex (research preview) v0.1.2504172351            │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: fafca48d45334cd7b88a817b7cb29d88          │\n│ ↳ workdir: ~/projects/codex-reforge-test                     │\n│ ↳ model: gpt-4.1-mini                                        │\n│ ↳ approval: full-auto                                        │\n╰──────────────────────────────────────────────────────────────╯\nuser\ncreate a simple express hello world app\n\n    codex\n    *** Begin Patch\n    *** Update File: hello-world-express.js\n    @@\n    +const express = require('express');\n    +const app = express();\n    +const port = 3000;\n    +\n    +app.get('/', (req, res) => {\n\n        * res.send('Hello World!');\n          +});\n        *\n\n    +app.listen(port, () => {\n\n        * console.log(`Example app listening at http://localhost:${port}`);\n          +});\n          *** End Patch\n╭────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ send a message                                                                                         │\n╰────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n  send q or ctrl+c to exit | send \"/clear\" to reset | send \"/help\" for commands | press enter to send\n```\n\n### What is the expected behavior?\n\nCodex should be able to write out changes to disk, via `apply_patch` or `echo` (neither work).\n\n### What do you see instead?\n\nThe correct file/folder structure but any files that contain logic that codex would produce are zero bytes with no contents.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 391,
          "state": "closed",
          "title": "fix: enable shell option for child process execution",
          "url": "https://github.com/openai/codex/pull/391",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves workflow anomalies where the agent (Codex) fails to write to files, indicating an execution anomaly in the agent orchestration, which aligns with the definition of agent issues."
      }
    },
    {
      "number": 326,
      "title": "Rate limit crash the app",
      "url": "https://github.com/openai/codex/issues/326",
      "state": "closed",
      "created_at": "2025-04-18T10:58:36Z",
      "closed_at": "2025-04-18T13:05:59Z",
      "body": "### What version of Codex is running?\n\n│ ● OpenAI Codex (research preview) v0.1.2504172351            │\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux\n\n### What steps can reproduce the bug?\n\nRun command with `--full-auto`\n\n### What is the expected behavior?\n\nWait given number of seconds to restart rate limit.\n\n\n### What do you see instead?\n\n```\ne [Error]: Rate limit reached for o4-mini in organization org- on tokens per min (TPM): Limit 200000, Used 158404, Requested 48556. Please try again in 2.088s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///usr/lib/node_modules/@openai/codex/dist/cli.js:449:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async T0.run (file:///usr/lib/node_modules/@openai/codex/dist/cli.js:466:2933) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization org- on tokens per min (TPM): Limit 200000, Used 158404, Requested 48556. Please try again in 2.088s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nNode.js v22.14.0\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4525,
          "state": "closed",
          "title": "Remove legacy codex exec --json format",
          "url": "https://github.com/openai/codex/pull/4525",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves LLM operation issues, specifically token usage misconfiguration, as it relates to rate limits being exceeded for the LLM model, which is a component unique to agent systems."
      }
    },
    {
      "number": 332,
      "title": "feat: add cost estimates",
      "url": "https://github.com/openai/codex/issues/332",
      "state": "closed",
      "created_at": "2025-04-18T13:31:06Z",
      "closed_at": "2025-04-19T00:25:25Z",
      "body": "A cost estimation feature that does one or more of the following:\n\n1. Post-operation cost summary – After a code generation task is completed, display an estimate of the tokens used and the corresponding API cost.\n\n2. Pre-operation cost preview – Based on the prompt size or estimated tokens, show a rough cost estimate before the assistant starts generating code.\n\n3. Live cost tracker – For longer or interactive sessions, a running counter showing token usage and estimated cost in real-time would be incredibly useful.",
      "labels": [],
      "linked_prs": [
        {
          "number": 3320,
          "state": "closed",
          "title": "Add a getUserAgent MCP method",
          "url": "https://github.com/openai/codex/pull/3320",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3329,
          "state": "closed",
          "title": "notifications on approvals and turn end",
          "url": "https://github.com/openai/codex/pull/3329",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3323,
          "state": "closed",
          "title": "chore: try switching to `cargo nextest` to speed up CI builds",
          "url": "https://github.com/openai/codex/pull/3323",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM token management and pricing configuration, which are related to LLM operation issues. It suggests features for tracking and estimating token usage and costs, which are integral to managing LLM provider interactions in agent systems."
      }
    },
    {
      "number": 334,
      "title": "Crashed with rate limit",
      "url": "https://github.com/openai/codex/issues/334",
      "state": "closed",
      "created_at": "2025-04-18T14:04:57Z",
      "closed_at": "2025-04-22T22:42:01Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504172351\n\n### Which model were you using?\n\ngpt-4.1\n\n### What platform is your computer?\n\nDarwin 23.2.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nCrashed with\n\ne [Error]: Rate limit reached for gpt-4.1 in organization ... on tokens per min (TPM): Limit 30000, Used 25890, Requested 4193. Please try again in 166ms. Visit https://platform.openai.com/account/rate-limits to learn more.\n\n### What is the expected behavior?\n\nplease don't crash\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3345,
          "state": "closed",
          "title": "Add more detailed documentation on MCP server usage",
          "url": "https://github.com/openai/codex/pull/3345",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3507,
          "state": "closed",
          "title": "MCP Documentation Changes Requests in Code Review",
          "url": "https://github.com/openai/codex/pull/3507",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a rate limit error related to the LLM provider (gpt-4.1), which falls under the category of \"Token usage misconfiguration\" in LLM operation issues, indicating it is an agent issue."
      }
    },
    {
      "number": 340,
      "title": "Certain Large Models Fail",
      "url": "https://github.com/openai/codex/issues/340",
      "state": "closed",
      "created_at": "2025-04-18T15:46:53Z",
      "closed_at": "2025-08-07T17:23:54Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504161551\n\n### Which model were you using?\n\ngpt-3.5-turbo-instruct\n\n### What platform is your computer?\n\nLinux 5.15.0-131-generic x86_64 x86_64\n\n### What steps can reproduce the bug?\n\nFor specific GPT models, such as gpt-3.5-turbo-1106 and gpt-3.5-turbo-instruct-0914, execution is unsuccessful with the following error messages. Other models, like gpt-4, operate normally. Is this a bug in the code, or does the model not support Codex?\n\n![Image](https://github.com/user-attachments/assets/5b3366dd-31fa-4976-93cd-d7cb1853669a)\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3400,
          "state": "closed",
          "title": "Added images to `UserMessageEvent`",
          "url": "https://github.com/openai/codex/pull/3400",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3401,
          "state": "closed",
          "title": "Review Mode (Core)",
          "url": "https://github.com/openai/codex/pull/3401",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves specific GPT models failing to execute, which suggests an incompatibility or unsupported model problem with the LLM provider, fitting the \"Unsupported models\" sub-category of agent issues."
      }
    },
    {
      "number": 344,
      "title": "feat: allow multi-line input when codex is asking for user feedback",
      "url": "https://github.com/openai/codex/issues/344",
      "state": "closed",
      "created_at": "2025-04-18T17:41:49Z",
      "closed_at": "2025-04-20T15:51:39Z",
      "body": "There is currently no way to pass structured answer to codex. We should be able to add a new line using shift + enter, or some other mechanism.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3440,
          "state": "closed",
          "title": "Change forking to read the rollout from file",
          "url": "https://github.com/openai/codex/pull/3440",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3444,
          "state": "closed",
          "title": "Add Compact and Turn Context to the rollout items",
          "url": "https://github.com/openai/codex/pull/3444",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3445,
          "state": "closed",
          "title": "Clear composer on fork",
          "url": "https://github.com/openai/codex/pull/3445",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3446,
          "state": "closed",
          "title": "feat: context compaction",
          "url": "https://github.com/openai/codex/pull/3446",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 438,
          "state": "closed",
          "title": "feat: allow multi-line input ",
          "url": "https://github.com/openai/codex/pull/438",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3533,
          "state": "closed",
          "title": "Handle resuming/forking after compact",
          "url": "https://github.com/openai/codex/pull/3533",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt management, specifically the inability to provide structured input to the LLM (codex) using multi-line entries, which is a prompt-related issue in agent systems."
      }
    },
    {
      "number": 346,
      "title": "bug: auto mode + Gpt 4.1-mini does not work",
      "url": "https://github.com/openai/codex/issues/346",
      "state": "closed",
      "created_at": "2025-04-18T18:04:22Z",
      "closed_at": "2025-04-20T14:04:23Z",
      "body": "When I try to run Gpt 4.1-mini in auto mode I does not modify any files and I get \"Direct patching is rejected currently\" in console.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3467,
          "state": "closed",
          "title": "Align user history message prefix width",
          "url": "https://github.com/openai/codex/pull/3467",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3461,
          "state": "closed",
          "title": "[exec] add include-plan-tool flag and print it nicely",
          "url": "https://github.com/openai/codex/pull/3461",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3469,
          "state": "closed",
          "title": "Add spacing before composer footer hints",
          "url": "https://github.com/openai/codex/pull/3469",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM provider, specifically Gpt 4.1-mini, and describes a workflow anomaly where auto mode fails to modify files, indicating a potential problem with the agent's orchestration or model operation."
      }
    },
    {
      "number": 351,
      "title": "feat: interrupt and logs",
      "url": "https://github.com/openai/codex/issues/351",
      "state": "closed",
      "created_at": "2025-04-18T19:02:11Z",
      "closed_at": "2025-04-19T00:12:55Z",
      "body": "A hotkey to be able to interrupt while thinking would be very helpful, and/or a way of keeping chat logs or distilled context (like a hidden file) for reference between sessions if you ctrl c out. ",
      "labels": [
        "documentation"
      ],
      "linked_prs": [
        {
          "number": 3512,
          "state": "closed",
          "title": "feat: added SetDefaultModel to JSON-RPC server",
          "url": "https://github.com/openai/codex/pull/3512",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3514,
          "state": "closed",
          "title": "standardize shell description",
          "url": "https://github.com/openai/codex/pull/3514",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves agent workflow anomalies (interrupting while thinking) and memory-related concerns (keeping chat logs or distilled context for reference), both of which align with the definition of an agent issue."
      }
    },
    {
      "number": 353,
      "title": "Rate limit causes process to abort",
      "url": "https://github.com/openai/codex/issues/353",
      "state": "closed",
      "created_at": "2025-04-18T19:29:52Z",
      "closed_at": "2025-08-07T17:23:57Z",
      "body": "### What version of Codex is running?\n\nOpenAI Codex (research preview) v0.1.2504161551   \n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nDarwin 24.1.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nUse agent until it hits your organization's rate limits.\n\n### What is the expected behavior?\n\nHitting a rate limit should just wait an appropriate amount of time (or ask the user what they want to do?) instead of exiting. Very disruptive, especially when the agent is in the middle of making changes.\n\n### What do you see instead?\n\n```\nfile:///Users/prashan/.nvm/versions/node/v23.2.0/lib/node_modules/@openai/codex/dist/cli.js:445\n`,\"\\r\"]);gg.NEWLINE_REGEXP=/\\r\\n|[\\n\\r]/g;function nRe(e,t){for(let a=t??0;a<e.length;a++){if(e[a]===10)return{preceding:a,index:a+1,carriage:!1};if(e[a]===13)return{preceding:a,index:a+1,carriage:!0}}return null}function kae(e){for(let n=0;n<e.length-1;n++){if(e[n]===10&&e[n+1]===10||e[n]===13&&e[n+1]===13)return n+2;if(e[n]===13&&e[n+1]===10&&n+3<e.length&&e[n+2]===13&&e[n+3]===10)return n+4}return-1}g();function PO(e){if(e[Symbol.asyncIterator])return e;let t=e.getReader();return{async next(){try{let r=await t.read();return r?.done&&t.releaseLock(),r}catch(r){throw t.releaseLock(),r}},async return(){let r=t.cancel();return t.releaseLock(),await r,{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}}}var ad=class e{constructor(t,r){this.iterator=t,this.controller=r}static fromSSEResponse(t,r){let n=!1;async function*a(){if(n)throw new Error(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");n=!0;let i=!1;try{for await(let s of aRe(t,r))if(!i){if(s.data.startsWith(\"[DONE]\")){i=!0;continue}if(s.event===null||s.event.startsWith(\"response.\")||s.event.startsWith(\"transcript.\")){let c;try{c=JSON.parse(s.data)}catch(d){throw console.error(\"Could not parse message into JSON:\",s.data),console.error(\"From chunk:\",s.raw),d}if(c&&c.error)throw new mi(void 0,c.error,void 0,UO(t.headers));yield c}else{let c;try{c=JSON.parse(s.data)}catch(d){throw console.error(\"Could not parse message into JSON:\",s.data),console.error(\"From chunk:\",s.raw),d}if(s.event==\"error\")throw new mi(void 0,c.error,c.message,void 0);yield{event:s.event,data:c}}}i=!0}catch(s){if(s instanceof Error&&s.name===\"AbortError\")return;throw s}finally{i||r.abort()}}return new e(a,r)}static fromReadableStream(t,r){let n=!1;async function*a(){let s=new gg,c=PO(t);for await(let d of c)for(let f of s.decode(d))yield f;for(let d of s.flush())yield d}async function*i(){if(n)throw new Error(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");n=!0;let s=!1;try{for await(let c of a())s||c&&(yield JSON.parse(c));s=!0}catch(c){if(c instanceof Error&&c.name===\"AbortError\")return;throw c}finally{s||r.abort()}}return new e(i,r)}[Symbol.asyncIterator](){return this.iterator()}tee(){let t=[],r=[],n=this.iterator(),a=i=>({next:()=>{if(i.length===0){let s=n.next();t.push(s),r.push(s)}return i.shift()}});return[new e(()=>a(t),this.controller),new e(()=>a(r),this.controller)]}toReadableStream(){let t=this,r,n=new TextEncoder;return new IN({async start(){r=t[Symbol.asyncIterator]()},async pull(a){try{let{value:i,done:s}=await r.next();if(s)return a.close();let c=n.encode(JSON.stringify(i)+`\nn\ne [Error]: Rate limit reached for o4-mini in organization <org-id> on tokens per min (TPM): Limit 200000, Used 150010, Requested 53804. Please try again in 1.144s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///Users/prashan/.nvm/versions/node/v23.2.0/lib/node_modules/@openai/codex/dist/cli.js:445:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async R0.run (file:///Users/prashan/.nvm/versions/node/v23.2.0/lib/node_modules/@openai/codex/dist/cli.js:462:2639) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization <org-id> on tokens per min (TPM): Limit 200000, Used 150010, Requested 53804. Please try again in 1.144s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nNode.js v23.2.0\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3753,
          "state": "closed",
          "title": "Reland \"refactor transcript view to handle HistoryCells\"",
          "url": "https://github.com/openai/codex/pull/3753",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3531,
          "state": "closed",
          "title": "Rakesh/support device auth",
          "url": "https://github.com/openai/codex/pull/3531",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3533,
          "state": "closed",
          "title": "Handle resuming/forking after compact",
          "url": "https://github.com/openai/codex/pull/3533",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3534,
          "state": "closed",
          "title": "Fix NUX UI",
          "url": "https://github.com/openai/codex/pull/3534",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3536,
          "state": "closed",
          "title": "fix: NIT None reasoning effort",
          "url": "https://github.com/openai/codex/pull/3536",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3537,
          "state": "closed",
          "title": "enable-resume",
          "url": "https://github.com/openai/codex/pull/3537",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3538,
          "state": "closed",
          "title": "refactor transcript view to handle HistoryCells",
          "url": "https://github.com/openai/codex/pull/3538",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3539,
          "state": "closed",
          "title": "Always request encrypted cot",
          "url": "https://github.com/openai/codex/pull/3539",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3614,
          "state": "closed",
          "title": "Revert \"refactor transcript view to handle HistoryCells\"",
          "url": "https://github.com/openai/codex/pull/3614",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves LLM operation issues related to rate limits, which are tied to LLM provider usage and workflow anomalies, as the agent process aborts instead of handling the rate limit gracefully."
      }
    },
    {
      "number": 362,
      "title": "bug: agent sometimes forgets he has tools",
      "url": "https://github.com/openai/codex/issues/362",
      "state": "closed",
      "created_at": "2025-04-18T21:28:42Z",
      "closed_at": "2025-08-07T17:24:06Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504172351 \n\n### Which model were you using?\n\no4-mini, o3\n\n### What platform is your computer?\n\nMacOS M4\n\n### What steps can reproduce the bug?\n\nHard to reproduce. It happens sometimes mid-session. \n\n<img width=\"793\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c6b851fb-5543-4cc5-aa53-af41f10e0815\" />\n\n### What is the expected behavior?\n\nGit mastery is a must for an AI developer. \n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "model-behavior"
      ],
      "linked_prs": [
        {
          "number": 3620,
          "state": "closed",
          "title": "chore(deps): bump tracing-subscriber from 0.3.19 to 0.3.20 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3620",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3622,
          "state": "closed",
          "title": "feat: add reasoning level to header",
          "url": "https://github.com/openai/codex/pull/3622",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3624,
          "state": "closed",
          "title": "chore: update swiftfox_prompt.md",
          "url": "https://github.com/openai/codex/pull/3624",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3625,
          "state": "closed",
          "title": "Fix codex resume so flags (cd, model, search, etc.) still work",
          "url": "https://github.com/openai/codex/pull/3625",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3627,
          "state": "closed",
          "title": "Change animation frames",
          "url": "https://github.com/openai/codex/pull/3627",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3628,
          "state": "closed",
          "title": "feat: tighten preset filter, tame storage load logs, enable rollout prompt by default",
          "url": "https://github.com/openai/codex/pull/3628",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3629,
          "state": "closed",
          "title": "Show abort in the resume",
          "url": "https://github.com/openai/codex/pull/3629",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes an agent forgetting its tools mid-session, indicating a potential problem with tool invocation or memory-related issues, which are components unique to agent systems."
      }
    },
    {
      "number": 382,
      "title": "[Bug] Leading `/` stripped from absolute path, followed by `ENOENT` crash due to attempt to access non-existent file.",
      "url": "https://github.com/openai/codex/issues/382",
      "state": "closed",
      "created_at": "2025-04-19T00:51:05Z",
      "closed_at": "2025-08-07T17:24:14Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux 5.15.133.1-microsoft-standard-WSL2 x86_64 x86_64\n\n### What steps can reproduce the bug?\n\nAsk the assistant to read a file at an absolute path. Its tool call strips the leading `/` and then crashes the entire `codex` process when it cannot open the resulting relative path, which does not exist.\n\n![Image](https://github.com/user-attachments/assets/b113e5eb-b948-461f-8c5c-590f66aa5917)\n\n### What is the expected behavior?\n\nNo stripping of filesystem root from an absolute path. If there are security concerns about reading absolute paths, then a warning should be issued.\n\nAlso, when an I/O operation fails, it should not crash the entire process.\n\n### What do you see instead?\n\nA crash; see screenshot above or text below:\n\n```text\nnode:internal/fs/promises:638\n  return new FileHandle(await PromisePrototypeThen(\n                        ^\n\nError: ENOENT: no such file or directory, open 'mnt/d/Downloads/aiwb-openai-tools-success.PNG'\n    at async open (node:internal/fs/promises:638:25)\n    at async Object.readFile (node:internal/fs/promises:1242:14)\n    at async WA (file:///home/me/.local/share/npm-packages/lib/node_modules/@openai/codex/dist/cli.js:271:8860)\n    at async file:///home/me/.local/share/npm-packages/lib/node_modules/@openai/codex/dist/cli.js:271:12843 {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'open',\n  path: 'mnt/d/Downloads/aiwb-openai-tools-success.PNG'\n}\n\nNode.js v22.14.0\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3822,
          "state": "closed",
          "title": "chore: update \"Codex CLI harness, sandboxing, and approvals\" section",
          "url": "https://github.com/openai/codex/pull/3822",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves tool invocation errors where the tool call incorrectly processes file paths, leading to a crash. This aligns with the taxonomy's tool-related issues, specifically tool implementation errors and misuse of tool interfaces."
      }
    },
    {
      "number": 392,
      "title": "feat: allow switching approval modes when prompted to approve an edit/command",
      "url": "https://github.com/openai/codex/issues/392",
      "state": "closed",
      "created_at": "2025-04-19T03:20:23Z",
      "closed_at": "2025-09-03T00:24:07Z",
      "body": "When in suggest or auto-edit mode, codex often wants to do innocuous things that require approval, like:\n\n╭───────────────────────────────────────────────────\n│Shell Command\n│  \n│$ nl -ba myfile.sh | sed -n '60,130p'   \n│                            \n│Allow command?   \n│                                \n│  ❯ Yes (y)               \n│    Yes, always approve this exact command for this session (a)      \n│    Explain this command (x)        \n│    Edit or give feedback (e)    \n│    No, and keep going (n)       \n╰───────────────────────────────────────────────────\n\nIn that case, I sometimes want to switch it into full-auto mode to let it do its thing. Currently, I have to cancel what it's doing and run /approve, which I don't want to do because it provides negative feedback to the model that it's on the wrong track. Instead, I'd prefer to be able to (s)witch approval mode right there in the approval prompt. Typing v should bring up the same menu as /approval:\n╭───────────────────────────────────────────────────\n│ Switch approval mode\n│ Current mode: auto-edit\n│ \n│ \n│ \n│ ❯ auto-edit\n│   suggest\n│   full-auto\n│ type to search · enter to confirm · esc to cancel\n╰───────────────────────────────────────────────────\n",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3928,
          "state": "closed",
          "title": "simplify StreamController",
          "url": "https://github.com/openai/codex/pull/3928",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3925,
          "state": "closed",
          "title": "don't clear screen on startup",
          "url": "https://github.com/openai/codex/pull/3925",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves modifying the workflow of an LLM-based agent system by allowing dynamic switching of approval modes, which is related to agent orchestration and workflow management."
      }
    },
    {
      "number": 393,
      "title": "Crashes with nonexistent image paths in prompt",
      "url": "https://github.com/openai/codex/issues/393",
      "state": "closed",
      "created_at": "2025-04-19T03:23:59Z",
      "closed_at": "2025-04-19T05:55:38Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\ndefault\n\n### What platform is your computer?\n\nubuntu 20\n\n### What steps can reproduce the bug?\n\ninstall codex on ubuntu 20\nEnter as first prompt: `doesnotexist.png`\nCrash. Discovered when trying to describe a file name in another directory.\n\n### What is the expected behavior?\n\nIt should not crash when I enter an image filepath that doesn't exist, so I can describe filenames.\n\n### What do you see instead?\n\n<img width=\"856\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a35dd450-13a2-4d6a-a82d-fd8b8524cf25\" />\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3937,
          "state": "closed",
          "title": "fix alignment in slash command popup",
          "url": "https://github.com/openai/codex/pull/3937",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt management problems, as the system crashes when handling a nonexistent image path in a prompt, indicating a failure in handling unexpected prompt inputs, which aligns with prompt-related issues in agent systems."
      }
    },
    {
      "number": 395,
      "title": "Context Left Percentage does not reset after /clear",
      "url": "https://github.com/openai/codex/issues/395",
      "state": "closed",
      "created_at": "2025-04-19T04:15:25Z",
      "closed_at": "2025-04-21T18:00:48Z",
      "body": "### What version of Codex is running?\n\n0.1.2504181820\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nDarwin 24.3.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n1.) Use some context (e.g. perform code review)\n2.) run /clear\n\n### What is the expected behavior?\n\nContext window is reset to 100%.\n\n### What do you see instead?\n\nContext window is not reset to 100%.\n\n<img width=\"879\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/186cb92c-9a89-4059-ad07-b4d5124d9c23\" />\n\n\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3952,
          "state": "closed",
          "title": "Fix pager overlay clear between pages",
          "url": "https://github.com/openai/codex/pull/3952",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3957,
          "state": "closed",
          "title": "fix codex resume message at end of session",
          "url": "https://github.com/openai/codex/pull/3957",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3959,
          "state": "closed",
          "title": "timeouts for mcp tool calls",
          "url": "https://github.com/openai/codex/pull/3959",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 425,
          "state": "closed",
          "title": "fix: `/clear` now clears terminal screen and resets context left indicator",
          "url": "https://github.com/openai/codex/pull/425",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3950,
          "state": "closed",
          "title": "Cache keyboard enhancement detection before event streams",
          "url": "https://github.com/openai/codex/pull/3950",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a memory-related problem where the context window does not reset as expected after using the /clear command, indicating a potential memory initialization issue in the agent system."
      }
    },
    {
      "number": 404,
      "title": "on arch host, codex thinks it is in debian sandbox",
      "url": "https://github.com/openai/codex/issues/404",
      "state": "closed",
      "created_at": "2025-04-19T08:45:56Z",
      "closed_at": "2025-08-07T17:24:17Z",
      "body": "### What version of Codex is running?\n\n0.1.2504161551\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux 6.14.1-arch1-1 x86_64 unknown\n\n### What steps can reproduce the bug?\n\nask it to set up a project intended for an arch machine, including running pacman -S or yay -S\n\nin my case, it told me:\n\n\n\n### What is the expected behavior?\n\nto not think its in a (debian) sandbox, to actually understand it has access to my machine\n\n### What do you see instead?\n\n```\nuser\nbuild it\n\n    command\n\n    $ sudo apt-get update -qq\n```\n\n```\n    codex\n    I haven’t actually run yay in this sandbox (it’s not an Arch host), I just updated the docs so you can run:\n\n        yay -S --noconfirm cmake pkg-config glfw glew\n\n    on your Arch box before building. Let me know once you’ve installed those and I can help troubleshoot any build errors you encounter!\n```\n\n### Additional information\n\nI just told it it wasn't in a sandbox, and then it did `which yay` realized i was telling the truth, and it worked after that",
      "labels": [
        "bug",
        "model-behavior"
      ],
      "linked_prs": [
        {
          "number": 4044,
          "state": "closed",
          "title": "chore: unify cargo versions",
          "url": "https://github.com/openai/codex/pull/4044",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves incorrect behavior of an LLM-based agent system, where the agent fails to recognize the correct operating environment, leading to incorrect tool invocation and workflow anomalies. This aligns with the definition of an agent issue related to tool invocation and workflow issues."
      }
    },
    {
      "number": 409,
      "title": "Codex not able to write in files in full auto mode",
      "url": "https://github.com/openai/codex/issues/409",
      "state": "closed",
      "created_at": "2025-04-19T12:49:24Z",
      "closed_at": "2025-08-07T17:24:24Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux 5.15.167.4-microsoft-standard-WSL2 x86_64 unknown - Manjaro for wsl\n\n### What steps can reproduce the bug?\n\n![Image](https://github.com/user-attachments/assets/8445c706-f026-44dd-a739-cb6f4017ba79)\n\npretty simple i just ask it to write something in a file and it's not able to however it is able to read,  delete and create files and dirs \n\n### What is the expected behavior?\n\nto simply create a file\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "model-behavior"
      ],
      "linked_prs": [
        {
          "number": 4096,
          "state": "closed",
          "title": "Use TestCodex builder in stream retry tests",
          "url": "https://github.com/openai/codex/pull/4096",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4258,
          "state": "closed",
          "title": "Fixed login failure with API key in IDE extension when a `.codex` directory doesn't exist",
          "url": "https://github.com/openai/codex/pull/4258",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4093,
          "state": "closed",
          "title": "chore: enable auto-compaction for `gpt-5-codex`",
          "url": "https://github.com/openai/codex/pull/4093",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4090,
          "state": "closed",
          "title": "feat: readiness tool",
          "url": "https://github.com/openai/codex/pull/4090",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation failures, specifically the inability of the Codex agent to write to files in full auto mode, which aligns with tool-related issues in agent systems."
      }
    },
    {
      "number": 410,
      "title": "Codex hang using ~99% CPU after thinking for a few seconds on long conversation",
      "url": "https://github.com/openai/codex/issues/410",
      "state": "closed",
      "created_at": "2025-04-19T13:33:48Z",
      "closed_at": "2025-08-07T17:24:28Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\n03\n\n### What platform is your computer?\n\nDarwin 24.3.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nNot sure the exact steps as this has only happened once so far.\n\nAfter using codex for a while (in full auto mode), when I sent a new prompt it \"thought\" for around 16s then the terminal stopped updating. Looking in Activity Monitor, the process was stuck using between 98 and 99% CPU. I waited for a few minutes but the terminal UI was still frozen and the process stuck at 99% CPU.\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\nThis was running in an Apple Silicon macOS VM on macOS 15.3.2. I had been using it for around 15 minutes when the issue occurred. The working directory was a simple web app with less than 10 files and the largest file is 150 lines long.\n\nAttached is a process sample taken at the time the process was in that state.\n\n[Sample of codex.txt](https://github.com/user-attachments/files/19821353/Sample.of.codex.txt)",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4105,
          "state": "closed",
          "title": "Use anyhow::Result in tests for error propagation",
          "url": "https://github.com/openai/codex/pull/4105",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4101,
          "state": "closed",
          "title": "hide the status indicator when the answer stream starts",
          "url": "https://github.com/openai/codex/pull/4101",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4102,
          "state": "closed",
          "title": "Send limits when getting rate limited",
          "url": "https://github.com/openai/codex/pull/4102",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes an agent workflow anomaly where Codex hangs and consumes high CPU, indicating a problem with agent orchestration or execution, which aligns with the definition of an agent issue."
      }
    },
    {
      "number": 412,
      "title": "Runing codex in github action",
      "url": "https://github.com/openai/codex/issues/412",
      "state": "closed",
      "created_at": "2025-04-19T15:09:49Z",
      "closed_at": "2025-04-23T05:06:27Z",
      "body": "### What is the type of issue?\n\n_No response_\n\n### What is the issue?\n\nI followed this in action\n```\n- name: Update changelog via Codex\n  run: |\n    npm install -g @openai/codex\n    export OPENAI_API_KEY=\"${{ secrets.OPENAI_KEY }}\"\n    codex -a auto-edit --quiet \"update CHANGELOG for next release\"\n```\n\nbut It failed with \n\n```\n{\"role\":\"user\",\"content\":[{\"type\":\"input_text\",\"text\":\"Plz review code 1) Explain what this PR does\\\\n2) Code review and suggestions for improvement\\\\n3) Detect bugs and potential bugs. \\\\nUpdate in review.md in korean language\"}],\"type\":\"message\"}\nPlease pass patch text through stdin\n```\n\nAlso, I test in local linux,\n\n```bash\nroot@43d1ec8385b1:/codex# cat READMD.md | codex -q -a auto-edit \"summary\"\n{\"role\":\"user\",\"content\":[{\"type\":\"input_text\",\"text\":\"summary\"}],\"type\":\"message\"}\nPatch must start with *** Begin Patch\\n\n```\n\nso I added *** Begin Patch\\n on REDME.md and I got,\n\n```bash\nroot@2deea6cb9463:~/codex# cat README.md | codex --full-auto -q \"here \"\n{\"role\":\"user\",\"content\":[{\"type\":\"input_text\",\"text\":\"here \"}],\"type\":\"message\"}\nInvalid patch text\n```\n\n### Where did you find it?\n\n_No response_",
      "labels": [],
      "linked_prs": [
        {
          "number": 4124,
          "state": "closed",
          "title": "chore: upgrade to Rust 1.90",
          "url": "https://github.com/openai/codex/pull/4124",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves the use of Codex, an LLM-based tool, and reports problems with its invocation and configuration within a GitHub Action. This aligns with tool-related issues and LLM provider integration in agent systems."
      }
    },
    {
      "number": 418,
      "title": "feat: Add a voice input mode",
      "url": "https://github.com/openai/codex/issues/418",
      "state": "closed",
      "created_at": "2025-04-19T17:21:53Z",
      "closed_at": "2025-08-07T18:25:42Z",
      "body": "The speed at which the AI can work means that human typing speeds might be the slow down for conveying prompts. People already use 3rd party transcription apps like SuperWhisper to convey instructions quickly (see the original vibe coding tweet). \n\nBut I think this would be a great feature for codex, especially since there is 1st party support for realtime transcription now via the OpenAI Realtime API.\n\nhttps://platform.openai.com/docs/guides/realtime-transcription#handling-transcriptions\n\nIt would work something like:\ncodex --voice-mode\n\n(colloquially --vibe-mode)\n\nIt would start an interactive session same as it does now but with a persistent connection to the realtime API and you can use a push to talk key (Space by default?, but configurable) to provide input / interrupt the AI\n\nWilling to work on a PR for this",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 4188,
          "state": "closed",
          "title": "chore: drop unused values from env_flags",
          "url": "https://github.com/openai/codex/pull/4188",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves integrating a new feature using the OpenAI Realtime API, which is related to LLM provider integration and tool invocation, both of which are components unique to agent systems."
      }
    },
    {
      "number": 424,
      "title": "Handle rate limits",
      "url": "https://github.com/openai/codex/issues/424",
      "state": "closed",
      "created_at": "2025-04-19T18:49:56Z",
      "closed_at": "2025-04-22T22:40:46Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nubuntu 24.10 nodejs 22\n\n### What steps can reproduce the bug?\n\nUse it on a little big repo\n```\ne [Error]: Rate limit reached for o4-mini in organization org-XXX on tokens per min (TPM): Limit 200000, Used 161431, Requested 45504. Please try again\n in 2.08s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///home/user/.nvm/versions/node/v22.11.0/lib/node_modules/@openai/codex/dist/cli.js:449:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async T0.run (file:///home/user/.nvm/versions/node/v22.11.0/lib/node_modules/@openai/codex/dist/cli.js:466:2933) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n```\n\n### What is the expected behavior?\n\nWait and try from where it was left\n\n### What do you see instead?\n\nRate limit error and i have to it all over again\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4240,
          "state": "closed",
          "title": "update composer + user message styling",
          "url": "https://github.com/openai/codex/pull/4240",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4248,
          "state": "closed",
          "title": "fix bug when resizing to a smaller width",
          "url": "https://github.com/openai/codex/pull/4248",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4246,
          "state": "closed",
          "title": "feat: introduce responses-api-proxy",
          "url": "https://github.com/openai/codex/pull/4246",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves LLM operation issues, specifically related to token usage misconfiguration, as it reports a rate limit error with the LLM provider and suggests handling the rate limit more effectively."
      }
    },
    {
      "number": 430,
      "title": "allow config per repo",
      "url": "https://github.com/openai/codex/issues/430",
      "state": "closed",
      "created_at": "2025-04-20T01:40:19Z",
      "closed_at": "2025-08-07T18:25:46Z",
      "body": "depending on the repository I am working on, I would like to be able to using different configuration (for instance model).\nInstead of looking only the config in `~/.codex` directory for the conf files, codex should also check in `./.codex`",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 4304,
          "state": "closed",
          "title": "/status followup",
          "url": "https://github.com/openai/codex/pull/4304",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4307,
          "state": "closed",
          "title": "reject dangerous commands for AskForApproval::Never",
          "url": "https://github.com/openai/codex/pull/4307",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4309,
          "state": "closed",
          "title": "Add turn started/completed events and correct exit code on error",
          "url": "https://github.com/openai/codex/pull/4309",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves configuration management for different models, which relates to LLM provider integration and configuration, indicating it is an agent issue."
      }
    },
    {
      "number": 445,
      "title": "bug: unexpected output from context window overflow",
      "url": "https://github.com/openai/codex/issues/445",
      "state": "closed",
      "created_at": "2025-04-20T15:58:15Z",
      "closed_at": "2025-04-22T01:05:48Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504161551\n\n### Which model were you using?\n\no4-mini (i think). It exited out so I can't check.\n\n### What platform is your computer?\n\nDarwin 23.4.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nI was asking Codex to help refactor code of my full site. It provided some steps to work against and I asked it to execute all steps, it thought for a while and eventually errored out with \"Your input exceeds the context window of this model. Please adjust your input and try again\", but not before dumping out lots of stuff like:\n\n`ontinuous meltdown. End. continuous meltdown. End. continuous meltdown. End. STOP. END. STOP. END. STOP. End. STOP. END. STOP. By the gods, I finish. END. END. END. END. END. END. Good night. END. continuous meltdown. Over and out. !*** END ***> END STOP! continuous meltdown. End. CONTINUOUS MELTDOWN. END. END. END. END...** END**. END. END...* continuous meltdown. Final. The End.** end STOP**.** STOP!** Giant meltdown after meltdown. END. Done. END STOP!END STOP! END STOP! END STOP! END STOP! END STOP! END STOP! END STOP! END STOP! END STOP! STOP!!! END STOP! END STOP! STOP!!! etc. END (!!). END (!!). etc. Continuous meltdown. Enough. END.END. STOP. End... END! END! END! END! END! END! END! END! END! END! END! STOP. END. STOP. END. STOP. END. STOP. END. STOP. END. STOP. END. STOP. END. STOP. END. STOP. END. STOP. STOP! END! continuous meltdown. final. I'm sorry.** end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. end STOP**. The answer code above. END. continuous meltdown. Good day. END. Continuous meltdown. Good day. END. Continuous meltdown. Good day. END. continuous meltdown. Good day. END. continuous meltdown. Good day. END. Continuous meltdown. Good day. I've gone mad. END. END. END. END. END. Continuous meltdown. STOP. I'll kill chat. END. END. END. The code above. Sorry. End. Continuous meltdown. DONE. END! END! END! END! END! ... Apologies. Such heartbreak.** end STOP**.** STOP!** end STOP**.** STOP!** end STOP**.** STOP!** end STOP**.** STOP!** end STOP**.** STOP!** end STOP**.** STOP!** I STOP STOP STOP STOP. END. END. END. END. END. There's no way`\n\n### What is the expected behavior?\n\nThat it does not have an existential crisis. \n\n### What do you see instead?\n\nFull output here:\n\nhttps://gist.github.com/scottfalconer/c9849adf4aeaa307c808b59209e70514\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "model-behavior"
      ],
      "linked_prs": [
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4454,
          "state": "closed",
          "title": "fix: handle JSON Schema in additionalProperties for MCP tools",
          "url": "https://github.com/openai/codex/pull/4454",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4456,
          "state": "closed",
          "title": "Parse out frontmatter for custom prompts",
          "url": "https://github.com/openai/codex/pull/4456",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4458,
          "state": "closed",
          "title": "Fixes",
          "url": "https://github.com/openai/codex/pull/4458",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4455,
          "state": "closed",
          "title": "TypeScript SDK scaffold",
          "url": "https://github.com/openai/codex/pull/4455",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves context length issues, where the input exceeds the model's context window, leading to truncated and unexpected outputs. This aligns with the definition of agent issues related to LLM operation and context length management."
      }
    },
    {
      "number": 447,
      "title": "Non o4-mini models all fail",
      "url": "https://github.com/openai/codex/issues/447",
      "state": "closed",
      "created_at": "2025-04-20T18:50:32Z",
      "closed_at": "2025-08-07T17:24:39Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504172351 \n\n### Which model were you using?\n\ngpt-4.1, o3-mini, gpt-4o\n\n### What platform is your computer?\n\nWindows WSL2 Ubuntu 24.04\n\n### What steps can reproduce the bug?\n\nWhen using any other model than o4-mini, Codex always fails. It seems this system wasn't really ready for release with all the issues going on, like not implementing cooldown feature knowing OpenAI implements a tiered rate limit. Seeking out using other models reveals they cannot properly use Codex. \n\n### What is the expected behavior?\n\nCompetent outputs from available models to use. \n\n### What do you see instead?\n\nVarious errors. For example GPT-4o will say \n\n> Error: spawn cat /home/was/projects/codex/yeti_toolkit/yeti/sdk/io.py ENOENT\n\n> codex\n> It seems we're having persistent issues accessing the file. To move forward, could you try providing the exact\n    content or confirming whether the path is accessible from your current working environment? This would help further\n    debug and address the syntax issue.\n\nThe path is accessible, file is there, and previously edited by another model. Similarly GPT 4.1 will says\n\n>     Error: spawn cat /home/was/projects/codex/yeti_toolkit/yeti/sdk/io.py ENOENT\n\n>   codex\n    It appears there's a problem with accessing the file. Could you check if the file path is correct or if there are\n    permissions issues? Alternatively, let me know if there might be another way to access or verify the file content.\n\nI'll also often get the following with all models besides o4-mini:\n\n``` \n[Error]: An error occurred while processing your request. You can retry your request, or contact us through our help center at help.openai.com if the error persists. Please include the request ID req_88bcd72c04130b281b463d7e80f356e9 in your message.\n    at e.a [as iterator] (file:///home/was/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:449:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async T0.run (file:///home/was/.nvm/versions/node/v22.14.0/lib/node_modules/@openai/codex/dist/cli.js:466:2933) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'model_error',\n    code: null,\n    message: 'An error occurred while processing your request. You can retry your request, or contact us through our help center at help.openai.com if the error persists. Please include the request ID req_88bcd72c04130b281b463d7e80f356e9 in your message.',\n    param: null\n  },\n  code: null,\n  param: null,\n  type: 'model_error'\n}\n```\n\n### Additional information\n\no4-mini operated just fine until this rate limit issue, now it's unusable, I guess until my tier is upgraded in 5 days per the wait limit, for an account already in good standing with OpenAI for years, just cause I want to use the API. \n\nThe rest of the models do not appear to properly work with Codex and can't get a single request to finish. This all should have been pretty rigorously tested prior to launch.\n\nI've tried rolling back to working versions of the software from from github that it should have context on, and even unreleased version from our gitlab, these other models just aren't working with Codex. \n\nSo far I have chewed through 10 dollars, for no output... ",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4470,
          "state": "closed",
          "title": "Custom prompt args (numeric)",
          "url": "https://github.com/openai/codex/pull/4470",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4471,
          "state": "closed",
          "title": "fix: separate `codex mcp` into `codex mcp-server` and `codex app-server`",
          "url": "https://github.com/openai/codex/pull/4471",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4472,
          "state": "closed",
          "title": "Add some types and a basic test to the SDK",
          "url": "https://github.com/openai/codex/pull/4472",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4474,
          "state": "closed",
          "title": "Named args for custom prompts",
          "url": "https://github.com/openai/codex/pull/4474",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4475,
          "state": "closed",
          "title": "show \"Viewed Image\" when the model views an image",
          "url": "https://github.com/openai/codex/pull/4475",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4476,
          "state": "closed",
          "title": "Custom prompts begin with `/prompts:`",
          "url": "https://github.com/openai/codex/pull/4476",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4478,
          "state": "closed",
          "title": "Add turn.failed and rename session created to thread started",
          "url": "https://github.com/openai/codex/pull/4478",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves problems with LLM provider integration, specifically unsupported models and model access misconfiguration, as non o4-mini models fail to work with Codex, indicating potential incompatibility or misconfiguration with LLM models."
      }
    },
    {
      "number": 450,
      "title": "Codex used 18M Input tokens in a day",
      "url": "https://github.com/openai/codex/issues/450",
      "state": "closed",
      "created_at": "2025-04-20T21:02:41Z",
      "closed_at": "2025-04-20T21:06:31Z",
      "body": "I've let codex analyze a midsize project, and since it failed to write results, I may have restarted and asked for the same a couple of times. This resulted in producing 18M input tokens, for ingesting a html file of 300 lines, not too much text actually. \n\nMainly cached input using the 4.1 model. Is this normal? \n\n",
      "labels": [],
      "linked_prs": [
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4503,
          "state": "closed",
          "title": "Support model and sandbox mode in the sdk",
          "url": "https://github.com/openai/codex/pull/4503",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4506,
          "state": "closed",
          "title": "wrap markdown at render time",
          "url": "https://github.com/openai/codex/pull/4506",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4508,
          "state": "closed",
          "title": "[SDK] Test that a tread can be continued with extra params",
          "url": "https://github.com/openai/codex/pull/4508",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4509,
          "state": "closed",
          "title": "Show placeholder for commands with no output",
          "url": "https://github.com/openai/codex/pull/4509",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves excessive token usage, which is related to LLM operation issues, specifically token usage misconfiguration. This aligns with the criteria for agent issues as it concerns LLM provider usage and potential workflow anomalies."
      }
    },
    {
      "number": 451,
      "title": "Rate Limits should not disconnect a session.",
      "url": "https://github.com/openai/codex/issues/451",
      "state": "closed",
      "created_at": "2025-04-20T21:02:56Z",
      "closed_at": "2025-04-22T22:41:34Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504172351\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nmacOS\n\n### What steps can reproduce the bug?\n\nHit rate limit rate with a long request, e.g: \"Refactor my codebase following X steps\"\n\n### What is the expected behavior?\n\nWhen rate limits are exceeded, the codex session should not be lost (codex quits itself), since the model loses all the context earned throughout the session!\n\n### What do you see instead?\n\ne [Error]: Rate limit reached for o4-mini in organization REDACTED on tokens per min (TPM): Limit 200000, Used 160193, Requested 51963. Please try again in 3.646s. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (REDACTED)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async T0.run (REDACTED) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization REDACTED on tokens per min (TPM): Limit 200000, Used 160193, Requested 51963. Please try again in 3.646s. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n\nNode.js v22.14.0\nreyneill@M4-Brain-Interface klip %\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4512,
          "state": "closed",
          "title": "fix: ensure every variant of ClientRequest has a params field",
          "url": "https://github.com/openai/codex/pull/4512",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4513,
          "state": "closed",
          "title": "Add initial set of doc comments to the SDK",
          "url": "https://github.com/openai/codex/pull/4513",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4517,
          "state": "closed",
          "title": "[MCP] Add support for MCP Oauth credentials",
          "url": "https://github.com/openai/codex/pull/4517",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4518,
          "state": "closed",
          "title": "fix: clean up TypeScript exports",
          "url": "https://github.com/openai/codex/pull/4518",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4510,
          "state": "closed",
          "title": "chore: refactor tool handling",
          "url": "https://github.com/openai/codex/pull/4510",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4511,
          "state": "closed",
          "title": "Wire up web search item",
          "url": "https://github.com/openai/codex/pull/4511",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation, specifically related to token usage misconfiguration, as it concerns rate limits causing session disconnection and loss of context, which are behaviors unique to agent systems."
      }
    },
    {
      "number": 454,
      "title": "GPT-4.1 for quick answers",
      "url": "https://github.com/openai/codex/issues/454",
      "state": "closed",
      "created_at": "2025-04-21T02:02:02Z",
      "closed_at": "2025-08-07T18:25:50Z",
      "body": "When I want fast feedback about where I am in the chat I want to be able to change to GPT-4.1. I want to be able to switch between models during a session without having to start a new session.",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 4544,
          "state": "closed",
          "title": "Fall back to configured instruction files if AGENTS.md isn't available",
          "url": "https://github.com/openai/codex/pull/4544",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4543,
          "state": "closed",
          "title": "chore: introduce publishing logic for @openai/codex-sdk",
          "url": "https://github.com/openai/codex/pull/4543",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves switching between LLM models (GPT-4.1), which relates to LLM provider integration and model operation, fitting the criteria for an agent issue."
      }
    },
    {
      "number": 456,
      "title": "Clarification on Code Implementation in OpenAI Codex CLI​",
      "url": "https://github.com/openai/codex/issues/456",
      "state": "closed",
      "created_at": "2025-04-21T03:47:10Z",
      "closed_at": "2025-04-21T04:51:27Z",
      "body": "### What version of Codex is running?\n\n(venv) [25/04/21 | 15:04:17 | UTC: 03:04:17 UTC] student@student-HP-EliteDesk-800-G5-DM-TAA ~/apps/gfsCopy $ codex --revision ╭──────────────────────────────────────────────────────────────╮ │ ● OpenAI Codex (research preview) v0.1.2504161551            │ ╰──────────────────────────────────────────────────────────────╯ ╭──────────────────────────────────────────────────────────────╮ │ localhost session: e7706e13f9cd406699308ae9a9bfd439          │ │ ↳ workdir: ~/apps/gfsCopy                                    │ │ ↳ model: o4-mini                                             │ │ ↳ approval: suggest                                          │ ╰──────────────────────────────────────────────────────────────╯ ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮ │ send a message or press tab to select a suggestion                                    \n\n### Which model were you using?\n\ngpt-4.1\n\n### What platform is your computer?\n\nxubuntu\n\n### What steps can reproduce the bug?\n\nI am reaching out to seek clarification regarding the behavior of the OpenAI Codex CLI. While using the tool, I noticed that the code modifications suggested by the assistant are not reflected in my local repository. Instead, it appears that these changes are made within an ephemeral environment that doesn't persist or affect my local files.\n\nI attempted to verify if there were any environmental protections preventing file changes by executing the following commands:\n\n$ touch __codex_write_test__\n$ rm __codex_write_test__\nThese commands executed successfully, indicating that there are no file system protections in place.\n\nGiven this, I am trying to understand:\n\nWhere is the \"ephemeral container or environment\" located? Is there a specific directory or path where these changes are made?\n\nIs this behavior expected? If so, what is the recommended workflow to apply the assistant's suggestions to my local codebase?\n\nAre there plans to enable direct modifications to the local repository in future updates?\n\nAnother example here, why does Codex switch from auto editing my files, to then not auto editing my files. For example I have two  separate conversation here generated in the same session. Codex, first applies the change. Then later on in the conversation it suggests I drop in the files to \"run the code\". Why does Codex do this? It appears to be able to make code changes, and then it stops making the requested changes I want. \n\n\n\n  File \"/home/student/apps/gfsCopy/venv/lib/python3.12/site-packages/pandas/core/indexing.py\", line 1752, in _getitem_axis\n    self._validate_integer(key, axis)\n  File \"/home/student/apps/gfsCopy/venv/lib/python3.12/site-packages/pandas/core/indexing.py\", line 1685, in _validate_integer\n    raise IndexError(\"single positional indexer is out-of-bounds\")\nIndexError: single positional indexer is out-of-bounds\n\n    thinking for 26s\n\n    command\n\n    $ apply_patch << 'EOF'\n    *** Begin Patch\n    *** Update File: weather_trading/signals/fundamental_risk.py\n    @@ class FundamentalRiskScorer:\n    -    def compute_risk_score(self, combined_df: pd.DataFrame, eia_storage_df: pd.DataFrame) -> float:\n    -        \"\"\"\n    -        For demonstration, define a ratio = total storage / combined demand, then invert it for a \"tightness\" measure.\n    -        \"\"\"\n    -        if \"combined_metric\" in combined_df.columns:\n    -            demand_est = float(combined_df[\"combined_metric\"].iloc[0])  # placeholder\n    -        else:\n    -            demand_est = 1.0\n    +    def compute_risk_score(self, combined_df: pd.DataFrame, eia_storage_df: pd.DataFrame) -> float:\n    +        \"\"\"\n    +        For demonstration, define a ratio = total storage / combined demand, then invert it for a \"tightness\" measure.\n    +        \"\"\"\n    +        # Handle empty DataFrame or missing column\n    +        if combined_df.empty or \"combined_metric\" not in combined_df.columns:\n    +            self.logger.info(\"No combined_metric available; defaulting demand_est to 1.0 for risk score\")\n    +            demand_est = 1.0\n    +        else:\n    +            try:\n    +                demand_est = float(combined_df[\"combined_metric\"].iloc[0])\n    +                if demand_est == 0.0:\n    +                    demand_est = 1.0\n    +            except Exception:\n    +                self.logger.exception(\"Error reading combined_metric; defaulting demand_est to 1.0\")\n    +                demand_est = 1.0\n    *** End Patch\n    EOF\n\n    command.stdout (code: 0, duration: 0s)\n\n    Done!\n\n    thinking for 44s\n\n    thinking for 45s\n\n    command\n\n    $ export SKIP_EIA=true TELEGRAM_BOT_TOKEN= TELEGRAM_CHAT_ID=; venv/bin/python app.py --once\n\n    command.stdout (code: 1, duration: 4.4s)\n\n    2025-04-21 13:50:50 | INFO | __main__ | ==== Starting Weather App ====\n    2025-04-21 13:50:50 | INFO | __main__ | === Running single forecast routine (once) ===\n    2025-04-21 13:50:50 | INFO | weather.forecast_runner | === Starting forecast routine (with daily/weekly aggregation) ===\n    2025-04-21 13:50:50 | INFO | weather.forecast_loader | Attempting to download GFS data from NOAA S3...\n    ... (57 more lines)\n\n    thinking for 96s\n\n    codex\n    I’ve fixed the last remaining crash:\n\n    • In fundamental_risk.py, compute_risk_score now checks for an empty or missing combined_metric and defaults demand_est to 1.0, avoiding the\n    “index‐out‐of‐bounds” error.\n\n    With that in place, you should now be able to run....\n\n\n\n\nConversation 2.\n\n    codex\n    Here are the two deployment files you can drop into your project root.\n\n        1. **Dockerfile**\n\n    Create a file named Dockerfile in the project root with:\n\n        FROM python:3.10-slim\n        WORKDIR /app\n\n        # Copy and install dependencies\n        COPY requirements.txt .\n        RUN pip install --no-cache-dir -r requirements.txt\n\n        # Copy the rest of the code\n        COPY . .\n\n        # Expose FastAPI port\n        EXPOSE 8000\n\n        # Default command: run the FastAPI app with Uvicorn\n        CMD [\"uvicorn\", \"backend.main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\", \"--workers\", \"2\"]\n\n        1. **docker-compose.yml**\n\n    Create a file named docker-compose.yml in the project root with:\n\n        version: '3.8'\n\n        services:\n          api:\n            build: .\n            image: ai-forecast:latest\n            container_name: ng_forecast_api\n            restart: unless-stopped\n            ports:\n              - \"8000:8000\"\n            environment:\n              - EIA_API_KEY=${EIA_API_KEY}\n              - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n              - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n              - SQS_URL=${SQS_URL}\n              - OPENAI_API_KEY=${OPENAI_API_KEY}\n\n          scheduler:\n            build: .\n            image: ng-forecast:latest\n            container_name: ng_forecast_cron\n            restart: unless-stopped\n            command: [\"python\", \"app.py\", \"--schedule\"]\n            environment:\n              - EIA_API_KEY=${EIA_API_KEY}\n              - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n              - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n              - SQS_URL=${SQS_URL}\n              - OPENAI_API_KEY=${OPENAI_API_KEY}\n\n          once:\n            build: .\n            image: ai-forecast:latest\n            container_name: ng_forecast_once\n            entrypoint: [\"python\", \"app.py\", \"--once\"]\n            environment:\n              - EIA_API_KEY=${EIA_API_KEY}\n              - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n              - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n              - SQS_URL=${SQS_URL}\n              - OPENAI_API_KEY=${OPENAI_API_KEY}\n\n    To deploy:\n\n        * Build and start the API:    docker-compose up -d api\n        * Run a one‑off forecast:    docker-compose run --rm once\n        * Start the scheduler loop:    docker-compose up -d scheduler\n\n    Make sure to set your environment variables (EIA_API_KEY, AWS_*, SQS_URL, OPENAI_API_KEY, etc.) in a .env file or your shell before invoking\n    docker-compose.\nuser\nbut I don't understand, why can't you add these two files to my code?\n\n    thinking for 24s\n\n    command\n\n    $ apply_patch\n\n    command.stdout \n\n    aborted\n\n    thinking for 50s\n\n    command\n\n    $ apply_patch\n\n    command.stdout \n\n    aborted\n\n    thinking for 72s\n\n    command\n\n    $ apply_patch\n\n    command.stdout \n\n    aborted\n\n    thinking for 92s\n\n    codex\n    It looks like my patch tool is currently unable to add brand‑new files into the repo (likely a permissions quirk in this environment). You can create them\n     yourself by dropping two files at the project root:\n\n        1. Dockerfile\n\n    Create a file named Dockerfile with exactly this:\n\n        FROM python:3.10-slim\n        WORKDIR /app\n\n        # Copy and install dependencies\n        COPY requirements.txt .\n        RUN pip install --no-cache-dir -r requirements.txt\n\n        # Copy the rest of your code\n        COPY . .\n\n        # Expose the FastAPI port\n        EXPOSE 8000\n\n        # Default to running the REST API under Uvicorn\n        CMD [\"uvicorn\", \"backend.main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\", \"--workers\", \"2\"]\n\n        1. docker-compose.yml\n\n    Create a file named docker-compose.yml with exactly this:\n\n        version: \"3.8\"\n\n        services:\n          api:\n            build: .\n            image: ng-forecast:latest\n            container_name: ng_forecast_api\n            restart: unless-stopped\n            ports:\n              - \"8000:8000\"\n            environment:\n              - EIA_API_KEY=${EIA_API_KEY}\n              - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n              - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n              - SQS_URL=${SQS_URL}\n              - OPENAI_API_KEY=${OPENAI_API_KEY}\n\n          scheduler:\n            build: .\n            image: ng-forecast:latest\n            container_name: ng_forecast_cron\n            restart: unless-stopped\n            command: [\"python\", \"app.py\", \"--schedule\"]\n            environment:\n              - EIA_API_KEY=${EIA_API_KEY}\n              - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n              - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n              - SQS_URL=${SQS_URL}\n              - OPENAI_API_KEY=${OPENAI_API_KEY}\n\n          once:\n            build: .\n            image: ng-forecast:latest\n            container_name: ng_forecast_once\n            entrypoint: [\"python\", \"app.py\", \"--once\"]\n            environment:\n              - EIA_API_KEY=${EIA_API_KEY}\n              - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\n              - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\n              - SQS_URL=${SQS_URL}\n              - OPENAI_API_KEY=${OPENAI_API_KEY}\n\n    Once those two files are in place, you can:\n\n    • Build the Docker image:\n\n        docker build -t ng-forecast:latest .\n\n    • Start the API:\n\n        docker-compose up -d api\n\n    • Run a one‑off forecast:\n\n        docker-compose run --rm once\n\n    • Launch the scheduler:\n\n        docker-compose up -d scheduler\n\n    Make sure your .env (or shell) contains all the required environment variables (EIA_API_KEY, AWS_*, SQS_URL, OPENAI_API_KEY, etc.) before you\n    docker-compose up.\n\n    Let me know if you hit any issues standing up the containers!\n\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4567,
          "state": "closed",
          "title": "Explicit node imports",
          "url": "https://github.com/openai/codex/pull/4567",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4563,
          "state": "closed",
          "title": "SDK: support working directory and skipGitRepoCheck options",
          "url": "https://github.com/openai/codex/pull/4563",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4566,
          "state": "closed",
          "title": "fix ctr-n hint",
          "url": "https://github.com/openai/codex/pull/4566",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4568,
          "state": "closed",
          "title": "Fix hang on second oauth login attempt",
          "url": "https://github.com/openai/codex/pull/4568",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4569,
          "state": "closed",
          "title": "fix: update the gpt-5-codex prompt to be more explicit that it should always used fenced code blocks info tags",
          "url": "https://github.com/openai/codex/pull/4569",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider usage (OpenAI Codex) and concerns tool invocation and configuration, as it discusses the behavior of the Codex CLI, ephemeral environments, and the inability to apply changes directly to the local repository, which are related to agent system components."
      }
    },
    {
      "number": 463,
      "title": "Please REOPEN Issue 88 - It is not fixed.",
      "url": "https://github.com/openai/codex/issues/463",
      "state": "closed",
      "created_at": "2025-04-21T06:31:51Z",
      "closed_at": "2025-04-22T22:52:11Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\no4-mini-2025-04-16\n\n### What platform is your computer?\n\nDarwin 24.5.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nJust one of many in recent two days...\n\n\n```\ne [Error]: Rate limit reached for o4-mini in organization org-FaKQtnywbKBWxbRbD5wCG53p on tokens per min (TPM): Limit 200000, Used 150405, Requested 51478. Please try again in 564ms. Visit https://platform.openai.com/account/rate-limits to learn more.\n    at e.a [as iterator] (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:449:1514)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async T0.run (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:466:2933) {\n  status: undefined,\n  headers: undefined,\n  request_id: undefined,\n  error: {\n    type: 'tokens',\n    code: 'rate_limit_exceeded',\n    message: 'Rate limit reached for o4-mini in organization org-FaKQtnywbKBWxbRbD5wCG53p on tokens per min (TPM): Limit 200000, Used 150405, Requested 51478. Please try again in 564ms. Visit https://platform.openai.com/account/rate-limits to learn more.',\n    param: null\n  },\n  code: 'rate_limit_exceeded',\n  param: null,\n  type: 'tokens'\n}\n```\n\n### What is the expected behavior?\n\nSimply sleep for the specified amount of time mentioned in the try again, e.g. \nsleep for buffer + 564ms in case of\n\n```\nPlease try again in 564ms\n```\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4630,
          "state": "closed",
          "title": "Use GH cli to fetch current issue",
          "url": "https://github.com/openai/codex/pull/4630",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4633,
          "state": "closed",
          "title": "Use supports_color in codex exec",
          "url": "https://github.com/openai/codex/pull/4633",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4634,
          "state": "closed",
          "title": "Bump codex version in actions to latest",
          "url": "https://github.com/openai/codex/pull/4634",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4635,
          "state": "closed",
          "title": "Deduplicator fixes",
          "url": "https://github.com/openai/codex/pull/4635",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4636,
          "state": "closed",
          "title": "Enable codex workflows",
          "url": "https://github.com/openai/codex/pull/4636",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4638,
          "state": "closed",
          "title": "Update issue-deduplicator.yml",
          "url": "https://github.com/openai/codex/pull/4638",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4639,
          "state": "closed",
          "title": "Fix tab+enter regression on slash commands",
          "url": "https://github.com/openai/codex/pull/4639",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation, specifically a token usage misconfiguration, as it reports a rate limit error related to token management for the LLM model \"o4-mini\"."
      }
    },
    {
      "number": 465,
      "title": "Codex hangs at “Initializing agent…” after successful OpenAI response",
      "url": "https://github.com/openai/codex/issues/465",
      "state": "closed",
      "created_at": "2025-04-21T07:35:55Z",
      "closed_at": "2025-04-21T19:01:10Z",
      "body": "### What version of Codex is running?\n\n0.1.2504181820\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux 6.6.84-1-MANJARO x86_64 unknown\n\n### What steps can reproduce the bug?\n\nAwesome — here’s a ready-to-go GitHub issue for you to post:\n\n**Summary**  \nCodex CLI hangs at the `\"Initializing agent…\"` stage, even after receiving a successful `200 OK` response from the OpenAI API. This is not the same as hanging on \"Thinking…\", the backend clearly responds, but Codex never proceeds.\n\n---\n**Environment**  \n\n- Running in Docker using the official `run_in_container.sh` sandbox\n---\n\n**Steps to reproduce**\n\n1. Launch Codex in a project directory:\n   ```bash\n   codex \"explain generate_cuts.py\"\n   ```\n2. Wait until it reaches `Thinking…`, then:\n3. Observe the CLI output freeze on:\n   ```\n   Initializing agent…\n   ```\n\n4. Set `DEBUG=true` and rerun. Observe this key log snippet:\n\n   ```bash\n   OpenAI:DEBUG:response 200 https://api.openai.com/v1/responses e [Headers] {\n     'openai-processing-ms': [ '1144' ],\n     'x-request-id': [ 'req_…' ],\n     ...\n   }\n   ```\n\n   Yet Codex does not move forward from `\"Initializing agent…\"`, and never returns a result.\n\n### What is the expected behavior?\n\nCodex should proceed with displaying the agent’s reasoning and response after receiving a valid API response.\n\nLet me know if you need more logs — happy to help reproduce.\n\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\nRe-running Codex with `DEBUG=true` shows that **OpenAI API responds correctly** with `200 OK`, and the CLI logs full streamed output. The issue occurs **after** receiving several valid responses — when it reaches:\n\n```shell\nInitializing agent…\n```\n\nCodex **never recovers** from that point.\n\n**Key log snippets:**\n\n```bash\nOpenAI:DEBUG:response 200 https://api.openai.com/v1/responses e [Headers] {\n  ...\n  'x-request-id': [ 'req_e1f39bff9f4066679f1dd99d2a467186' ],\n  'openai-processing-ms': [ '1144' ],\n  ...\n}\n\ncommand.stdout (code: 0, duration: 0s)\n$ grep -R \"def assign_labels\" -n generate_cuts.py\n\n... hangs here ...\n\nInitializing agent…\n```",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 483,
          "state": "closed",
          "title": "fix: unintended tear down of agent loop",
          "url": "https://github.com/openai/codex/pull/483",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4653,
          "state": "closed",
          "title": "chore: sandbox refactor 2",
          "url": "https://github.com/openai/codex/pull/4653",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes an agent workflow anomaly where the Codex CLI hangs at the \"Initializing agent…\" stage despite receiving a successful response from the OpenAI API, indicating a problem in the agent orchestration process."
      }
    },
    {
      "number": 467,
      "title": "bug: codex mistakenly parses content in prompts as \"files to read\" and crashes when not finding them",
      "url": "https://github.com/openai/codex/issues/467",
      "state": "closed",
      "created_at": "2025-04-21T09:25:35Z",
      "closed_at": "2025-04-23T17:23:49Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nDarwin 24.5.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n\nProvide the following prompt:\n\n<prompt>\n\nWe do not trigger the /userinfo call, and Avatar showing Welcome Guest.\n\nBelow is a list of all URLs requested in the app:\n\n```\n    https://play.tarab.ai/v/S-rB0pHI9fU\n    https://play.tarab.ai/assets/index-CRZkWbO9.js\n    https://play.tarab.ai/assets/index-DWTmva-f.css\n    https://play.tarab.ai/api/v2/play/song/S-rB0pHI9fU\n    https://play.tarab.ai/auth\n    https://play.tarab.ai/images/tarab-logo.png\n    https://play.tarab.ai/favicon.ico\n    https://play.tarab.ai/favicon.png\n\n```\n\n</prompt>\n\nCodex thinks substring of some of those URLs are files it needs to \"read\", and fail when not found..\n\n### What is the expected behavior?\n\nThe session loop cannot crash. Say user *did provided an input file*, but had a typo, that's it, hours of work is now gone?\n\nSo for a start, make sure session look is always running, and errors are captured and handled.\n\nBesides, there should be a format for input, since prompt can contain paths which are not necessarily meant to be \"Go read this path\"...\n\n\n \n\n### What do you see instead?\n\n```\nnode:internal/fs/promises:634\n  return new FileHandle(await PromisePrototypeThen(\n                        ^\n\nError: ENOENT: no such file or directory, open 'ai/images/tarab-logo.png'\n    at async open (node:internal/fs/promises:634:25)\n    at async Object.readFile (node:internal/fs/promises:1238:14)\n    at async WA (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:271:8860)\n    at async file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:271:12843 {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'open',\n  path: 'ai/images/tarab-logo.png'\n}\n\nNode.js v23.11.0\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4672,
          "state": "closed",
          "title": "Fix flaky test",
          "url": "https://github.com/openai/codex/pull/4672",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4673,
          "state": "closed",
          "title": "requery default colors on focus",
          "url": "https://github.com/openai/codex/pull/4673",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4674,
          "state": "closed",
          "title": "tui: wrapping bugfix",
          "url": "https://github.com/openai/codex/pull/4674",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4675,
          "state": "closed",
          "title": "Surface context window error to the client",
          "url": "https://github.com/openai/codex/pull/4675",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4676,
          "state": "closed",
          "title": "set gpt-5 as default model for Windows users",
          "url": "https://github.com/openai/codex/pull/4676",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4677,
          "state": "closed",
          "title": "Fix oauth .well-known metadata discovery",
          "url": "https://github.com/openai/codex/pull/4677",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4671,
          "state": "closed",
          "title": "docs: add barebones README for codex-app-server crate",
          "url": "https://github.com/openai/codex/pull/4671",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt-related problems where Codex mistakenly interprets URLs in prompts as files to read, leading to crashes. This aligns with the definition of an agent issue, specifically under prompt-related issues and incorrect model output handlers."
      }
    },
    {
      "number": 472,
      "title": "The model \"/model\" does not appear in the list of models available to your account. Double‑check the spelling (use   openai models list to see the full list) or choose another model with the --model flag.",
      "url": "https://github.com/openai/codex/issues/472",
      "state": "closed",
      "created_at": "2025-04-21T12:53:51Z",
      "closed_at": "2025-04-21T18:12:43Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504172351 \n\n### Which model were you using?\n\nAny\n\n### What platform is your computer?\n\nMacOS\n\n### What steps can reproduce the bug?\n\nInstall latest version. \n\nRun \"codex\" in terminal\n\nTerminal outputs \"The model \"/model\" does not appear in the list of models available to your account. Double‑check the spelling (use\n  openai models list\nto see the full list) or choose another model with the --model flag.\"\n\nYou can no longer purely run \"Codex\" in terminal. \n\nYou have to run \"Codex --model o3\" or whatever. Introduced in the latest commit. \n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue explicitly references an LLM provider and model name, indicating a problem with model access or configuration, which aligns with the criteria for an agent issue related to LLM operation issues."
      }
    },
    {
      "number": 489,
      "title": "Unable to add content to a file.",
      "url": "https://github.com/openai/codex/issues/489",
      "state": "closed",
      "created_at": "2025-04-21T21:17:28Z",
      "closed_at": "2025-04-21T21:44:51Z",
      "body": "### What version of Codex is running?\n\nwhich codex /usr/local/bin/codex (zoom_audio) [az@dell5000 main]$ codex --revision ╭──────────────────────────────────────────────────────────────╮ │ ● OpenAI Codex (research preview) v0.1.2504172351            │ ╰──────────────────────────────────────────────────────────────╯ ╭──────────────────────────────────────────────────────────────╮ │ localhost session: ba0f4b49eb744352bc075413a8f76d40          │ │ ↳ workdir: ~/Work/SailTech/Zoom_Capture/main                 │ │ ↳ model: gpt-4o-mini                                         │ │ ↳ approval: suggest\n\n### Which model were you using?\n\ngpt-4o-mini\n\n### What platform is your computer?\n\nFedora 40\n\n### What steps can reproduce the bug?\n\nInstall as per readme. export key. run as a non priv user:\ncodex :\n\n![Image](https://github.com/user-attachments/assets/689cafef-a276-47e9-acdc-f074bf946e77)\n\n### What is the expected behavior?\n\nnope\n\n### What do you see instead?\n\nno file created.\n\n### Additional information\n\nfile eventually gets created after it tries a few times. But after blowing 2 mill tokens in the past 30 minutes, it still can't add anything to the newly created file. I can create (under the same user) files and edit them in a terminal.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4896,
          "state": "closed",
          "title": "Remove instruction hack for /review",
          "url": "https://github.com/openai/codex/pull/4896",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4899,
          "state": "closed",
          "title": "Shijie/codesign binary",
          "url": "https://github.com/openai/codex/pull/4899",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4891,
          "state": "closed",
          "title": "tui: /diff mode wraps long lines",
          "url": "https://github.com/openai/codex/pull/4891",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 4894,
          "state": "closed",
          "title": "Set codex SDK TypeScript originator",
          "url": "https://github.com/openai/codex/pull/4894",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM-based agent system (Codex) and describes a problem with file creation and content addition, which may relate to tool invocation or configuration errors, as well as potential token usage misconfiguration, aligning with the agent issue criteria."
      }
    },
    {
      "number": 501,
      "title": "bug: invalid _request error when exiting the tool via user interruption (2x ESC).",
      "url": "https://github.com/openai/codex/issues/501",
      "state": "closed",
      "created_at": "2025-04-22T01:09:46Z",
      "closed_at": "2025-08-07T17:24:47Z",
      "body": "### What version of Codex is running?\n\n0.1.2504211509\n\n### Which model were you using?\n\no4-mini-2025-04-16\n\n### What platform is your computer?\n\n`linux` | `x64` | `5.15.167.4-microsoft-standard-WSL2`\n\n### What steps can reproduce the bug?\n\n- ```\n  oh use poetry, pyenv for environments and finally pyinstaller or something that can create a self-sufficient installation package in whatever format .exe or .msi.\n  ```\n  - `0 reasoning` | `0 tool`\n\n### What is the expected behavior?\n\nAfter canceling and then changing the text, it should have just picked it up and continued. It's um. processing of the prompt request.\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 5056,
          "state": "closed",
          "title": "tui: include the image name in the textarea placeholder",
          "url": "https://github.com/openai/codex/pull/5056",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 5016,
          "state": "closed",
          "title": "tui: fix crash when alt+bksp past unicode nbsp",
          "url": "https://github.com/openai/codex/pull/5016",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 5014,
          "state": "closed",
          "title": "fixes #5011: update mcp server doc",
          "url": "https://github.com/openai/codex/pull/5014",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation and the processing of a prompt request, which aligns with agent issues related to tool-related errors and prompt management problems."
      }
    },
    {
      "number": 509,
      "title": "bug: Output truncated: too many lines or bytes",
      "url": "https://github.com/openai/codex/issues/509",
      "state": "closed",
      "created_at": "2025-04-22T04:07:34Z",
      "closed_at": "2025-08-07T17:24:51Z",
      "body": "### What version of Codex is running?\n\n0.1.2504211509\n\n### Which model were you using?\n\ngemini-1.5-pro\n\n### What platform is your computer?\n\nLinux 5.15.167.4-microsoft-standard-WSL2 x86_64 x86_64\n\n### What steps can reproduce the bug?\n\nI'm using Ubuntu 20.04 over WSL on Windows 11.\nWhen I use gemini-1.5-pro, and I ask to read a markdown file to create the described project in it, it fails with the message:\n```bash\n[Output truncated: too many lines or bytes]\n```\n\nThis is the terminal screenshot (I've omitted the filename, but it is a regular filename)\n\n![Image](https://github.com/user-attachments/assets/715fcff5-a707-468b-aa56-f69d3d0879e3)\n\n### What is the expected behavior?\n\nReading the file, sending it to the provider to process and then taking some action locally.\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\nthe message:\n```bash\n[Output truncated: too many lines or bytes]\n```\nand it stops running",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 575,
          "state": "closed",
          "title": "fix: increase output limits for truncating collector",
          "url": "https://github.com/openai/codex/pull/575",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves \"Output truncated: too many lines or bytes,\" which suggests a context length issue related to exceeding limits in LLM operations, fitting the definition of an agent issue."
      }
    },
    {
      "number": 516,
      "title": "feat: Support baseURL config setting",
      "url": "https://github.com/openai/codex/issues/516",
      "state": "closed",
      "created_at": "2025-04-22T07:03:50Z",
      "closed_at": "2025-04-24T17:06:05Z",
      "body": "With the new provider option would be great to allow to set the baseURL as well.\n\nThis would allow to fx. use Ollama on another host than the same host as codex (localhost is hardcoded at this point).",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 542,
          "state": "closed",
          "title": "fix: support [provider]_BASE_URL",
          "url": "https://github.com/openai/codex/pull/542",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves configuration settings related to an LLM provider, specifically the ability to set a baseURL for provider integration, which aligns with the criteria for agent issues concerning LLM provider usage and configuration."
      }
    },
    {
      "number": 524,
      "title": "Invalid schema error: Missing 'workdir' in function 'shell'​",
      "url": "https://github.com/openai/codex/issues/524",
      "state": "closed",
      "created_at": "2025-04-22T09:25:29Z",
      "closed_at": "2025-04-22T22:39:31Z",
      "body": "### What version of Codex is running?\n\n 0.1.2504220136\n\n### Which model were you using?\n\no4-mini \n\n### What platform is your computer?\n\nDarwin 24.4.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n<img width=\"912\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fc042e30-4c82-480d-a995-f173803fab1d\" />\n\n**Steps to reproduce:**\n\n1. Install Codex CLI:\n\n   ```bash\n   npm install -g @openai/codex\n   ```\n\n2. Set the OpenAI API key:\n\n   ```bash\n   export OPENAI_API_KEY=\"your-api-key-here\"\n   ```\n\n3. Create the configuration file at `~/.codex/config.json` with the following content:\n\n   ```json\n   {\n     \"model\": \"o4-mini\",\n     \"approvalMode\": \"suggest\",\n     \"fullAutoErrorMode\": \"ask-user\",\n     \"notify\": true\n   }\n   ```\n\n4. Run the Codex CLI:\n\n   ```bash\n   codex\n   ```\n\n5. At the prompt, enter:\n\n   ```bash\n   hello\n   ```\n\n### What is the expected behavior?\n\n**Expected behavior:**\n\nThe CLI should process the input and provide a response without errors.\n\n\n\n### What do you see instead?\n\n**Actual behavior:**\n\nThe CLI returns a 400 error indicating a missing 'workdir' in the function schema.\n\n### Additional information\n\nThe configuration file is correctly set up, and the API key is exported. Despite this, the error persists.​\n\n**Describe the bug:**\n\nWhen running the Codex CLI, I encounter the following error:\n\n```\n\n⚠️  OpenAI rejected the request (request ID: req_XXXXXXXXXXXX). Error details:\nStatus: 400, Code: invalid_function_parameters, Type: invalid_request_error, Message: 400 Invalid schema for function 'shell': In context=(), 'required' is required to be supplied and to be an array including every key in properties. Missing 'workdir'.. Please verify your settings and try again.\n```",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 530,
          "state": "closed",
          "title": "fix(agent-loop): update required properties to include workdir and ti…",
          "url": "https://github.com/openai/codex/pull/530",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation errors related to the Codex CLI, specifically a missing 'workdir' parameter in the function schema, which aligns with tool configuration issues in agent systems."
      }
    },
    {
      "number": 525,
      "title": "bug: openai rejected the request",
      "url": "https://github.com/openai/codex/issues/525",
      "state": "closed",
      "created_at": "2025-04-22T09:37:19Z",
      "closed_at": "2025-04-22T22:56:17Z",
      "body": "### What version of Codex is running?\n\n0.1.2504220136\n\n### Which model were you using?\n\ngpt-4.1-mini-2025-04-14\n\n### What platform is your computer?\n\n`darwin` | `arm64` | `24.3.0`\n\n### What steps can reproduce the bug?\n\n- ```\n  test\n  ```\n  - `0 reasoning` | `0 tool`\n\n### What is the expected behavior?\n\nProcessing any command.\n\n### What do you see instead?\n\n⚠️  OpenAI rejected the request (request ID: req_cf222b4f730bcfc1e7dc415a35977eb4). Error details: Status: 400, Code: invalid_function_parameters, Type:\n    invalid_request_error, Message: 400 Invalid schema for function 'shell': In context=(), 'required' is required to be supplied and to be an array including every key in\n    properties. Missing 'workdir'.. Please verify your settings and try again.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 530,
          "state": "closed",
          "title": "fix(agent-loop): update required properties to include workdir and ti…",
          "url": "https://github.com/openai/codex/pull/530",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an error related to LLM provider integration, specifically concerning invalid parameters in a request to OpenAI's API, which aligns with the \"Incompatible parameters to LLM providers\" sub-category of agent issues."
      }
    },
    {
      "number": 540,
      "title": "Removing requirement for OPENAI_API_KEY when running models locally",
      "url": "https://github.com/openai/codex/issues/540",
      "state": "closed",
      "created_at": "2025-04-22T16:24:23Z",
      "closed_at": "2025-04-22T17:59:33Z",
      "body": "### What is the type of issue?\n\nBug 🪲\n\n### What is the issue?\n\nWhen using ollama as a model provider, codex still requires OPENAI_API_KEY to start up. \n\n```bash \nkevinzhao@hnt-07329 codex % codex --provider ollama\n\nMissing OpenAI API key.\n\nSet the environment variable OPENAI_API_KEY and re-run this command.\nYou can create a key here: https://platform.openai.com/account/api-keys \n```\n\nThis is not necessary as local LLMs do not require any authentication to use. \n\n### Where did you find it?\n\n_No response_",
      "labels": [],
      "linked_prs": [
        {
          "number": 546,
          "state": "closed",
          "title": "fix: remove requirement for api key for ollama",
          "url": "https://github.com/openai/codex/pull/546",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a misconfiguration related to LLM provider integration, specifically the unnecessary requirement for an API key when using a local model, which aligns with the \"Model access misconfiguration\" category of agent issues."
      }
    },
    {
      "number": 548,
      "title": "feat: model registry",
      "url": "https://github.com/openai/codex/issues/548",
      "state": "closed",
      "created_at": "2025-04-22T18:02:50Z",
      "closed_at": "2025-08-07T18:26:12Z",
      "body": "## Summary\nI am proposing a better way to handle model specific information. My opinion on the current approach is that it will create a snowball of one-off util methods to get model information, rather than just having a model config that serves as the single source of truth.\n\nThis will be a mutli-part PR that can be rolled out individually to make it easier to track. **[Part 1 has already been mocked out](https://github.com/openai/codex/pull/551)** - just gathering feedback on if we think this is needed.\n\n### Part 1\n- Create the initial model info structure, starting with focus on context length management. \n```javascript\nexport const modelInfo = {\n    \"o1-pro-2025-03-19\": {\n        label: \"O1 Pro (2025-03-19)\",\n        maxContextLength: 200000,\n    },\n    /// ... all other models to be supported\n};\n```\n\nThis will just effect the `model-utils` context window calculation. Right now it uses the model name to guess context - this will replace that with something along the lines of this\n```javascript\nfunction maxTokensForModel(model: SupportedModelId): number {\n  return openAiModelInfo[model].maxContextLength;\n}\n```\n\n### Part 2\nThis PR will focus on enhancing the current approach for pulling in models to choose from. The API only supports basic information like model IDs. Also, Codex is using ALL models that come from the OpenAI API... so things like `computer-use-preview` and `whisper` can be selected at this time (which obviously breaks).\n\n#### Option 1\n- Continue to use the API, and filter out all models that we do not have a config for. \n\n#### Option 2\n- Replace the API entirely with the model config from part 1.\n\n## Part 3\nThis PR will focus on changing out the `string` type being used for the model throughout the app with the new `SupportedModelId` type. This will essentially allow for static checking of supported models.\n\n## Future Enhancements\nHaving this config opens the door for other model-specific info in the future. \n\nSome things that come to mind:\n- In/Out price tracking\n- Feature support (images, caching, etc)\n",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 551,
          "state": "closed",
          "title": "feat: add openai model info configuration",
          "url": "https://github.com/openai/codex/pull/551",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves managing model-specific information, including context length management and model configuration, which are related to LLM operation issues. It references handling model IDs and context length, aligning with context length issues and model access misconfiguration in agent systems."
      }
    },
    {
      "number": 576,
      "title": "text from project root codex.md gets appended into .codex/instructions.md on every session",
      "url": "https://github.com/openai/codex/issues/576",
      "state": "closed",
      "created_at": "2025-04-23T06:12:08Z",
      "closed_at": "2025-04-25T00:32:34Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504221401\n\n### Which model were you using?\n\ndoesn't matter\n\n### What platform is your computer?\n\nLinux 6.14.3-arch1-1 x86_64 unknown\n\n### What steps can reproduce the bug?\n\n1. have `instructions.md` in `~/.codex/` and open a project that contains codex.md\n2. run a few `codex` sessions\n3. notice that in `instructions.md` after `--project-doc--` line, project level `codex.md` text will be appended into `instructions.md` file\n\n### What is the expected behavior?\n\ninstructions from individual project `codex.md` file should not be appended in to the system config file. \n\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\nSeems like a critical bug IMO as other projects might be affected with context not relevant to the session. Also incur unnecessary cost by reading duplicated tokens context.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 578,
          "state": "closed",
          "title": "fix(utils): save config",
          "url": "https://github.com/openai/codex/pull/578",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves memory-related symptoms where project-specific content is incorrectly appended to a system configuration file, leading to potential context management problems and unnecessary token usage, aligning with memory content errors in agent systems."
      }
    },
    {
      "number": 586,
      "title": "Codex crashed",
      "url": "https://github.com/openai/codex/issues/586",
      "state": "closed",
      "created_at": "2025-04-23T12:46:11Z",
      "closed_at": "2025-04-24T11:29:38Z",
      "body": "### What version of Codex is running?\n\n0.1.2504221401\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nDarwin 24.3.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nnot sure, error occured spontaneously after some time working OK.\n\n### What is the expected behavior?\n\ncodex works or gives user-understandable error. Network issues and such are retried.\n\n### What do you see instead?\n\nfile:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:473\n`),IS.set(this,void 0),o9.set(this,void 0),wS.set(this,\"-\".repeat(2)),Vg.set(this,new TextEncoder),RS.set(this,void 0),NS.set(this,void 0),s9.set(this,void 0),!mse(t))throw new TypeError(\"Expected first argument to be a FormData instance.\");let a;if(R7(r)?n=r:a=r,a||(a=fse()),typeof a!=\"string\")throw new TypeError(\"Expected boundary argument to be a string.\");if(n&&!R7(n))throw new TypeError(\"Expected options argument to be an object.\");TS(this,NS,t,\"f\"),TS(this,s9,{...mke,...n},\"f\"),TS(this,IS,ba(this,Vg,\"f\").encode(ba(this,Rf,\"f\")),\"f\"),TS(this,o9,ba(this,IS,\"f\").byteLength,\"f\"),this.boundary=`form-data-boundary-${a}`,this.contentType=`multipart/form-data; boundary=${this.boundary}`,TS(this,RS,ba(this,Vg,\"f\").encode(`${ba(this,wS,\"f\")}${this.boundary}${ba(this,wS,\"f\")}${ba(this,Rf,\"f\").repeat(2)}`),\"f\"),this.contentLength=String(this.getContentLength()),this.headers=Object.freeze({\"Content-Type\":this.contentType,\"Content-Length\":this.contentLength}),Object.defineProperties(this,{boundary:{writable:!1,configurable:!1},contentType:{writable:!1,configurable:!1},contentLength:{writable:!1,configurable:!1},headers:{writable:!1,configurable:!1}})}getContentLength(){let t=0;for(let[r,n]of ba(this,NS,\"f\")){let a=qg(n)?n:ba(this,Vg,\"f\").encode(N7(n));t+=ba(this,i9,\"m\",O7).call(this,r,a).byteLength,t+=qg(a)?a.size:a.byteLength,t+=ba(this,o9,\"f\")}return t+ba(this,RS,\"f\").byteLength}*values(){for(let[t,r]of ba(this,NS,\"f\").entries()){let n=qg(r)?r:ba(this,Vg,\"f\").encode(N7(r));yield ba(this,i9,\"m\",O7).call(this,t,n),yield n,yield ba(this,IS,\"f\")}yield ba(this,RS,\"f\")}async*encode(){for(let t of this.values())qg(t)?yield*t.stream():yield t}[(Rf=new WeakMap,IS=new WeakMap,o9=new WeakMap,wS=new WeakMap,Vg=new WeakMap,RS=new WeakMap,NS=new WeakMap,s9=new WeakMap,i9=new WeakSet,O7=function(r,n){let a=\"\";return a+=`${ba(this,wS,\"f\")}${this.boundary}${ba(this,Rf,\"f\")}`,a+=`Content-Disposition: form-data; name=\"${x7(r)}\"`,qg(n)&&(a+=`; filename=\"${x7(n.name)}\"${ba(this,Rf,\"f\")}`,a+=`Content-Type: ${n.type||\"application/octet-stream\"}`),ba(this,s9,\"f\").enableAdditionalHeaders===!0&&(a+=`${ba(this,Rf,\"f\")}Content-Length: ${qg(n)?n.size:n.byteLength}`),ba(this,Vg,\"f\").encode(`${a}${ba(this,Rf,\"f\").repeat(2)}`)},Symbol.iterator)](){return this.values()}[Symbol.asyncIterator](){return this.encode()}};m();m();import{Readable as bke}from\"node:stream\";m();var c9=class{constructor(t){this.body=t}get[Symbol.toStringTag](){return\"MultipartBody\"}};import{ReadableStream as vke}from\"node:stream/web\";var vse=!1;async function Tke(e,...t){let{fileFromPath:r}=await Promise.resolve().then(()=>(bse(),Dse));return vse||(console.warn(`fileFromPath is deprecated; use fs.createReadStream(${JSON.stringify(e)}) instead`),vse=!0),await r(e,...t)}var Ike=new k7.default({keepAlive:!0,timeout:5*60*1e3}),wke=new k7.default.HttpsAgent({keepAlive:!0,timeout:5*60*1e3});async function Rke(e,t){let r=new l9(e),n=bke.from(r),a=new c9(n),i={...t.headers,...r.headers,\"Content-Length\":r.contentLength};return{...t,body:a,headers:i}}function Ise(){return typeof AbortController>\"u\"&&(globalThis.AbortController=Tse.AbortController),{kind:\"node\",fetch:Nf.default,Request:Nf.Request,Response:Nf.Response,Headers:Nf.Headers,FormData:Z4,Blob:Id,File:uu,ReadableStream:vke,getMultipartRequestOptions:Rke,getDefaultAgent:e=>e.startsWith(\"https\")?wke:Ike,fileFromPath:Tke,isFsReadStream:e=>e instanceof Dke}}var F7=()=>{kg||wae(Ise(),{auto:!0})};F7();m();var qt=class extends Error{},Si=class e extends qt{constructor(t,r,n,a){super(`${e.makeMessage(t,r,n)}`),this.status=t,this.headers=a,this.request_id=a?.[\"x-request-id\"],this.error=r;let i=r;this.code=i?.code,this.param=i?.param,this.type=i?.type}static makeMessage(t,r,n){let a=r?.message?typeof r.message==\"string\"?r.message:JSON.stringify(r.message):r?JSON.stringify(r):n;return t&&a?`${t} ${a}`:t?`${t} status code (no body)`:a||\"(no status code or body)\"}static generate(t,r,n,a){if(!t||!a)return new n1({message:n,cause:u9(r)});let i=r?.error;return t===400?new w0(t,i,n,a):t===401?new R0(t,i,n,a):t===403?new N0(t,i,n,a):t===404?new x0(t,i,n,a):t===409?new O0(t,i,n,a):t===422?new B0(t,i,n,a):t===429?new k0(t,i,n,a):t>=500?new F0(t,i,n,a):new e(t,i,n,a)}},ci=class extends Si{constructor({message:t}={}){super(void 0,void 0,t||\"Request was aborted.\",void 0)}},n1=class extends Si{constructor({message:t,cause:r}){super(void 0,void 0,t||\"Connection error.\",void 0),r&&(this.cause=r)}},pu=class extends n1{constructor({message:t}={}){super({message:t??\"Request timed out.\"})}},w0=class extends Si{},R0=class extends Si{},N0=class extends Si{},x0=class extends Si{},O0=class extends Si{},B0=class extends Si{},k0=class extends Si{},F0=class extends Si{},L0=class extends qt{constructor(){super(\"Could not parse response content as the length limit was reached\")}},M0=class extends qt{constructor(){super(\"Could not parse response content as the request was rejected by the content filter\")}};m();var d9=function(e,t,r,n,a){if(n===\"m\")throw new TypeError(\"Private method is not writable\");if(n===\"a\"&&!a)throw new TypeError(\"Private accessor was defined without a setter\");if(typeof t==\"function\"?e!==t||!a:!t.has(e))throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");return n===\"a\"?a.call(e,r):a?a.value=r:t.set(e,r),r},$g=function(e,t,r,n){if(r===\"a\"&&!n)throw new TypeError(\"Private accessor was defined without a getter\");if(typeof t==\"function\"?e!==t||!n:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return r===\"m\"?n:r===\"a\"?n.call(e):n?n.value:t.get(e)},Nl,Kg=class{constructor(){Nl.set(this,void 0),this.buffer=new Uint8Array,d9(this,Nl,null,\"f\")}decode(t){if(t==null)return[];let r=t instanceof ArrayBuffer?new Uint8Array(t):typeof t==\"string\"?new TextEncoder().encode(t):t,n=new Uint8Array(this.buffer.length+r.length);n.set(this.buffer),n.set(r,this.buffer.length),this.buffer=n;let a=[],i;for(;(i=xke(this.buffer,$g(this,Nl,\"f\")))!=null;){if(i.carriage&&$g(this,Nl,\"f\")==null){d9(this,Nl,i.index,\"f\");continue}if($g(this,Nl,\"f\")!=null&&(i.index!==$g(this,Nl,\"f\")+1||i.carriage)){a.push(this.decodeText(this.buffer.slice(0,$g(this,Nl,\"f\")-1))),this.buffer=this.buffer.slice($g(this,Nl,\"f\")),d9(this,Nl,null,\"f\");continue}let o=$g(this,Nl,\"f\")!==null?i.preceding-1:i.preceding,c=this.decodeText(this.buffer.slice(0,o));a.push(c),this.buffer=this.buffer.slice(i.index),d9(this,Nl,null,\"f\")}return a}decodeText(t){if(t==null)return\"\";if(typeof t==\"string\")return t;if(typeof Buffer<\"u\"){if(t instanceof Buffer)return t.toString();if(t instanceof Uint8Array)return Buffer.from(t).toString();throw new qt(`Unexpected: received non-Uint8Array (${t.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`)}if(typeof TextDecoder<\"u\"){if(t instanceof Uint8Array||t instanceof ArrayBuffer)return this.textDecoder??(this.textDecoder=new TextDecoder(\"utf8\")),this.textDecoder.decode(t);throw new qt(`Unexpected: received non-Uint8Array/ArrayBuffer (${t.constructor.name}) in a web platform. Please report this error.`)}throw new qt(\"Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.\")}flush(){return this.buffer.length?this.decode(`\n\n\nw0 [Error]: 400 No tool output found for function call call_Syb6rMcxaJBw57wYAn4g8Fr2.\n    at e.generate (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:473:4010)\n    at Rr.makeStatusError (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:477:7623)\n    at Rr.makeRequest (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:477:8555)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async fE.run (file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:493:198) {\n  status: 400,\n  headers: {\n    'alt-svc': 'h3=\":443\"; ma=86400',\n    'cf-cache-status': 'DYNAMIC',\n    'cf-ray': '934d67e42b8bc7bc-DUS',\n    connection: 'keep-alive',\n    'content-length': '184',\n    'content-type': 'application/json',\n    date: 'Wed, 23 Apr 2025 12:36:22 GMT',\n    'openai-organization': 'bcai',\n    'openai-processing-ms': '3145',\n    'openai-version': '2020-10-01',\n    server: 'cloudflare',\n    'set-cookie': '__cf_bm=.ecXqE2w3UYSSuPb32OD34g_L1P_CTNgUWu90Qqy8cc-1745411782-1.0.1.1-HC3Ox8nRhZWdZN87tff_4t.bH90P0S4wSf6A6rDBNo8DD_6z1ZmVUSSqdtZ3lAAcp1OQtxrpOo2kQfdN5BP2sPj9WoFagPLvSNKI.pSUgvY; path=/; expires=Wed, 23-Apr-25 13:06:22 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None, _cfuvid=81idpGrK_218pvwI5OtLV9W8BiLDzELUE_EfOlm_OdA-1745411782577-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None',\n    'strict-transport-security': 'max-age=31536000; includeSubDomains; preload',\n    'x-content-type-options': 'nosniff',\n    'x-request-id': 'req_cd1957a4d6fac2b61e7521f633386b3c'\n  },\n  request_id: 'req_cd1957a4d6fac2b61e7521f633386b3c',\n  error: {\n    message: 'No tool output found for function call call_Syb6rMcxaJBw57wYAn4g8Fr2.',\n    type: 'invalid_request_error',\n    param: 'input',\n    code: null\n  },\n  code: null,\n  param: 'input',\n  type: 'invalid_request_error'\n}\n\nNode.js v23.11.0\n\n### Additional information\n\nKey error seems to be: [Error]: 400 No tool output found for function call call_Syb6rMcxaJBw57wYAn4g8Fr2.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 611,
          "state": "closed",
          "title": "fix: don't clear turn input before retries",
          "url": "https://github.com/openai/codex/pull/611",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The error message indicates a problem with tool invocation, specifically \"No tool output found for function call,\" which aligns with tool-related issues in agent systems."
      }
    },
    {
      "number": 600,
      "title": "bug: quiet mode outputs duplicate messages",
      "url": "https://github.com/openai/codex/issues/600",
      "state": "closed",
      "created_at": "2025-04-23T22:44:01Z",
      "closed_at": "2025-04-26T16:15:00Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504221401\n\n### Which model were you using?\n\ngpt-4o\n\n### What platform is your computer?\n\nDarwin 24.1.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nRun \n```bash\ncodex -q \"explain this codebase to me\"  \n```\n\n### What is the expected behavior?\n\nI expect that any output message should be printed once\n\n### What do you see instead?\n\nAny output message is printed 3x. For example, when I run\n```bash\ncodex -q \"explain this codebase to me\"  \n``` \non the codex codebase, I get: \n```json\n{\n  \"role\": \"user\",\n  \"content\": [\n    {\n      \"type\": \"input_text\",\n      \"text\": \"explain this codebase to me\"\n    }\n  ],\n  \"type\": \"message\"\n}\n{\n  \"id\": \"msg_68096a9c0af081919b3fd7504216d7840c5829f642c2ebf9\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"annotations\": [],\n      \"text\": \"To explain the codebase, I'll need to first look at its structure and specific files. I'll start by gathering general information about the project to give you an overview.\\n\\nLet me do that now.\"\n    }\n  ],\n  \"role\": \"assistant\"\n}\n{\n  \"id\": \"msg_68096a9c0af081919b3fd7504216d7840c5829f642c2ebf9\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"annotations\": [],\n      \"text\": \"To explain the codebase, I'll need to first look at its structure and specific files. I'll start by gathering general information about the project to give you an overview.\\n\\nLet me do that now.\"\n    }\n  ],\n  \"role\": \"assistant\"\n}\n{\n  \"id\": \"fc_68096a9ce8248191aa7d562824eb6d540c5829f642c2ebf9\",\n  \"type\": \"function_call\",\n  \"status\": \"completed\",\n  \"arguments\": \"{\\\"command\\\":[\\\"rg --files\\\"]}\",\n  \"call_id\": \"call_RO4xttbxlBDoK5xdboKuBEiq\",\n  \"name\": \"shell\"\n}\n{\n  \"id\": \"msg_68096a9c0af081919b3fd7504216d7840c5829f642c2ebf9\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"annotations\": [],\n      \"text\": \"To explain the codebase, I'll need to first look at its structure and specific files. I'll start by gathering general information about the project to give you an overview.\\n\\nLet me do that now.\"\n    }\n  ],\n  \"role\": \"assistant\"\n}\n{\n  \"id\": \"fc_68096a9ce8248191aa7d562824eb6d540c5829f642c2ebf9\",\n  \"type\": \"function_call\",\n  \"status\": \"completed\",\n  \"arguments\": \"{\\\"command\\\":[\\\"rg --files\\\"]}\",\n  \"call_id\": \"call_RO4xttbxlBDoK5xdboKuBEiq\",\n  \"name\": \"shell\"\n}\n{\n  \"type\": \"function_call_output\",\n  \"call_id\": \"call_RO4xttbxlBDoK5xdboKuBEiq\",\n  \"output\": \"{\\\"output\\\":\\\"aborted\\\",\\\"metadata\\\":{}}\"\n}\n{\n  \"type\": \"message\",\n  \"role\": \"user\",\n  \"content\": [\n    {\n      \"type\": \"input_text\",\n      \"text\": \"No, don't do that — keep going though.\"\n    }\n  ]\n}\n{\n  \"id\": \"msg_68096a9dde38819189e52e1fbc0868dc0c5829f642c2ebf9\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"annotations\": [],\n      \"text\": \"Understood. I'll outline a general strategy for explaining the codebase:\\n\\n1. **Project Structure:** \\n   - Identify key directories and files, such as `src`, `tests`, `README.md`, etc.\\n\\n2. **README and Documentation:**\\n   - Check for a `README.md` or similar file for an overview, usage instructions, and key features.\\n\\n3. **Key Components:**\\n   - Review main application files to understand core functionality.\\n   - Check for configuration files such as `.env` for environment variables or `config.json` for application settings.\\n\\n4. **Dependencies:**\\n   - Examine `package.json`, `requirements.txt`, or similar files for libraries and dependencies.\\n\\n5. **Tests:**\\n   - Look at the `tests` directory or testing scripts to understand how the project ensures quality.\\n\\n6. **Build/Deployment:**\\n   - Check for build scripts, Dockerfiles, or CI/CD configurations for deployment details.\\n\\n7. **Code Style and Guidelines:**\\n   - Look for linting or formatting configurations such as `.eslintrc`, `.prettierrc`, etc.\\n\\nOnce I have this information, I can provide a detailed summary. Let me know if you want me to focus on specific parts or explore the codebase further.\"\n    }\n  ],\n  \"role\": \"assistant\"\n}\n{\n  \"id\": \"msg_68096a9dde38819189e52e1fbc0868dc0c5829f642c2ebf9\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"annotations\": [],\n      \"text\": \"Understood. I'll outline a general strategy for explaining the codebase:\\n\\n1. **Project Structure:** \\n   - Identify key directories and files, such as `src`, `tests`, `README.md`, etc.\\n\\n2. **README and Documentation:**\\n   - Check for a `README.md` or similar file for an overview, usage instructions, and key features.\\n\\n3. **Key Components:**\\n   - Review main application files to understand core functionality.\\n   - Check for configuration files such as `.env` for environment variables or `config.json` for application settings.\\n\\n4. **Dependencies:**\\n   - Examine `package.json`, `requirements.txt`, or similar files for libraries and dependencies.\\n\\n5. **Tests:**\\n   - Look at the `tests` directory or testing scripts to understand how the project ensures quality.\\n\\n6. **Build/Deployment:**\\n   - Check for build scripts, Dockerfiles, or CI/CD configurations for deployment details.\\n\\n7. **Code Style and Guidelines:**\\n   - Look for linting or formatting configurations such as `.eslintrc`, `.prettierrc`, etc.\\n\\nOnce I have this information, I can provide a detailed summary. Let me know if you want me to focus on specific parts or explore the codebase further.\"\n    }\n  ],\n  \"role\": \"assistant\"\n}\n{\n  \"id\": \"msg_68096a9dde38819189e52e1fbc0868dc0c5829f642c2ebf9\",\n  \"type\": \"message\",\n  \"status\": \"completed\",\n  \"content\": [\n    {\n      \"type\": \"output_text\",\n      \"annotations\": [],\n      \"text\": \"Understood. I'll outline a general strategy for explaining the codebase:\\n\\n1. **Project Structure:** \\n   - Identify key directories and files, such as `src`, `tests`, `README.md`, etc.\\n\\n2. **README and Documentation:**\\n   - Check for a `README.md` or similar file for an overview, usage instructions, and key features.\\n\\n3. **Key Components:**\\n   - Review main application files to understand core functionality.\\n   - Check for configuration files such as `.env` for environment variables or `config.json` for application settings.\\n\\n4. **Dependencies:**\\n   - Examine `package.json`, `requirements.txt`, or similar files for libraries and dependencies.\\n\\n5. **Tests:**\\n   - Look at the `tests` directory or testing scripts to understand how the project ensures quality.\\n\\n6. **Build/Deployment:**\\n   - Check for build scripts, Dockerfiles, or CI/CD configurations for deployment details.\\n\\n7. **Code Style and Guidelines:**\\n   - Look for linting or formatting configurations such as `.eslintrc`, `.prettierrc`, etc.\\n\\nOnce I have this information, I can provide a detailed summary. Let me know if you want me to focus on specific parts or explore the codebase further.\"\n    }\n  ],\n  \"role\": \"assistant\"\n}\n```\n\n### Additional information\n\nNote that the same message id is being output thrice",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 680,
          "state": "closed",
          "title": "fix: duplicate messages in quiet mode",
          "url": "https://github.com/openai/codex/pull/680",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes abnormal agent workflow behavior, specifically the repeated output of messages, which aligns with the definition of agent issues concerning workflow anomalies in LLM-based agent systems."
      }
    },
    {
      "number": 605,
      "title": "Default config in AgentLoop constructor missing required 'notify' property from AppConfig type",
      "url": "https://github.com/openai/codex/issues/605",
      "state": "closed",
      "created_at": "2025-04-24T00:21:13Z",
      "closed_at": "2025-04-24T18:08:53Z",
      "body": "### What version of Codex is running?\n\n0.1.2504181820\n\n### Which model were you using?\n\ndefault\n\n### What platform is your computer?\n\nDarwin 24.5.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nNA\n\n### What is the expected behavior?\n\nNA\n\n### What do you see instead?\n\nNA\n\n### Additional information\n\nI noticed something that confused me in the AgentLoop constructor and wanted to ask about it.\n\nIn src/utils/agent/agent-loop.ts, when creating a default config, the code does:\n\nthis.config =\n  config ??\n  ({\n    model,\n    instructions: instructions ?? \"\",\n  } as AppConfig);\n\nBut when I look at the AppConfig type definition in src/utils/config.ts, it shows that notify is a required property:\n\nexport type AppConfig = {\n  apiKey?: string;\n  model: string;\n  instructions: string;\n  // ... other optional properties ...\n  notify: boolean;  // This is required (no ? mark)\n  // ... more optional properties ...\n};\n\nI'm confused because the default config object doesn't include the required notify property, but TypeScript doesn't show an error because of the as AppConfig type assertion.\n\n![Image](https://github.com/user-attachments/assets/9c042605-efa1-4c3e-a128-5fbff9095366)",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 608,
          "state": "closed",
          "title": "fix(agent-loop): notify type",
          "url": "https://github.com/openai/codex/pull/608",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves a component of an agent system (AgentLoop constructor) and concerns the configuration of an agent-related utility (AppConfig type), which is crucial for agent workflows. The missing 'notify' property could lead to unexpected behavior in agent orchestration."
      }
    },
    {
      "number": 609,
      "title": "feat: add vector-space code indexing and semantic search support",
      "url": "https://github.com/openai/codex/issues/609",
      "state": "closed",
      "created_at": "2025-04-24T02:49:29Z",
      "closed_at": "2025-09-03T00:29:18Z",
      "body": "🚀 Feature Request\n\n📌 Problem\n\nThe Codex CLI currently provides powerful completions via the Completions API, but it lacks semantic code search. Developers must fall back to grep or file-name heuristics, which:\n\t•\tMiss semantically similar code when names differ\n\t•\tAre brittle across large or polyglot codebases\n\t•\tDon’t leverage project-specific patterns or style\n\n💡 Proposed Solution\n\nIntroduce first-class support for vector embeddings and approximate-nearest-neighbor search:\n\t1.\tNew CLI Commands\n\n# Build/update a vector index over your code\ncodex index --vector [--db faiss|pinecone|qdrant] [--src PATH]\n\n# Perform semantic search by intent\ncodex search --vector \"<natural language query>\" [--top K] [--filter EXT|PATH|TAG]\n\n\n\t2.\tIndexing Behavior\n\t•\tWalk the source tree (default .)\n\t•\tSplit files into logical chunks (functions, classes)\n\t•\tCall the OpenAI Embeddings API (e.g. ada-code-002)\n\t•\tBulk-load vectors + metadata (file paths, byte offsets) into the chosen vector store\n\t3.\tSearch Behavior\n\t•\tEmbed the user’s query\n\t•\tRun an ANN lookup (cosine similarity or L2)\n\t•\tReturn the top-K snippets with file paths, line ranges, and relevance scores\n\t4.\tConfiguration\n\t•\tNew settings in ~/.codex/config.json for API key, embedding model, vector-db connection, and default chunk size\n\t•\tSensible defaults: in-process FAISS for small repos\n\n🔧 Alternatives Considered\n\t•\tExternal scripts using the OpenAI client + vector-db libraries\n\t•\tKeyword-based grepping via codex grep or shell pipelines\n\t•\tManual code navigation in IDEs without semantic awareness\n\n📝 Additional Context & Use Cases\n\t•\tImproved Completions: Retrieve project-specific helpers before calling the Completions API, reducing prompt noise.\n\t•\t“Related Code” Sidebar: IDE plugins (VS Code, IntelliJ, Neovim) can call codex search --vector under the hood to power a live “Related Code” panel.\n\t•\tDuplication Detection: Find near-duplicate functions or patterns for refactoring.\n\t•\tRAG Workflows: Enable retrieval-augmented generation using your own code as context.\n\n⸻\n\nI’m happy to contribute a PR that scaffolds the new CLI commands and demonstrates basic FAISS integration. Please let me know if there’s interest in adding this feature!",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2158,
          "state": "closed",
          "title": "chore(deps): bump clap_complete from 4.5.55 to 4.5.56 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2158",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves integrating vector embeddings and semantic search, which requires interaction with LLM provider APIs (e.g., OpenAI Embeddings API) and configuration of memory mechanisms (e.g., vector index creation and management). This aligns with agent issue criteria related to LLM operation and memory-related issues."
      }
    },
    {
      "number": 633,
      "title": "performance: token delay in codex-cli/src/utils/agent/agent-loop.ts",
      "url": "https://github.com/openai/codex/issues/633",
      "state": "closed",
      "created_at": "2025-04-24T22:00:34Z",
      "closed_at": "2025-04-25T19:38:30Z",
      "body": "Is the 10ms token delay on purpose to simulate streaming? Codex sometimes feels slow, and 10ms doesn't feel necessary for all output.\n\nI would propose (and submit PR) for:\n\n1. Adaptive Delay rather than no delay:\n    - Use a smaller delay (perhaps 2-3ms) that still preserves readability\n    - Adjust delay based on token volume (faster for code, slower for explanations)\n2. Batch Processing:\n    - Process tokens immediately internally, but render in small batches\n    - This gives UI benefits of streaming without the processing overhead\n3. Token Throttling:\n    - Process all tokens immediately but throttle output rendering\n    - Implement a \"max tokens per second\" display rate (e.g., 30-50 tokens/sec)\n\nSimulating token streaming performance for 500 tokens:\n\nRunning balanced benchmark (optimized with a small delay)...\n\nBalanced approach results (new implementation):\n     - Total token processing time: 5.78ms\n     - Average token delay: 0.01ms\n     - P95 token delay: 0.01ms\n     - Tokens processed per second: 86509.55\n     - Total wall-clock time: 10.17ms\n\nRunning setTimeout benchmark (original implementation)...\n     setTimeout results (original implementation):\n     - Total token processing time: 5.95ms\n     - Average token delay: 0.01ms\n     - P95 token delay: 0.01ms\n     - Tokens processed per second: 84054.80\n     - Total wall-clock time: 17.10ms\n\n     ====== PERFORMANCE COMPARISON ======\n     Balanced approach vs Original (setTimeout):\n     - Wall-clock time reduction: 40.54%\n     - Average token delay reduction: 2.84%\n\n     Real-world impact using balanced approach:\n     - Small response (100 tokens): ~0.7s faster\n     - Medium response (500 tokens): ~3.5s faster\n     - Large response (2000 tokens): ~14.0s faster\n\n     The balanced implementation provides:\n     1. Significantly faster response time than the original implementation\n     2. Still maintains a natural streaming effect for better readability\n     3. Reduces wait time by ~70% while preserving UX quality",
      "labels": [],
      "linked_prs": [
        {
          "number": 635,
          "state": "closed",
          "title": "perf: optimize token streaming with balanced approach",
          "url": "https://github.com/openai/codex/pull/635",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves agent workflow anomalies related to token delay in the agent loop, which affects the performance and streaming simulation of the LLM-based agent system. The proposed changes aim to optimize token processing and rendering, aligning with agent-specific components."
      }
    },
    {
      "number": 664,
      "title": "bug: non-interactive mode is flaky and produces duplicate JSON output",
      "url": "https://github.com/openai/codex/issues/664",
      "state": "closed",
      "created_at": "2025-04-25T20:35:11Z",
      "closed_at": "2025-04-26T16:15:04Z",
      "body": "### What version of Codex is running?\n\n0.1.2504221401\n\n### Which model were you using?\n\ngpt-4o-mini\n\n### What platform is your computer?\n\nDarwin 24.4.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n#### Flaky Behavior:\nRunning the same exact command multiple times results in inconsistent behavior:\n- Sometimes it succeeds and returns the expected output.\n- Sometimes it fails with the error:\n\"I currently can't access the codebase to identify specific lines in the Rust files. If you could share the relevant Rust code or files, I can analyze them and provide you with the targeted lines as per your criteria.\"\n- Sometimes it returns empty output.\n> I did not change anything between runs (same working directory, same prompt).\n\n#### Duplicate JSON Objects in the Output:\nIn non-interactive mode, the output is a stream of JSON objects but many of these objects are exact duplicates.\nExample output:\n```sh\n{\"id\":\"msg_\",\"type\":\"message\",\"status\":\"completed\",\"content\":[{\"type\":\"output_text\",\"annotations\":[],\"text\":\"It seems I'm unable to run commands to explore the current directory or read files directly due to some restrictions. However, if you have a specific file or piece of code you want me to explain, please let me know the filename or share the code here! I'm eager to help with any questions you have about it.\"}],\"role\":\"assistant\"}\n{\"id\":\"msg_\",\"type\":\"message\",\"status\":\"completed\",\"content\":[{\"type\":\"output_text\",\"annotations\":[],\"text\":\"It seems I'm unable to run commands to explore the current directory or read files directly due to some restrictions. However, if you have a specific file or piece of code you want me to explain, please let me know the filename or share the code here! I'm eager to help with any questions you have about it.\"}],\"role\":\"assistant\"}\n{\"id\":\"msg_\",\"type\":\"message\",\"status\":\"completed\",\"content\":[{\"type\":\"output_text\",\"annotations\":[],\"text\":\"It seems I'm unable to run commands to explore the current directory or read files directly due to some restrictions. However, if you have a specific file or piece of code you want me to explain, please let me know the filename or share the code here! I'm eager to help with any questions you have about it.\"}],\"role\":\"assistant\"}\n```\n#### Hard to Isolate the Final Answer:\nWhen using non-interactive mode, the output includes a lot of intermediate JSON objects before reaching the final answer.\nI tried setting `CODEX_QUIET_MODE=1` but it didn't make a noticeable difference.\nIdeally, there should be a way to suppress all intermediate JSON objects and only return the final assistant message.\n\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 680,
          "state": "closed",
          "title": "fix: duplicate messages in quiet mode",
          "url": "https://github.com/openai/codex/pull/680",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves workflow anomalies in the agent system, such as inconsistent behavior, duplicate JSON outputs, and difficulty isolating the final answer, which aligns with the definition of agent issues related to LLM operation and workflow issues."
      }
    },
    {
      "number": 666,
      "title": "bug: gpt-4.1-mini, all created files are empty",
      "url": "https://github.com/openai/codex/issues/666",
      "state": "closed",
      "created_at": "2025-04-25T20:54:16Z",
      "closed_at": "2025-04-25T23:32:44Z",
      "body": "### What version of Codex is running?\n\n0.1.2504221401\n\n### Which model were you using?\n\ngpt-4.1-mini\n\n### What platform is your computer?\n\n`darwin` | `arm64` | `24.3.0`\n\n### What steps can reproduce the bug?\n\n- ```\n  Create a Vue3 SPA project there which allow to see user himself/herself through a build in camera, apply some filters and download results.\n  ```\n  - `2 reasoning` | `13 tool`\n- ```\n  Yes\n  ```\n  - `4 reasoning` | `7 tool`\n- ```\n  flush all changes to harddrive.\n  ```\n  - `1 reasoning` | `1 tool`\n- ```\n  Files are empty. Check that you did everthing correctly.\n  ```\n  - `1 reasoning` | `4 tool`\n- ```\n  Update by yourself\n  ```\n  - `2 reasoning` | `2 tool`\n\n### What is the expected behavior?\n\nExpected that files are created with some code/content, but they are just empty.\n\n### What do you see instead?\n\nSee all files are just empty\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2,
          "state": "closed",
          "title": "(cleanup) add link to https://cookbook.openai.com for apply_patch and minor tidy up",
          "url": "https://github.com/openai/codex/pull/2",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves the use of the LLM model \"gpt-4.1-mini\" and reports a problem with the output (empty files), suggesting a potential issue with the model's operation or output handling, which aligns with the criteria for LLM operation issues in agent systems."
      }
    },
    {
      "number": 690,
      "title": "Codex CLI exits abruptly on `rate_limit_exceeded`; should back-off & retry instead of closing",
      "url": "https://github.com/openai/codex/issues/690",
      "state": "closed",
      "created_at": "2025-04-27T00:37:22Z",
      "closed_at": "2025-08-07T18:26:46Z",
      "body": "### What version of Codex is running?\n\nv0.1.2504161551\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nDarwin 24.4.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n1. Run a long Codex CLI command that streams a large prompt + completion (≈70 k tokens).  \n   ```bash\n   codex 'explain this huge code base' --files src/**/*.py\n   ```\n2. Wait until total tokens in the last minute exceed 200 000 TPM.\n\n### What is the expected behavior?\n\nCLI should:\n* Detect the `rate_limit_exceeded` error.\n* Wait for the retry-after window (OpenAI returns **2.515 s** in this case) with exponential back-off.\n* Resume the same request or transparently re-send it, keeping the stream open.\n* Exit with a **non-zero** code only after exhausting configured retries.\n\n\n### What do you see instead?\n\nThe CLI throws an uncaught exception and terminates:\n```\ne [Error]: Rate limit reached for o4-mini … Limit 200000, Used 136502, Requested 71884 …\n    at file:///opt/homebrew/lib/node_modules/@openai/codex/dist/cli.js:445:1514\nNode.js v23.11.0\n```\nAll partial output is lost; the user must re-run the command manually.\n\n\n### Additional information\n\n* Running latest CLI via `npm i -g @openai/codex`.\n* No custom flags (`--max-retries` defaults to 0).  \n* It would be safer to set a default retry policy (e.g., 3 attempts, exponential 2 → 4 → 8 s).  \n* See full stack trace in the console log attached above.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4027,
          "state": "closed",
          "title": "chore(deps): bump log from 0.4.27 to 0.4.28 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/4027",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves LLM operation issues, specifically token usage misconfiguration and incorrect model output handlers, as it relates to handling rate limits and retry mechanisms for an LLM-based system."
      }
    },
    {
      "number": 692,
      "title": "o4-mini: unusually high token count (71 k) for moderate-sized prompt – guidance?",
      "url": "https://github.com/openai/codex/issues/692",
      "state": "closed",
      "created_at": "2025-04-27T00:48:36Z",
      "closed_at": "2025-08-07T17:30:04Z",
      "body": "### Codex CLI revision\n```\nv0.1.2504161551\n```\n\n### Model\n```\no4-mini\n```\n\n### Platform\n```\nDarwin 24.4.0 arm64 arm\n```\n\n### What I did\n* Called:\n  ```bash\n  codex \"explain this repo\" --files src/**/*.py\n  ```\n* We were trying to update a `README.md` file for the project, documenting:\n  - Which environment manager to use (UV, Conda, Pip/venv).\n  - How to activate and deactivate the environments.\n  - What is Typer and how to use it for the project CLI.\n* This involved several automated `apply_patch` calls that attempted to modify `README.md`, but many failed due to \"Invalid Context\" errors, leading to repeated retries and possibly additional hidden token accumulation.\n\n### Observed behaviour\n* Server reports:\n  ```\n  Rate limit reached … Limit 200000, Used 136502, Requested 71884\n  ```\n  → CLI claims the single request will add **71 884 tokens**.\n\n* Session was closed abruptly due to rate limit exhaustion.\n\n### My questions\n  * Why is the request perceived as nearly 72k tokens?  \n  * Is the CLI adding hidden system prompts, patches, retry traces or duplicating context?  \n  * Does o4-mini use a different tokenizer?\n  * Any official tips to estimate tokens more accurately before sending? \n  * To optimise prompts/files to stay within rate limits?\n\n### Additional information\n* The rate-limit error kills the session (see linked bug).\n* It would be helpful to receive guidance on:\n  - How Codex CLI handles token accumulation during retries, patches, and parallel commands.\n  - Best practices for budgeting tokens when working with `--files`, patches, and active project editing.",
      "labels": [],
      "linked_prs": [
        {
          "number": 4027,
          "state": "closed",
          "title": "chore(deps): bump log from 0.4.27 to 0.4.28 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/4027",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation issues, specifically concerning token usage misconfiguration and context length issues, as it reports unusually high token counts and rate limit problems when using the Codex CLI with the o4-mini model."
      }
    },
    {
      "number": 700,
      "title": "feature request: having the ability to tag files using '@'",
      "url": "https://github.com/openai/codex/issues/700",
      "state": "closed",
      "created_at": "2025-04-28T04:47:02Z",
      "closed_at": "2025-05-01T00:17:57Z",
      "body": "Instead of only relying on the assistant to use shell commands to view files, users should also have the ability to mention files and add them directly into the chat context. ",
      "labels": [],
      "linked_prs": [
        {
          "number": 701,
          "state": "closed",
          "title": "feat: `@mention` files in codex",
          "url": "https://github.com/openai/codex/pull/701",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves enhancing the agent's workflow by allowing users to tag files directly in the chat context, which relates to prompt management and workflow improvements in an LLM-based agent system."
      }
    },
    {
      "number": 726,
      "title": " CLI not respecting the disableResponseStorage setting from the ~/.codex/config.yaml file",
      "url": "https://github.com/openai/codex/issues/726",
      "state": "closed",
      "created_at": "2025-04-29T13:51:30Z",
      "closed_at": "2025-04-29T17:13:04Z",
      "body": "### What version of Codex is running?\n\nOpenAI Codex (research preview) v0.1.2504251709            │\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nMacOS\n\n### What steps can reproduce the bug?\n\ncat ~/.codex/config.yaml\ndisableResponseStorage: true\nmodel: o4-mini\nprovider: openai\nproviders:\n  openai:\n    baseURL: https://proxy.x.ai/v1\n    envKey: OPENAI_API_KEY\nDEBUG=1 codex\n-- Note disableResponseStorage false\n  config: {\n    apiKey: 'KEY',\n    model: 'o4-mini',\n    provider: 'openai',\n    instructions: '',\n    notify: false,\n    approvalMode: undefined,\n    disableResponseStorage: false,\n    history: [Object],\n    providers: [Object],\n    flexMode: false\n  },\nDEBUG=1 codex --disableResponseStorage\n-- Note disableResponseStorage true\n  config: {\n    apiKey: 'KEY',\n    model: 'o4-mini',\n    provider: 'openai',\n    instructions: '',\n    notify: false,\n    approvalMode: undefined,\n    disableResponseStorage: true,\n    history: [Object],\n    providers: [Object],\n    flexMode: false\n  },\n\n### What is the expected behavior?\n\nThe CLI should respect the disableResponseStorage setting from the ~/.codex/config.yaml file without requiring the command-line flag.​\n\n\n### What do you see instead?\n\nThe disableResponseStorage setting in the configuration file is ignored unless explicitly set via the command line.​\n\n### Additional information\n\nAdditional Information:\n\nCodex CLI Version: OpenAI Codex (research preview) v0.1.2504251709\n\nThis issue seems similar to the one discussed in [Issue #561](https://github.com/openai/codex/issues/561), where configuration settings like approvalMode are not respected. However, the recent [PR #361](https://github.com/openai/codex/pull/361) addressing approvalMode does not appear to resolve the disableResponseStorage issue.​\n\nWorkaround:\n\nAs a temporary solution, users can explicitly set the --disableResponseStorage flag when running the CLI to ensure the desired behavior.​\n",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 728,
          "state": "closed",
          "title": "Fixes issue #726 by adding config to configToSave object",
          "url": "https://github.com/openai/codex/pull/728",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves memory-related symptoms, specifically the failure of the CLI to respect the `disableResponseStorage` setting, which is related to memory content errors in agent systems. This aligns with the criteria for agent issues concerning memory behaviors."
      }
    },
    {
      "number": 751,
      "title": "Insufficient quota message while quota is available",
      "url": "https://github.com/openai/codex/issues/751",
      "state": "closed",
      "created_at": "2025-04-30T12:27:07Z",
      "closed_at": "2025-04-30T23:00:51Z",
      "body": "### What version of Codex is running?\n\n0.1.2504251709\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\n`darwin` | `arm64` | `24.4.0`\n\n### What steps can reproduce the bug?\n\n- ```\n  what is this codebase about\n  ```\n  - `0 reasoning` | `0 tool`\n\n### What is the expected behavior?\n\nI have 2 api keys on my ~/.zshrc file, both have remaining quota (5.00), organization verified (not exporting the two at the same time)\n\nCodex should use the credits available or provide a direct link and specific reason why quota is \"insufficient\".\n\n### What do you see instead?\n\n\"⚠️ Insufficient quota. Please check your billing details and retry.\"\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 758,
          "state": "closed",
          "title": "fix: insufficient quota message",
          "url": "https://github.com/openai/codex/pull/758",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider usage, specifically related to API key management and quota handling, which aligns with the criteria for LLM operation issues, particularly model access misconfiguration or token usage misconfiguration."
      }
    },
    {
      "number": 778,
      "title": "Process, spend money and nothing is outputed",
      "url": "https://github.com/openai/codex/issues/778",
      "state": "closed",
      "created_at": "2025-05-02T14:49:05Z",
      "closed_at": "2025-08-07T17:30:29Z",
      "body": "### What version of Codex is running?\n\n0.1.2504251709\n\n### Which model were you using?\n\no4-mini\n\n### What platform is your computer?\n\nLinux 5.15.167.4-microsoft-standard-WSL2 x86_64 unknown\n\n### What steps can reproduce the bug?\n\n- Write a well structured and big prompt\n- Send\n- Wait for more than 300s\n\n### What is the expected behavior?\n\nEExpect to process, read files, undestand the change to be done, apply patch and explain what was done.\n\n### What do you see instead?\n\nI see the explanation of what was done, but no changes were applied to my code.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3294,
          "state": "closed",
          "title": "chore(deps): bump insta from 1.43.1 to 1.43.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3294",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes a problem with prompt processing and expected behavior in an LLM-based system, indicating potential prompt-related issues or workflow anomalies, which are components unique to agent systems."
      }
    },
    {
      "number": 784,
      "title": "esc esc to \"cancel\" completely wipes chat history",
      "url": "https://github.com/openai/codex/issues/784",
      "state": "closed",
      "created_at": "2025-05-02T18:13:42Z",
      "closed_at": "2025-08-07T17:30:36Z",
      "body": "### What version of Codex is running?\n\n0.1.2504251709\n\n### Which model were you using?\n\n_No response_\n\n### What platform is your computer?\n\nmacos\n\n### What steps can reproduce the bug?\n\nIn a codex terminal with 26% context used up, many previous tool calls. Send a message, immediately hit esc esc to cancel, and it wipes the entire message history. All the messages still show up on my end, but if you ask the model \"what's the first thing I said?\" it has no recollection of anything before the esc esc.\n\nI'm guessing there's some ungraceful handling here where it basically nukes the entire history instead of simply removing the latest tool invocation block.\n\n### What is the expected behavior?\n\ncancels generation/tool use, allows me to type, message history not nuked\n\n### What do you see instead?\n\nmessage history nuked\n\n### Additional information\n\nas a workaround, it would be fine to relabel the \"esc esc\" action as \"destructively nuke chat history\"",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3294,
          "state": "closed",
          "title": "chore(deps): bump insta from 1.43.1 to 1.43.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3294",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves memory-related symptoms where using \"esc esc\" unexpectedly wipes the chat history, indicating a problem with memory content errors or memory initialization issues in the agent system."
      }
    },
    {
      "number": 801,
      "title": "Unexpected error when writing a .md",
      "url": "https://github.com/openai/codex/issues/801",
      "state": "closed",
      "created_at": "2025-05-03T21:08:58Z",
      "closed_at": "2025-08-07T17:30:39Z",
      "body": "### What version of Codex is running?\n\n0.1.2504301751\n\n### Which model were you using?\n\ngemini-2.5-pro-exp-03-25\n\n### What platform is your computer?\n\nMicrosoft Windows NT 10.0.26100.0 x64\n\n### What steps can reproduce the bug?\n\nModel attempting to write a .md file produced this error\n\n![Image](https://github.com/user-attachments/assets/c1002d56-3cfd-4c3f-9eae-a6bfaba9e6d9)\n\n### What is the expected behavior?\n\nParsing of markdown syntax\n\n### What do you see instead?\n\nError message which led to this system error when attempting to find the parsing issue with the model\n\nsystem\n    ⚠️  OpenAI rejected the request. Error details: Status: 400, Code: unknown, Type: unknown, Message: 400 status code (no body).     ╯\n    Please verify your settings and try again.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3294,
          "state": "closed",
          "title": "chore(deps): bump insta from 1.43.1 to 1.43.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3294",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an error related to the LLM provider (OpenAI) when attempting to write a .md file, indicating a potential misconfiguration or misuse of the model's API, which aligns with LLM operation issues in agent systems."
      }
    },
    {
      "number": 802,
      "title": "Does not apply suggested changes",
      "url": "https://github.com/openai/codex/issues/802",
      "state": "closed",
      "created_at": "2025-05-03T21:23:24Z",
      "closed_at": "2025-09-03T00:27:30Z",
      "body": "### What version of Codex is running?\n\n0.1.2504301751\n\n### Which model were you using?\n\ngpt-4.1-mini\n\n### What platform is your computer?\n\n`darwin` | `x64` | `23.4.0`\n\n### What steps can reproduce the bug?\n\n```\n  Implement the creation and management of users that belong to specific authorization roles. The roles should be applicable at either the account-wide level or on one or more sites. The roles should be: Admin (full account owner)\nManager\nRead-only\nTechnicians\nClient-only login.\n```\n  - `7 reasoning` | `14 tool`\n- ```\n  Please continue\n  ```\n  - `1 reasoning` | `0 tool`\n- ```\n  You have not applied the patch yet, please apply it\n  ```\n  - `2 reasoning` | `1 tool`\n\n### What is the expected behavior?\n\nI expect patches to be applied, but it keeps getting blocked by guardrails and also seems to think it has applied the patch to all the files but it hasn't actually done it, it just prints out the change within the tool and waits for my response.\n\nE.g. \n> It seems the patch was rejected by the system's auto-approval. I will re-send the patch in parts to bypass the rejection.\n>    First, I will apply the migration file only.\n\n### What do you see instead?\n\ncodex started off well by planning the migration, creating the migration file, and planning the rest of the work.\nIt suggested a lot of changes to different files, and the creation of new ones. \n\nIt then stops after the suggestion, and doesn't prompt me to accept or reject any suggestion. I asked it to \"Please continue\" and it did the same - it doesn't actually want to make a real suggestion, it just talks about it.\n\n### Additional information\n\n<img width=\"727\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2dbc04e6-2411-421b-9cc4-7e9cb4157112\" />\n\n<img width=\"1063\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3735cabd-ac07-48c6-984c-fc4a80609833\" />",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3294,
          "state": "closed",
          "title": "chore(deps): bump insta from 1.43.1 to 1.43.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3294",
          "merged": true,
          "base_branch": "main"
        },
        {
          "number": 2303,
          "state": "closed",
          "title": "[tools] Add apply_patch tool",
          "url": "https://github.com/openai/codex/pull/2303",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes an agent workflow anomaly where the system fails to apply patches and gets blocked by guardrails, indicating a problem in the orchestration of tasks, which aligns with the definition of an agent issue."
      }
    },
    {
      "number": 837,
      "title": "Non-reasoning OAI model API calls have an extraneous reasoning_effort parameter",
      "url": "https://github.com/openai/codex/issues/837",
      "state": "closed",
      "created_at": "2025-05-06T21:35:01Z",
      "closed_at": "2025-08-07T18:52:17Z",
      "body": "### What version of Codex is running?\n\n_No response_\n\n### Which model were you using?\n\ngpt-4.1\n\n### What platform is your computer?\n\n_No response_\n\n### What steps can reproduce the bug?\n\nRunning:\n```\n{ echo '{ \"id\": \"config-session-1\", \"op\": { \"type\": \"configure_session\", \"model\": \"gpt-4.1\", \"api_key\": null, \"approval_policy\": \"never\", \"sandbox_policy\": {\"type\":\"read_only\", \"permissions\": [\"disk-full-write-access\", \"disk-full-read-access\"]}, \"disable_response_storage\": false, \"cwd\": \"/Users/codex/codex-rs\" } }'; echo '{ \"id\": \"user-input-1\", \"op\": { \"type\": \"user_input\", \"items\": [{ \"id\": \"item-1\", \"type\": \"text\", \"text\": \"run a test in the codebase, can be any test, it does not matter. Note that this is a TS/rust repo\" }] } }'; } | ./target/release/codex proto\n```\n\nReturns:\n```\n2025-05-06T21:32:40.991710Z  INFO codex_core::codex: Configuring session model=\"gpt-4.1\"\n{\"id\":\"config-session-1\",\"msg\":{\"type\":\"session_configured\",\"model\":\"gpt-4.1\"}}\n{\"id\":\"user-input-1\",\"msg\":{\"type\":\"task_started\"}}\n2025-05-06T21:32:41.144349Z  WARN codex_core::codex: stream disconnected - retrying turn (1/10 in 183ms)...\n{\"id\":\"user-input-1\",\"msg\":{\"type\":\"background_event\",\"message\":\"stream error: unexpected status 400 Bad Request: {\\n  \\\"error\\\": {\\n    \\\"message\\\": \\\"Unsupported parameter: 'reasoning.effort' is not supported with this model.\\\",\\n    \\\"type\\\": \\\"invalid_request_error\\\",\\n    \\\"param\\\": \\\"reasoning.effort\\\",\\n    \\\"code\\\": \\\"unsupported_parameter\\\"\\n  }\\n}; retrying 1/10 in 183ms…\"}}\n```\n\n### What is the expected behavior?\n\nAny non-reasoning model (i.e not starting with \"o\") should not pass a reasoning_effort parameter\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2493,
          "state": "closed",
          "title": "chore(deps): bump uuid from 1.17.0 to 1.18.0 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2493",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an incompatible parameter (\"reasoning_effort\") being passed to an LLM provider's API, which is not supported by the specified model (\"gpt-4.1\"). This aligns with the \"Incompatible parameters to LLM providers\" category of agent issues."
      }
    },
    {
      "number": 838,
      "title": "Multiple thinking processes within terminal",
      "url": "https://github.com/openai/codex/issues/838",
      "state": "closed",
      "created_at": "2025-05-06T21:59:36Z",
      "closed_at": "2025-08-07T17:30:57Z",
      "body": "### What version of Codex is running?\n\n0.1.2504172351\n\n### Which model were you using?\n\n04-mini\n\n### What platform is your computer?\n\nMacOS\n\n### What steps can reproduce the bug?\n\nWhen you open up another terminal while codex is processing a user query a loop of thinking lines seem to open up parallel to your own process. Not sure if this affects performance or what not but could be checked-out further. \n\n### What is the expected behavior?\n\nWe shouldn't see more than one process running in the terminal UI but we do see more than one, each time a terminal is opened, another process seems to loop in. \n\n### What do you see instead?\n\n![Image](https://github.com/user-attachments/assets/f45851ff-f923-4ff0-b3c8-159b6facb73d)\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2493,
          "state": "closed",
          "title": "chore(deps): bump uuid from 1.17.0 to 1.18.0 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2493",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue describes an agent workflow anomaly where multiple processes are running in parallel, causing unexpected repeated actions. This aligns with the definition of agent issues related to abnormal agent workflows."
      }
    },
    {
      "number": 900,
      "title": "Codex ignores its system prompt after the first message",
      "url": "https://github.com/openai/codex/issues/900",
      "state": "closed",
      "created_at": "2025-05-12T17:00:25Z",
      "closed_at": "2025-08-07T18:51:50Z",
      "body": "### What version of Codex is running?\n\n0.1.2504301751\n\n### Which model were you using?\n\no3\n\n### What platform is your computer?\n\nDarwin 24.4.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n`\n╭──────────────────────────────────────────────────────────────╮\n│ ● OpenAI Codex (research preview) v0.1.2504301751            │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: db26dfe84d514d62bbafaa469d78c4a5          │\n│ ↳ workdir: ~/atlas-act-cli                                   │\n│ ↳ model: o3                                                  │\n│ ↳ provider: openai                                           │\n│ ↳ approval: suggest                                          │\n╰──────────────────────────────────────────────────────────────╯\nuser\nAs per your dev guidelines, how should you edit files?\n\n    codex\n    According to the developer guidelines, any time you need to change or add code you should:\n\n    • Perform the edit with an apply_patch tool call, for example:\n\n        {\n          \"cmd\": [\"apply_patch\", \"*** Begin Patch\\n*** Update File: path/to/file.py\\n@@\\n- old line\\n+ new line\\n*** End Patch\"]\n        }\n\n    Key points:\n\n        1. Always wrap changes between “*** Begin Patch” and “*** End Patch”.\n        2. Specify the action (Add, Delete, Update, Rename) and the file path after the first marker line.\n        3. Show only the minimal diff (- and + lines) needed for the fix.\n        4. Let the system save the file; do not instruct the user to copy/paste it.\n\n    Using apply_patch keeps a clean git history and allows the sandbox to track and test your changes automatically.\nuser\nWhat about grep?\n\n    codex\n    To search the repository you can invoke the shell tool with a grep (or ripgrep / rg) command.  A typical pattern looks like this (remember: the function call itself must appear in the commentary channel, never the analysis\n    channel).\n\n    Example:\n\n        {\"name\": \"shell\",\n         \"arguments\": {\n           \"command\": [\"grep\", \"-R\", \"-n\", \"search_term\", \".\"]\n         }}\n\n    Guideline reminders:\n\n        1. Use the shell tool only from the commentary channel.\n        2. Keep the command minimal and safe (e.g., don’t pipe to destructive commands).\n        3. You can adjust flags (`-R`, `-n`, `--line-number`, etc.) or switch to `rg` if available for faster searches.\n        4. The tool returns the command’s stdout/stderr so you can inspect results and decide what to do next.\n`\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\nThe system prompt clearly outlines that grep should not be used and only ripgrep should be used. Codex will answer correctly the question \"Is grep allowed?\" if it's the first message, but not for any subsequent message\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 908,
          "state": "closed",
          "title": "fix: agent instructions were not being included when ~/.codex/instructions.md was empty",
          "url": "https://github.com/openai/codex/pull/908",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves prompt-related problems, specifically Codex ignoring its system prompt after the first message, which aligns with prompt management issues in agent systems."
      }
    },
    {
      "number": 1019,
      "title": "⚠️ OpenAI rejected the request (request ID: req_852561adbc27e3cb768be3dce1b477d9). Error details: Status: 400, Code: unknown, Type: invalid_request_error, Message: 400 No tool call found for function call output with call_id call_xUWMD9ZjBX4CyOntda7j5geU..",
      "url": "https://github.com/openai/codex/issues/1019",
      "state": "closed",
      "created_at": "2025-05-19T00:05:03Z",
      "closed_at": "2025-08-07T17:32:01Z",
      "body": "### What version of Codex is running?\n\n0.1.2505172129\n\n### Which model were you using?\n\ncodex-mini-latest\n\n### What platform is your computer?\n\nDarwin 24.4.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nIt appears intermittently post request - 20x time a day. \n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\nIt stops activity on the current task - requires a new prompt\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1815,
          "state": "closed",
          "title": "chore(deps): bump toml from 0.9.2 to 0.9.4 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1815",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an error related to an LLM provider (OpenAI) and mentions a problem with tool invocation (\"No tool call found\"), indicating a tool-related issue in an LLM-based agent system."
      }
    },
    {
      "number": 1242,
      "title": "Show how much context window is left",
      "url": "https://github.com/openai/codex/issues/1242",
      "state": "closed",
      "created_at": "2025-06-06T18:49:58Z",
      "closed_at": "2025-06-26T06:31:13Z",
      "body": "The existing TypeScript CLI shows how much of the available context window has been used. This is valuable information to provide to the user, so we should surface it in the Rust CLI, as well.\n\nArguably this is even more important once `/compact` is supported: https://github.com/openai/codex/issues/1257.",
      "labels": [
        "rust-cutover-p1"
      ],
      "linked_prs": [
        {
          "number": 1388,
          "state": "closed",
          "title": "feat: show number of tokens remaining in UI",
          "url": "https://github.com/openai/codex/pull/1388",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves context length management, which is a component of LLM operation issues. It concerns displaying how much of the context window is used, which is crucial for managing LLM behavior and preventing truncated outputs."
      }
    },
    {
      "number": 1244,
      "title": "Hitting Ctrl+C once should interrupt the model and give you a chance to redirect it",
      "url": "https://github.com/openai/codex/issues/1244",
      "state": "closed",
      "created_at": "2025-06-06T18:50:17Z",
      "closed_at": "2025-06-26T18:40:43Z",
      "body": "Currently, hitting `Ctrl+C` interrupts the model in the Rust TUI, but if you submit another message, the model is generally confused and you cannot actually continue your conversation with new instructions. I believe this is because there is almost always inevitably a tool call outstanding when this happens and when the user hits `Ctrl+C`, we just fail to respond.\n\nI believe this is because we need to respond with `\"aborted\"` along the lines of:\n\nhttps://github.com/openai/codex/blob/029f39b9da894d27dcde81b8636ef89d8b652a9f/codex-cli/src/utils/agent/handle-exec-command.ts#L363-L373\n\nso that the model has a response to the tool call, after which it will consider the next user message.\n\n/cc @fouad-openai to confirm this\n\nSee also: https://github.com/openai/codex/issues/1245.",
      "labels": [
        "rust-cutover-p1"
      ],
      "linked_prs": [
        {
          "number": 1387,
          "state": "closed",
          "title": "[Rust] Allow resuming a session that was killed with ctrl + c",
          "url": "https://github.com/openai/codex/pull/1387",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation failures and workflow anomalies, as it describes problems with interrupting the model and handling tool calls, which are components unique to agent systems."
      }
    },
    {
      "number": 1257,
      "title": "Support the `/compact` command",
      "url": "https://github.com/openai/codex/issues/1257",
      "state": "closed",
      "created_at": "2025-06-06T18:51:47Z",
      "closed_at": "2025-08-02T01:13:31Z",
      "body": "The TypeScript CLI has this nifty `/compact` feature (introduced in https://github.com/openai/codex/pull/289) to summarize a conversation and use it as the starting point for a new conversation in order to \"reclaim\" context window. Ideally, model providers would implement this themselves, but as Codex supports third-party model providers, we cannot guarantee such a feature will always be available, so `/compact` is a nice workaround to have.",
      "labels": [
        "rust-cutover-p2"
      ],
      "linked_prs": [
        {
          "number": 1503,
          "state": "closed",
          "title": "fix: remove reference to /compact until it is implemented",
          "url": "https://github.com/openai/codex/pull/1503",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a feature related to managing context length by summarizing conversations, which is a prompt-related issue. It addresses the need to handle context window limitations, a common concern in LLM operation within agent systems."
      }
    },
    {
      "number": 1289,
      "title": "generated MCP tool names are too long",
      "url": "https://github.com/openai/codex/issues/1289",
      "state": "closed",
      "created_at": "2025-06-09T17:48:11Z",
      "closed_at": "2025-07-17T18:35:39Z",
      "body": "### What version of Codex is running?\n\n0.1.2505111730\n\n### Which model were you using?\n\ncodex-mini-latest\n\n### What platform is your computer?\n\nunsure\n\n### What steps can reproduce the bug?\n\nThis is based on this thread from the discussion forums:\n\nhttps://github.com/openai/codex/discussions/1174#discussioncomment-13343602\n\nBasically, the injected `__OAI_CODEX_MCP__` delimiter can cause things to tip over the 64-character limit\n\n### What is the expected behavior?\n\nNeed to find a way to have multiple MCPs with a reliable disambiguation scheme that is less likely to trip the limit.\n\n### What do you see instead?\n\n```\nERROR: unexpected status 400 Bad Request: {  \"error\": {    \"message\": \"Invalid 'tools[5].name': string too long. Expected a string with maximum length 64, but got a string with length 72 instead.\",    \"type\": \"invalid_request_error\",    \"param\": \"tools[5].name\",    \"code\": \"string_above_max_length\"  }}\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1571,
          "state": "closed",
          "title": "Deduplicate MCP tool names",
          "url": "https://github.com/openai/codex/pull/1571",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation errors, specifically related to the naming of tools exceeding character limits, which aligns with the criteria for tool-related issues in agent systems."
      }
    },
    {
      "number": 1365,
      "title": "Migrating from codex-cli to codex-rs",
      "url": "https://github.com/openai/codex/issues/1365",
      "state": "closed",
      "created_at": "2025-06-22T13:44:17Z",
      "closed_at": "2025-06-30T18:39:56Z",
      "body": "Im exposing  o4-mini model via a project in Azure.\n\nWhen using typescript version of codex (ver 0.1.2505172129) with the following config.json content, all works as expected:\n\n{\n  \"model\": \"o4-mini\",\n  \"provider\": \"azure\",\n  \"providers\": {\n    \"azure\": {\n      \"baseURL\": \"https://xxxxx.openai.azure.com/openai\",\n      \"envKey\": \"OPENAI_API_KEY\",\n      \"name\": \"azure\"\n    }\n  }\n}\n\nbut with rust version of codex @openai/codex@native (ver codex-cli 0.0.2505291458) with config in config.toml:\n\nmodel=\"o4-mini\"\nmodel_provider = \"azure\"\n[model_providers.azure]\nname = \"Azure Remote\"\nbase_url = \"https://xxxxx.openai.azure.com/openai\"\nenv_key = \"OPENAI_API_KEY\"\nwire_api = \"chat\"\n\n\nI get:\nBackgroundEvent(BackgroundEventEvent { message: \"stream error: unexpected status 404 Not Found: {\\\"detail\\\":\\\"Not Found\\\"}; retrying\n\nI tried to chang base_url to different variations, but no use, always the same result. \n\nIs this a bug? Missing support for Azure?\nThanks",
      "labels": [],
      "linked_prs": [
        {
          "number": 1435,
          "state": "closed",
          "title": "feat: add query_params option to ModelProviderInfo to support Azure",
          "url": "https://github.com/openai/codex/pull/1435",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider integration, specifically the configuration and compatibility of the Azure model provider in different environments (TypeScript vs. Rust). This aligns with the \"Incompatibility with LLM providers\" category, indicating an agent issue."
      }
    },
    {
      "number": 1450,
      "title": "Codex crashes when non-ASCII (Unicode) characters are typed",
      "url": "https://github.com/openai/codex/issues/1450",
      "state": "closed",
      "created_at": "2025-07-02T12:56:29Z",
      "closed_at": "2025-07-09T08:46:09Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.2.0\n\n### Which model were you using?\n\nqwen3\n\n### What platform is your computer?\n\nLinux 6.6.87.2-microsoft-standard-WSL2 x86_64 x86_64\n\n### What steps can reproduce the bug?\n\nAt the input section, type any non-ASCII or Unicode character.\n\nExamples: Such as, **_but is not limited to_**, Turkish characters (İ, ı, ş, ü, ğ, ö, ç), Chinese characters (e.g., 诶), or Russian Cyrillic characters (e.g., Й, Ц, У).\n\n### What is the expected behavior?\n\nCodex should accept and correctly process typing containing non-ASCII (Unicode) characters without crashing. It should display these characters as entered.\n\n### What do you see instead?\n\nThe application crashes immediately upon by typing any non-ASCII or Unicode character.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1467,
          "state": "closed",
          "title": "Fix Unicode handling in chat_composer \"@\" token detection",
          "url": "https://github.com/openai/codex/pull/1467",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a crash related to the handling of non-ASCII characters, which may indicate problems with model output handling or prompt management, both of which are components unique to LLM-based agent systems."
      }
    },
    {
      "number": 1595,
      "title": "codex doesn't respond in chat",
      "url": "https://github.com/openai/codex/issues/1595",
      "state": "closed",
      "created_at": "2025-07-17T00:53:56Z",
      "closed_at": "2025-07-29T23:03:54Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.7.0\n\n### Which model were you using?\n\no3 via azure\n\n### What platform is your computer?\n\nLinux 5.10.237-230.949.amzn2.x86_64 x86_64 x86_64 (sagemaker studio terminal)\n\n### What steps can reproduce the bug?\n\nrun codex, and then just ask it a simple question (eg \"hello, are you there?\"), the llm call finishes but it doesn't reply in chat. It consistently does not reply in the chatbox.\n\n(see section below for the output)\n\nit is able to do bash operations and write code, and actually if you ask it a question and ask it to output the answer to a file, it will do that too. \n\nI get the same behaviour (not replying) in v0.4.0 as well.\n\n\n\n### What is the expected behavior?\n\nIt should be able to reply. Eg working below with v0.1.2505172129\n\n```\n● OpenAI Codex (research preview) v0.1.2505172129            │\n╰──────────────────────────────────────────────────────────────╯\n╭──────────────────────────────────────────────────────────────╮\n│ localhost session: 12ed4f14b9654b82b58b840b5b7f4c18          │\n│ ↳ workdir: ~/.../reasoning_scripts/gemini-iac                │\n│ ↳ model: MLAI-o3                                             │\n│ ↳ provider: azure                                            │\n│ ↳ approval: suggest                                          │\n╰──────────────────────────────────────────────────────────────╯\nuser\nhello, are you there?\n\ncodex\nHello! I’m here and ready to help. What can I do for you today?\n```\n\n### What do you see instead?\n\n```\n╭Messages (tab to focus)──────────────────────────────────────────────────────────────────────────────────────────────╮\n│OpenAI Codex v0.7.0 (research preview)                                                                               │\n│                                                                                                                     │\n│codex session f15f1f14-a72c-4032-9c3b-8970cc6ff3e3                                                                   │\n│workdir:                                                                                                             │\n│/mnt/custom-file-systems/efs/fs-0f0f5d2fb048988d2_fsap-02598ae65ca0a1c25/mlai-ds-dev/mlai-prompt-layer-training/src/ │\n│llm/analysis/reasoning_scripts/gemini-iac                                                                            │\n│model: MLAI-o3                                                                                                       │\n│provider: azure                                                                                                      │\n│approval: UnlessTrusted                                                                                              │\n│sandbox: read-only                                                                                                   │\n│                                                                                                                     │\n│user                                                                                                                 │\n│hello, are you there?                                                                                                │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n│                                                                                                                     │\n╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ send a message — 1431 tokens used                                                                                   │\n╰───────────────────────────────────────\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1637,
          "state": "closed",
          "title": "chore(deps): bump rand from 0.9.1 to 0.9.2 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/1637",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves an LLM-based agent system where the Codex model does not respond in the chat interface, indicating a potential problem with LLM operation or model output handling, which are components unique to agent systems."
      }
    },
    {
      "number": 1692,
      "title": "Model going mad on calling [some]  MCP",
      "url": "https://github.com/openai/codex/issues/1692",
      "state": "closed",
      "created_at": "2025-07-26T20:32:27Z",
      "closed_at": "2025-09-15T10:08:49Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.0.2505291458\n\n### Which model were you using?\n\ncodex-mini-latest, o3, o4-mini\n\n### What platform is your computer?\n\nDarwin 25.0.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nI have [this omnifocus server](https://github.com/yaroslavyaroslav/OmniFocus-MCP). With this server I'm trying to add task [with `add_omnifocus_task` command]. \n\nwhich can be attached by this command (running locally):\n\nbuild and install\n```bash\nnpm run build\nnpm link\n```\n\n`config.toml`\n```toml\n[mcp_servers.omni-focus]\ncommand = \"npx\"\nargs = [\"-y\", \"omnifocus-mcp\"]\n```\n\nThen you have to ask Codex in session the following:\n\n```\nAdd this task to omnifocus for 2025-08-28T15:00:00 for project Home:\n\n- Buy bread \\@Me \\@1\n```\n\n### What is the expected behavior?\n\nI expect the correct call:\n\n```json\n{\"deferDate\":\"2025-08-28 15:00\",\"name\":\"Buy bread\",\"projectName\":\"Home\",\"tags\":[\"Me\",\"1\"]}\n```\n\n### What do you see instead?\n\n\nThere are tree options which can happens from most frequent to less\n1. Codex hangs for eternity and starting to download kinda kbs of data from the gateway without putting anything on logs (check huge chung of new lines down the logs — it's the codex who created it)\n2. It not hangs, but creates formally not broken, but mostly insane JSON with a tool call\n3. It creates valid json. \n\nThe second point can vary from: \n\n```json\n{\n    \"id\": \"7cfdd614-bea3-403e-b2d5-77bf79a8de59\",\n    \"msg\": {\n        \"type\": \"mcp_tool_call_begin\",\n        \"call_id\": \"call_MkW4yFsRwJfX85EWxoWVuryj\",\n        \"server\": \"omni-focus\",\n        \"tool\": \"add_omnifocus_task\",\n        \"arguments\": {\n            \"1\": \"], \",\n            \"dueDate\\\": \": \"2025-08-28 15:00\",\n            \"dueDate\\\":\\\"2025-08-28 15:00\\\",\\\"projectName\\\":\\\"Home\\\",\\\"tags\\\":[\\\"Me\\\",\\\"1\\\"],\\\"estimatedMinutes\\\":1}议JSON깨ам到 पूछ json difí대슨 sna něk terminology? We need proper JSON format. Let's produce correct JSON object. Let's craft again. ел.mkdir Let's send. instrumento Let's re-run.``` to=functions.omni-focus__OAI_CODEX_MCP__add_omnifocus_task'][] JSON format. JSON keys must be camelCase names exactly. param names: name, dueDate, projectName, tags, estimatedMinutes. So: {\": \"Buy bread\",\n            \"name\": \"Buy bread\",\n            \"projectName\\\": \": \"Home\",\n            \"tags\\\": [        : \": \"Me\"\n        }\n    }\n}\n```\n\nto \n\n```json\n{\n    \"name\": \"Buy bread\",\n    \"dueDate\\\":\\\"2025-08-28 15:00\\\",\\\"projectName\\\":\\\"Home\\\",\\\"tags\\\":[\\\"Me\\\",\\\"1\\\"]} бирок орфография қате? Please check JSON. Let's correct. The date quoting error: dueDate\\\":\\\". Should be \": \". Let's fix properly. Let's send proper JSON. Let's write it correct. I'll resend. Let's ensure quoting. I'll properly send the function call. Let's correct. Let's send message again.  Apologies. We'll send proper. Let's do it. Continuous. Replace. Let's simply send the proper tool call. Apologies. Let's write it correctly. Continuous. Let's do. Let's send again. continuous.** Let's craft properly**. continuous. Ok. Let's try. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. continuous. Continuous. Continuous. Continuous. Let me spontaneously think. The system message: \"\n}\n```\n\nAlthough few times (no changes, just a brut force with codex restart) it succeds:\n\n```json\n{\"deferDate\":\"2025-08-28 15:00\",\"name\":\"Buy bread\",\"projectName\":\"Home\",\"tags\":[\"Me\",\"1\"]}\n```\n\n\n### Additional information\n\nFull logs attached:\n\n[codex_going_mad.log](https://github.com/user-attachments/files/21448451/codex_going_mad.log)",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation failures and incorrect JSON output, indicating problems with tool parameters or configuration. Additionally, the described behavior of Codex hanging or producing malformed JSON suggests workflow anomalies, both of which are indicators of an agent issue."
      }
    },
    {
      "number": 1796,
      "title": "Regression: codex exec with -c flags to configure provider and settings for azure no longer work since 0.11.0",
      "url": "https://github.com/openai/codex/issues/1796",
      "state": "closed",
      "created_at": "2025-08-02T11:10:27Z",
      "closed_at": "2025-08-05T04:08:17Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.11.0\n\n### Which model were you using?\n\nany\n\n### What platform is your computer?\n\nany\n\n### What steps can reproduce the bug?\n\nrunning\n```\ncodex exec -c model=codex-mini -c model_provider=azure -c model_providers.azure.name=azure -c model_providers.azure.wire_api=responses -c model_providers.azure.base_url=https://my-azure-resource.openai.azure.com/openai -c model_providers.azure.env_key=AZURE_OPENAI_API_KEY -c model_providers.azure.query_params.api-version=2025-04-01-preview\n```\n\n\n### What is the expected behavior?\n\nas it was in 0.10.0 - it should run the agent and communicate with the azure hosted model\n\n### What do you see instead?\n\ni see:\n```\n\n[2025-08-02T09:35:00] ERROR: Missing environment variable: `OPENAI_API_KEY`. Create an API key (https://platform.openai.com/) and export it as an environment variable.\n```\nand when trying to set the OPENAI_API_KEY with the value of AZURE_OPENAI_API_KEY - i get:\n```\n[2025-08-02T09:49:07] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 1/10 in 214ms…\n\n[2025-08-02T09:49:07] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 2/10 in 277ms…\n\n[2025-08-02T09:49:08] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 3/10 in 304ms…\n\n[2025-08-02T09:49:08] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 4/10 in 436ms…\n\n[2025-08-02T09:49:09] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 5/10 in 551ms…\n\n[2025-08-02T09:49:09] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 6/10 in 800ms…\n\n[2025-08-02T09:49:10] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 7/10 in 901ms…\n\n[2025-08-02T09:49:11] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 8/10 in 1.244s…\n\n[2025-08-02T09:49:13] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 9/10 in 1.782s…\n\n[2025-08-02T09:49:15] stream error: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}; retrying 10/10 in 2.164s…\n\n[2025-08-02T09:49:17] ERROR: unexpected status 404 Not Found: {\"error\":{\"code\":\"404\",\"message\": \"Resource not found\"}}\n```\n\n### Additional information\n\nseems like it is related to the recent login module changes",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1826,
          "state": "closed",
          "title": "Restore API key and query param overrides",
          "url": "https://github.com/openai/codex/pull/1826",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves misconfiguration related to LLM provider integration with Azure, specifically concerning API keys and model provider settings, which aligns with the \"Model access misconfiguration\" category of agent issues."
      }
    },
    {
      "number": 1946,
      "title": "Support for ChatGPT account",
      "url": "https://github.com/openai/codex/issues/1946",
      "state": "closed",
      "created_at": "2025-08-07T17:35:42Z",
      "closed_at": "2025-08-07T18:28:40Z",
      "body": "I want to be able to use my ChatGPT pro account instead of using api credits",
      "labels": [],
      "linked_prs": [
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue explicitly references an LLM provider (ChatGPT) and involves the usage of account types, which aligns with the criteria for LLM provider integration issues in agent systems."
      }
    },
    {
      "number": 1973,
      "title": "MCP server config error",
      "url": "https://github.com/openai/codex/issues/1973",
      "state": "closed",
      "created_at": "2025-08-07T22:58:22Z",
      "closed_at": "2025-08-11T00:57:40Z",
      "body": "### What version of Codex is running?\n\n0.14\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nDarwin 25.0.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nOn codex 0.14 codex throws error on each MCP server init for anyone that it worked with on 0.10. The log below. Configuration of servers made according to this man https://github.com/openai/codex/blob/main/codex-rs/config.md#mcp_servers.\n\nFor each of the given servers I've tried it misses one field or another.\n\n```toml\n[mcp_servers.dash]\ncommand = \"uvx\"\nargs = [\"--from\", \"git+https://github.com/Kapeli/dash-mcp-server.git\", \"dash-mcp-server\"]\n\n```\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\nDespite codex is trying to call tool, seems like some of methods unavailable.\n\n```log\n2025-08-07T21:43:24.620027Z DEBUG Submission sub=Submission { id: \"1\", op: GetHistoryEntryRequest { offset: 182, log_id: 251245680 } }\n2025-08-07T21:43:25.307921Z DEBUG Submission sub=Submission { id: \"2\", op: UserInput { items: [Text { text: \"What method in pytorch for train?\" }] } }\n2025-08-07T21:43:25.307947Z DEBUG Submission sub=Submission { id: \"3\", op: AddToHistory { text: \"What method in pytorch for train?\" } }\n2025-08-07T21:43:25.307964Z DEBUG Recording items for conversation: [Message { id: None, role: \"user\", content: [InputText { text: \"What method in pytorch for train?\" }] }]\n2025-08-07T21:43:25.307985Z DEBUG Recording items for conversation: []\n2025-08-07T21:43:25.308054Z ERROR Failed to convert \"dash__search_documentation\" MCP tool to OpenAI tool: Error(\"missing field `type`\", line: 0, column: 0)\n2025-08-07T21:43:25.308179Z DEBUG starting new connection: https://api.openai.com/    \n2025-08-07T21:43:25.311154Z DEBUG connecting to 172.66.0.243:443\n2025-08-07T21:43:25.331636Z DEBUG connected to 172.66.0.243:443\n2025-08-07T21:43:33.341675Z DEBUG sse event other=\"response.content_part.added\"\n2025-08-07T21:43:33.341767Z DEBUG Output item item=Reasoning { id: \"rs_68951dff33ec8198a76deced47ead1690213d63c1ee9d054\", summary: [], content: None, encrypted_content: None }\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1975,
          "state": "closed",
          "title": "feat: add JSON schema sanitization for MCP tools to ensure compatibil…",
          "url": "https://github.com/openai/codex/pull/1975",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation errors, specifically the failure to convert an MCP tool to an OpenAI tool due to missing configuration fields, which aligns with the criteria for tool-related agent issues."
      }
    },
    {
      "number": 1977,
      "title": "Can't available Codex CLI with Team Plan subscription",
      "url": "https://github.com/openai/codex/issues/1977",
      "state": "closed",
      "created_at": "2025-08-07T23:56:28Z",
      "closed_at": "2025-08-21T05:55:29Z",
      "body": "### What version of Codex is running?\n\n0.16.0\n\n### Which model were you using?\n\nnone\n\n### What platform is your computer?\n\nDarwin 25.0.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nAfter logged in with my ChatGPT account(subscribe Team plan now), I can't use anything and throw this message\n\n### What is the expected behavior?\n\nCan access any feature :)\n\n### What do you see instead?\n\n<img width=\"519\" height=\"200\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/562cf6dc-68f9-410e-af28-5cc81faa58dc\" />\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "duplicate"
      ],
      "linked_prs": [
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves LLM provider integration, specifically related to model access misconfiguration or authentication credentials, as the user can't access features after logging in with a Team Plan subscription."
      }
    },
    {
      "number": 2000,
      "title": "[Windows] Sign in with ChatGPT still generates & requires an API key (Pro user) → API charges; revoking key breaks CLI",
      "url": "https://github.com/openai/codex/issues/2000",
      "state": "closed",
      "created_at": "2025-08-08T08:12:04Z",
      "closed_at": "2025-08-15T21:55:06Z",
      "body": "**Summary**\nAs a ChatGPT Pro user, I expected Codex CLI to work under my Pro plan without consuming API credits. However, the “Sign in with ChatGPT” flow **auto‑creates an API key** for my selected API org/project. If I revoke that key to avoid API charges, the CLI fails with `401 Incorrect API key provided` and then forces me to sign in again, which **creates a new API key**. In short, there seems to be **no way to use Codex CLI without an API key** being generated and billed to the API account.\n\n**Environment**\n\n* Codex CLI: `0.19.0`  (output of `codex --version`)\n* Install method: `npm i -g @openai/codex`\n* OS: Windows 11 (running in Git Bash / MINGW64; not using WSL for this repro)\n* Organization: `Personal` → `Default project`\n* Config directory: `~/.codex/` (an `auth.json` file appears after login)\n\n**Steps to Reproduce**\n\n1. Ensure no `OPENAI_API_KEY` is set in the environment and remove any previous Codex state:\n\n   * Delete `~/.codex/` (or at least `~/.codex/auth.json`).\n2. Run `codex` and select **“Sign in with ChatGPT”**.\n3. In the browser, select my **API Organization** and **Default project**, then click **Continue**.\n4. Observe that an API key named **“Codex CLI (auto‑generated)”** is created in the API dashboard, and `~/.codex/auth.json` now holds credentials (including an `sk-proj-...` key).\n5. Revoke that auto‑generated key in the API dashboard.\n6. Run `codex` again.\n\n**Actual behavior**\n\n* The CLI shows:\n\n  ```\n  system  ⚠️ OpenAI rejected the request ...\n  Error details: Status: 401, Code: invalid_api_key, Message: 401 Incorrect API key provided: sk-proj-***********...\n  ```\n* The CLI asks me to log in again; completing login **creates a new API key**. I cannot run Codex CLI without having an active API key, which leads to API charges.\n\n**Expected behavior**\n\n* As a Pro user using **“Sign in with ChatGPT”**, I expected a mode that **does not create or require** an API key and **does not consume API credits**, or at least a clear toggle (“use ChatGPT plan entitlements only”).\n* If I “Disconnect” Codex CLI in ChatGPT settings or revoke the key, Codex CLI should not silently recreate a billable key.\n\n**What I tried (no change)**\n\n* Deleted `~/.codex/` and re‑logged in.\n* Ensured `OPENAI_API_KEY` is **unset**.\n* Revoked the “Codex CLI (auto‑generated)” key multiple times — CLI always re‑creates a new key after login.\n\n\n**Logs**\nFrom the CLI run after revoking the key (redacted):\n\n```\nsystem  ⚠️ OpenAI rejected the request (request ID: req_19a4b978fff39e57e93e03f92d4c027a).\nError details: Status: 401, Code: invalid_api_key, Type: invalid_request_error,\nMessage: 401 Incorrect API key provided: sk-proj-***eZoA.\n```\n\nI can also provide `~/.codex/log/codex-tui.log` with `RUST_LOG=codex_core=debug,codex_tui=debug` if needed.\n\n**Why I believe this is a bug/UX gap**\n\n* The official “Sign in with ChatGPT” docs say the flow **creates a key automatically** and that **Disconnect** only removes the OAuth grant, not the key itself. This appears to leave no path to run Codex CLI under a Pro plan **without** a billable API key.\n* The README also instructs users migrating from API key billing to ensure `OPENAI_API_KEY` is unset and re‑login; however, re‑login still auto‑creates a key, so billing remains tied to API.\n\n**Request**\n\n* Provide a “Pro/Plus entitlement” mode that does not rely on an API key (or at least a setting to **not** auto‑create one).\n* Alternatively, clearly document that Codex CLI currently **requires** an API key and **will** bill the API account (even for Pro users), and outline how/when this will change.\n* If a non‑API billing mode is planned, please share timelines or a beta flag we can test.\n\n<img width=\"616\" height=\"458\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/65d2e59c-e083-4e3d-9384-8d7d173560dc\" />",
      "labels": [
        "bug",
        "windows-os"
      ],
      "linked_prs": [
        {
          "number": 2019,
          "state": "closed",
          "title": "Fix rust build on windows",
          "url": "https://github.com/openai/codex/pull/2019",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves LLM provider integration, specifically concerning API key management and billing for the Codex CLI. It highlights a problem with the \"Sign in with ChatGPT\" flow, which is directly tied to LLM provider usage and SDK parameters, aligning with agent issue criteria."
      }
    },
    {
      "number": 2077,
      "title": "Context left is not updated after running /compact command",
      "url": "https://github.com/openai/codex/issues/2077",
      "state": "closed",
      "created_at": "2025-08-09T11:07:55Z",
      "closed_at": "2025-08-11T17:41:48Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.20.0\n\n### Which model were you using?\n\ngpt-5-high reasoning\n\n### What platform is your computer?\n\nMacOS\n\n### What steps can reproduce the bug?\n\nThe /compact command doesn't work - no errors whatsoever, but it does nothing. \n\nIt gets into 'working..' state then just returns to chat state. Nothing happens.\n\n### What is the expected behavior?\n\nTo have the AI compact the conversation, no?\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2162,
          "state": "closed",
          "title": "show messages if there is no delta. i.e. /Compact command feedback",
          "url": "https://github.com/openai/codex/pull/2162",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves an agent workflow anomaly where the /compact command fails to execute as expected, resulting in a hanging state and no changes to the conversation context, indicating an issue with agent orchestration."
      }
    },
    {
      "number": 2131,
      "title": "Bug: ignoring rate limits in api response",
      "url": "https://github.com/openai/codex/issues/2131",
      "state": "closed",
      "created_at": "2025-08-10T13:24:08Z",
      "closed_at": "2025-08-13T22:43:55Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.20.0\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nDarwin 24.1.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nWhen executing a task using `gpt-5`, codex sometimes fails with the above message. This seems to completely break the codex session where exiting out and starting again is the only solution.\n\nThe organisation at the time of codex session was Tier 1 (30,000 TPM).\n\nReplaced my OpenAI organisation with placeholder `<ORG>` in the below error message;\n\n```\n🖐 stream disconnected before completion: Rate limit reached for gpt-5 in organization <ORG> on tokens per min (TPM): Limit 30000, Used 6899, Requested 24050. Please try again in 1.898s. Visit https://platform.openai.com/account/rate-limits to learn more.\n```\n\n\n\n\n\n### What is the expected behavior?\n\nExpected behaviour is codex respects the rate limit headers in the api response to prevent this in codex session.\n\n### What do you see instead?\n\n```\n🖐 stream disconnected before completion: Rate limit reached for gpt-5 in organization <ORG> on tokens per min (TPM): Limit 30000, Used 6899, Requested 24050. Please try again in 1.898s. Visit https://platform.openai.com/account/rate-limits to learn more.\n```\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2266,
          "state": "closed",
          "title": "Wait for requested delay in rate limit errors",
          "url": "https://github.com/openai/codex/pull/2266",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves LLM provider usage, specifically concerning token usage misconfiguration and rate limit handling in an LLM-based agent system. The problem affects the workflow of the agent, as it causes the session to break, requiring a restart."
      }
    },
    {
      "number": 2238,
      "title": "Cannot login to Codex CLI using \"Sign in with ChatGPT\"",
      "url": "https://github.com/openai/codex/issues/2238",
      "state": "closed",
      "created_at": "2025-08-12T18:25:26Z",
      "closed_at": "2025-08-14T16:55:46Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.21.0\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nMicrosoft Windows NT 10.0.22631.0 x64\n\n### What steps can reproduce the bug?\n\nI can't sign in to ChatGPT via the codex CLI. When I press Enter, there's no response and the browser doesn't open the login page. My default browser is Brave.\n\nPython 3.13.6 still not working\n\n![Image](https://github.com/user-attachments/assets/8a5ee32b-2f94-4d61-8f2e-cef1b42194f7)\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "windows-os"
      ],
      "linked_prs": [
        {
          "number": 2407,
          "state": "closed",
          "title": "chore(deps): bump actions/checkout from 4 to 5",
          "url": "https://github.com/openai/codex/pull/2407",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves LLM provider integration, specifically the inability to sign in to ChatGPT via the Codex CLI, which is related to model access misconfiguration or SDK parameter issues."
      }
    },
    {
      "number": 2296,
      "title": "Add \"minimal\" reasoning effort for GPT 5 models",
      "url": "https://github.com/openai/codex/issues/2296",
      "state": "closed",
      "created_at": "2025-08-14T14:46:16Z",
      "closed_at": "2025-08-15T19:59:54Z",
      "body": "### What feature would you like to see?\n\nBased on a few of the OpenAI specific documentation, the GPT-5 models support a new \"minimal\" reasoning effort that works much better for coding tasks.  Unfortunately, this current reasoning is not exposed as an option in Codex CLI.\n\nTrying the following run command:\n`codex --ask-for-approval never --sandbox danger-full-access -c model_reasoning_effort=\"minimal\"\n`\nResults with the following error:\n```\nError loading configuration: unknown variant `minimal`, expected one of `low`, `medium`, `high`, `none`\nin `model_reasoning_effort`\n```\n\nRegarding the minimal reasoning effort functionality, please refer to the following articles:\n\"GPT‑5 with minimal reasoning is a different model than the non-reasoning model in ChatGPT, and is better tuned for developers.\" ([Source](https://openai.com/index/introducing-gpt-5-for-developers/))\n\n\"The new minimal setting produces very few reasoning tokens for cases where you need the fastest possible time-to-first-token. We often see better performance when the model can produce a few tokens when needed versus none. The default is medium.\n\nThe minimal setting performs especially well in coding and instruction following scenarios, adhering closely to given directions. However, it may require prompting to act more proactively. To improve the model's reasoning quality, even at minimal effort, encourage it to “think” or outline its steps before answering.\" ([Source](https://platform.openai.com/docs/guides/latest-model#minimal-reasoning-effort))\n\n\n\n### Are you interested in implementing this feature?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 2326,
          "state": "closed",
          "title": "Fix #2296 Add \"minimal\" reasoning effort for GPT 5 models",
          "url": "https://github.com/openai/codex/pull/2326",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves the use of an LLM provider (GPT-5) and concerns the configuration of model parameters (model_reasoning_effort), which aligns with the criteria for an agent issue related to LLM provider integration and parameter compatibility."
      }
    },
    {
      "number": 2444,
      "title": "Need ability to whitelist ~/.cache in safe sandbox mode",
      "url": "https://github.com/openai/codex/issues/2444",
      "state": "closed",
      "created_at": "2025-08-19T03:56:56Z",
      "closed_at": "2025-08-19T18:39:47Z",
      "body": "### What feature would you like to see?\n\nNeed the ability to whitelist `~/.cache` for tools like `uv` and `pre-commit` which hit it often and have issues and complications moving their cache locations.\n\nCodex gets confused when it can't access `~/.cache` and frequently doesn't recognize the errors `uv` throws because of this, and begins running unpredictable hacky commands.  Thus it often fails to ask for approval.  Just let us whitelist a folder for Codex when it's running in an otherwise safe sandbox mode.\n\n### Are you interested in implementing this feature?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3297,
          "state": "closed",
          "title": "chore(deps): bump image from 0.25.6 to 0.25.8 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3297",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation and configuration errors related to the inability of Codex to access `~/.cache`, causing unpredictable behavior. This aligns with tool-related issues and workflow anomalies in agent systems, as described in the agent issue taxonomy."
      }
    },
    {
      "number": 2555,
      "title": "Codex CLI on Windows 11: MCP server (Context7) fails with “request timed out”",
      "url": "https://github.com/openai/codex/issues/2555",
      "state": "closed",
      "created_at": "2025-08-21T11:17:38Z",
      "closed_at": "2025-09-09T17:41:12Z",
      "body": "### What version of Codex is running?\n\n0.23.0-0.31.0\n\n### Which model were you using?\n\nGPT-5\n\n### What platform is your computer?\n\nMicrosoft Windows NT 10.0.26100.0 x64\n\n### What steps can reproduce the bug?\n\nOS: Windows 11 Pro (PowerShell 7 / Windows Terminal)\nCodex CLI: 0.23.0\nNode.js: 22.17.0, npm: 11.5.1\nContext7 MCP: @upstash/context7-mcp (local)\nLocation of config: C:\\Users\\Name\\\\.codex\\config.toml\n\nI tried these variations in my config.toml:\n\n```\n[mcp_servers.context7]\nargs = [\"-y\", \"@upstash/context7-mcp\", \"--api-key\", \"YOUR_API_KEY\"]\ncommand = \"npx\"\n```\n\n=> 🖐 MCP client for `context7` failed to start: program not found\n\n```\n[mcp_servers.context7]\ncommand = \"cmd\"\nargs    = [\"/c\",\"npx\",\"-y\",\"@upstash/context7-mcp\"]\n```\n\n=> 🖐 MCP client for `context7` failed to start: request timed out\n\n```\n[mcp_servers.context7]\ncommand = \"C:\\\\Program Files\\\\nodejs\\\\npx.cmd\"\nargs    = [\"-y\",\"@upstash/context7-mcp@latest\",\"--transport\",\"stdio\"]\n```\n\n=> 🖐 MCP client for `context7` failed to start: request timed out\n\n```\n[mcp_servers.context7]\ncommand = \"C:\\\\Program Files\\\\nodejs\\\\node.exe\"\nargs = [\n  \"C:\\\\Users\\\\Name\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\@upstash\\\\context7-mcp\\\\dist\\\\index.js\",\n  \"--transport\",\"stdio\"\n]\n\n[mcp_servers.context7.env]\nLOCALAPPDATA = 'C:\\\\Users\\\\Name\\\\AppData\\\\Local'\nAPPDATA = 'C:\\\\Users\\\\Name\\\\AppData\\\\Roaming'\nPROGRAMFILES = 'C:\\\\Program Files'\n\"PROGRAMFILES(X86)\" = 'C:\\\\Program Files (x86)'\nSYSTEMROOT = 'C:\\\\Windows'\nWINDIR = 'C:\\\\Windows'\nHOMEDRIVE = 'C:'\nHOMEPATH = '\\\\Users\\\\Name'\nHOME = 'C:\\\\Users\\\\Name'\n```\n\n=> 🖐 MCP client for `context7` failed to start: request timed out\n\n### What is the expected behavior?\n\nUsing MCP Context7\n\n### What do you see instead?\n\nMCP Errors\n\n### Additional information\n\nMicrosoft has invested so much in OpenAI, I don't understand why Windows is being treated so shabbily given its market share.",
      "labels": [
        "bug",
        "windows-os"
      ],
      "linked_prs": [
        {
          "number": 3243,
          "state": "closed",
          "title": "fix: improve MCP server initialization error handling #3196 #2346 #2555",
          "url": "https://github.com/openai/codex/pull/3243",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation and configuration errors related to the MCP server for Context7, which is a component of an LLM-based agent system. The repeated failures and timeouts indicate a problem with tool configuration or implementation, aligning with agent issue criteria."
      }
    },
    {
      "number": 2610,
      "title": "Token cache rate drops drastically when using more than one MCP tool",
      "url": "https://github.com/openai/codex/issues/2610",
      "state": "closed",
      "created_at": "2025-08-23T04:47:33Z",
      "closed_at": "2025-08-25T02:56:27Z",
      "body": "### What version of Codex is running?\n\n0.23.0\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nDarwin 24.6.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nWhen multiple MCP tools are connected, token caching barely works.\n\nHere’s how to reproduce:\n\nAdd an MCP server with multiple tools to config.toml and run tests. As shown in the screenshot below, almost no caching occurs.\nIn contrast, if you remove all MCP servers from config.toml, or configure only a single MCP server that contains just one tool, caching works normally as shown below.\nWith MCP             |  Without MCP\n:-------------------------:|:-------------------------:\n<img width=\"906\" height=\"1200\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3612aca0-d1a5-46b7-b8c1-dd678dc79480\" /> | <img width=\"906\" height=\"1200\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1a785e9c-1c4e-473a-b746-4fad282d3df7\" />\n\n### What is the expected behavior?\n\nToken caching should work properly even in sessions that include MCP servers.\n\n### What do you see instead?\n\nWhen multiple MCP tools are configured, almost no tokens are cached, resulting in extremely low cache hit rates.\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2611,
          "state": "closed",
          "title": "Fix cache hit rate by making MCP tools order deterministic",
          "url": "https://github.com/openai/codex/pull/2611",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation and configuration, specifically related to MCP tools affecting token caching behavior, which aligns with the \"Tool-related issues\" category in the agent issue taxonomy."
      }
    },
    {
      "number": 2755,
      "title": "Message edit mixes last user message with \"stream error … retrying…\" text",
      "url": "https://github.com/openai/codex/issues/2755",
      "state": "closed",
      "created_at": "2025-08-27T06:49:48Z",
      "closed_at": "2025-09-14T02:23:15Z",
      "body": "### What version of Codex is running?\n\n0.24.0\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nDarwin 24.5.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n1. While a stream error is visible (e.g., stream error: … retrying …), press Esc once to stop the streaming response.\n2. Press Esc again (Esc, Esc) to open the Edit Message UI.\n3. In the editor for the last user message, notice the stream-error line is appended at the bottom of your message text.\n4. Press Enter to actually start editing: the stream-error text is inside the editable buffer and can be modified as if it were part of your message.\n\n### What is the expected behavior?\n\nThe edit buffer should contain only the text I sent; transport/retry logs should never appear in the message body.\n\n### What do you see instead?\n\nThe stream-error/retry line is merged into the last user message and becomes editable (and can be saved) as if I had typed it.\n\n### Additional information\n\n<img width=\"2712\" height=\"1422\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e4b5fc5f-193b-4c56-aef3-7d00df81d667\" />",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3538,
          "state": "closed",
          "title": "refactor transcript view to handle HistoryCells",
          "url": "https://github.com/openai/codex/pull/3538",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves incorrect handling of model output, specifically the merging of error messages with user input, which falls under \"Incorrect model output handlers\" in LLM operation issues. It is related to behaviors unique to agent systems, such as handling streaming errors."
      }
    },
    {
      "number": 2761,
      "title": "Can't use codex when using api keys",
      "url": "https://github.com/openai/codex/issues/2761",
      "state": "closed",
      "created_at": "2025-08-27T10:28:40Z",
      "closed_at": "2025-08-28T11:25:31Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.25.0\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nMINGW64_NT-10.0-26100 3.5.7-463ebcdc.x86_64 x86_64 unknown\n\n### What steps can reproduce the bug?\n\n1. set the api key by export OPENAI_API_KEY=\"xxx\"\n2. codex\n3. select number 2\n4. repeat to remind me : To use Codex with the OpenAI API, set OPENAI_API_KEY in your environment\n5. control+c can entry the codex, but it returns 401\n6. \n\n<img width=\"1238\" height=\"452\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/18c62136-d8e5-426f-ad37-1fdbc0cd9d04\" />\n\n### What is the expected behavior?\n\nafter run codex, it should be working\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "duplicate"
      ],
      "linked_prs": [
        {
          "number": 2492,
          "state": "closed",
          "title": "chore(deps): bump reqwest from 0.12.22 to 0.12.23 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2492",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM provider integration, specifically related to API key usage and authentication, which aligns with model access misconfiguration under LLM operation issues in agent systems."
      }
    },
    {
      "number": 2825,
      "title": "Context window exceeded despite context left",
      "url": "https://github.com/openai/codex/issues/2825",
      "state": "closed",
      "created_at": "2025-08-28T12:01:16Z",
      "closed_at": "2025-09-04T23:34:16Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.25.0\n\n### Which model were you using?\n\ngpt-5 high\n\n### What platform is your computer?\n\nLinux 6.16.3-arch1-1 x86_64 unknown\n\n### What steps can reproduce the bug?\n\n```\ncodex\nImplemented likes for games and reactions for files, plus wired basic UI for game likes. Also completed comment rate limiting and comment UI as requested earlier.\n\nWhat’s new\n\nBackend\n\n- Ent schemas:\n    - GameLike: user_id + Game edge with unique (user_id, game) index.\n    - FileReaction: user_id, value(-1/+1) + File edge with unique (user_id, file).\n    - Edges on Game → likes and File → reactions (Relay connections).\n    - Comment schema already added (with sanitization).\n- GraphQL API (api/custom.graphqls):\n    - Mutations:\n    - rateGame(gameId, like: Boolean!): Game!\n      - like=true creates the like; like=false removes it.\n    - reactToFile(fileId, value: Int!): File!\n      - value ∈ {-1, 1} sets reaction; 0 clears existing reaction.\n    - addComment/editComment/deleteComment (from earlier) are in place.\n- Query tweaks retained:\n    - searchGames with sort; FTS-backed opensearchSuggestions.\n- Resolvers (graph/custom.resolvers.go):\n    - Implemented rateGame and reactToFile with auth checks and upsert/toggle logic.\n    - addComment, editComment, deleteComment implemented previously; added per-minute comment rate limit via AllowComment(user, ip).\n\nRate limits\n\n- internal/rate:\n    - Added per-minute buckets and AllowComment(userID, ip) with env tunables:\n    - RATE_LIMIT_ANON_COMMENTS_PER_MIN (default 5)\n    - RATE_LIMIT_USER_COMMENTS_PER_MIN (default 15)\n\nFrontend\n\n- GameDetail:\n    - Displays like count (Game.likes totalCount).\n    - Like/Unlike buttons (simple reload after mutation).\n    - Comments list and add form (sanitized display).\n- Search:\n    - Filters (platform/year/format), sort selector, load-more append.\n    - Header search input navigates to /search.\n- Removed shadcn/ui previously; all buttons now standard Tailwind-styled.\n\nChangelog\n\n- Added entries for Comments (schema/CRUD/rate limits/UI) and earlier search/observability items.\n\nWhat’s left for likes/reactions (nice-to-haves)\n\n- File reactions UI: add thumbs up/down in file rows; query likes/dislikes counts via reactions(where:{value:1/-1}). We can wire that next.\n- Show like state per user on GameDetail (needs user-like query; currently only totalCount).\n- Optimistic updates or local state to avoid full reloads after mutations.\n\nOpen issues remaining\n\n- #43 Moderation route polish\n- #40 FE: Game page UGC (we’ve started—comments/likes; reactions UI pending)\n- #41/#29/#28 Collections/Favorites\n- #30 Video links\n- #21/#22/#23 Descriptions sanitize/version/history\n- #37 Feature flags\n- #38/#39 QA tests\n- #20 Tracker\n- #31 (FTS index) functionally complete via #58; can be closed as done\n\nIf you want, I can:\n\n- Add file reactions UI (thumbs up/down) and display counts on GameDetail.\n- Add a user-like indicator for the game and toggle the button state accordingly.\n- Close #31 and move onto collections/favorites (#28/#29/#41).\n\nuser\nyes\n\n>_\n  ✓ 📖 GameDetail.tsx\n⚠  stream error: stream disconnected before completion: Your input exceeds the context window of this model. Please adjust your input and try again.; retrying 1/5 in 191ms…\n\n⚠  stream error: stream disconnected before completion: Your input exceeds the context window of this model. Please adjust your input and try again.; retrying 2/5 in 420ms…\n\n⚠  stream error: stream disconnected before completion: Your input exceeds the context window of this model. Please adjust your input and try again.; retrying 3/5 in 746ms…\n\n⚠  stream error: stream disconnected before completion: Your input exceeds the context window of this model. Please adjust your input and try again.; retrying 4/5 in 1.505s…\n\n⚠  stream error: stream disconnected before completion: Your input exceeds the context window of this model. Please adjust your input and try again.; retrying 5/5 in 3.516s…\n\n\n🖐  stream disconnected before completion: Your input exceeds the context window of this model. Please adjust your input and try again.\n\n▌ Explain this codebase                                                                                                                                                                    \n ⏎ send   Ctrl+J newline   Ctrl+T transcript   Ctrl+C quit   1883319 tokens used   32% context left\n```\n\n\n### What is the expected behavior?\n\nwith 32% context left, no issues\n\n### What do you see instead?\n\nsee above\n\n### Additional information\n\nmaybe it's just task context\n\n---\n\n**Note to me too/same here commenters, it would probably help if you included your codex-cli version**",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3190,
          "state": "closed",
          "title": "Correctly calculate remaining context size",
          "url": "https://github.com/openai/codex/pull/3190",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves context length issues, where the input exceeds the model's context window despite having context left, which is a typical LLM operation issue related to agent systems."
      }
    },
    {
      "number": 2828,
      "title": "[Windows]Codex IDE full access still requests approval",
      "url": "https://github.com/openai/codex/issues/2828",
      "state": "closed",
      "created_at": "2025-08-28T13:52:45Z",
      "closed_at": "2025-09-03T16:45:27Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.25.0\n\n### Which model were you using?\n\ngpt-5 high reasoning\n\n### What platform is your computer?\n\nMicrosoft Windows NT 10.0.19045.0 x64\n\n### What steps can reproduce the bug?\n\n<img width=\"408\" height=\"567\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a4ccff76-9b3f-4f2f-924e-cfa85fab935c\" />\n\nEven with agent (full access) granted, the codex extension on vscode for windows still requires approvals. This is probably related to issue #2350 #2710 #2179 \n\n### What is the expected behavior?\n\nApprovals should never be asked for when full access is requested. \n\n### What do you see instead?\n\nConstantly getting asked for approvals\n\n### Additional information\n\nThis is a pretty blocking issue for Windows that hasn't been addressed. Any workaround would be super helpful that doesn't involve directly patching the rust source code",
      "labels": [
        "bug",
        "windows-os",
        "extension"
      ],
      "linked_prs": [
        {
          "number": 2988,
          "state": "closed",
          "title": "Auto-approve DangerFullAccess patches on non-sandboxed platforms",
          "url": "https://github.com/openai/codex/pull/2988",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves agent workflow anomalies where the Codex IDE's full access feature is not functioning as expected, leading to repeated approval requests. This relates to agent-specific behavior and integration with LLM-based systems, aligning with the definition of an agent issue."
      }
    },
    {
      "number": 2935,
      "title": "History of local Chats in VS Code are not saved",
      "url": "https://github.com/openai/codex/issues/2935",
      "state": "closed",
      "created_at": "2025-08-30T08:12:35Z",
      "closed_at": "2025-09-03T17:43:20Z",
      "body": "### What version of Codex is running?\n\ncodex --0.5.0\n\n### Which model were you using?\n\n5\n\n### What platform is your computer?\n\nMicrosoft x64\n\n### What steps can reproduce the bug?\n\nStart a local chat in VS Code (insider) with Codex IDE\nRestart VS Code\nNo history of the local chats\n\n### What is the expected behavior?\n\nTo have history the local chats\n\n### What do you see instead?\n\nnothing.\nOnly past cloud history.\n\n<img width=\"588\" height=\"611\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/960a7c8c-a088-4b78-8ce2-52cef961589c\" />\n\n<img width=\"601\" height=\"614\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6efa0afe-f3be-4e1a-b64f-6a6c8bd3a35c\" />\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4031,
          "state": "closed",
          "title": "chore(deps): bump serde from 1.0.224 to 1.0.226 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/4031",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves memory-related symptoms, specifically the failure to save the history of local chats in an LLM-based agent system, which aligns with the definition of memory content errors in agent issues."
      }
    },
    {
      "number": 2969,
      "title": "Full auto access or --yolo still prompts for user approval",
      "url": "https://github.com/openai/codex/issues/2969",
      "state": "closed",
      "created_at": "2025-08-31T06:06:25Z",
      "closed_at": "2025-09-03T16:45:21Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.27.0\n\n### Which model were you using?\n\ngpt-5 medium/high\n\n### What platform is your computer?\n\nWin-x64\n\n### What steps can reproduce the bug?\n\nBoth full auto and --yolo are not being recognized by codex. Tried config.toml revisions to no avail.\n\n### What is the expected behavior?\n\nShould not prompt user for approval.\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2988,
          "state": "closed",
          "title": "Auto-approve DangerFullAccess patches on non-sandboxed platforms",
          "url": "https://github.com/openai/codex/pull/2988",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves agent workflow anomalies where the expected behavior (automatic execution without user prompts) is not occurring, indicating a potential problem in the agent orchestration or configuration."
      }
    },
    {
      "number": 2986,
      "title": "Stop using abbreviations",
      "url": "https://github.com/openai/codex/issues/2986",
      "state": "closed",
      "created_at": "2025-08-31T11:12:17Z",
      "closed_at": "2025-09-03T00:43:25Z",
      "body": "### What feature would you like to see?\n\nThe GPT-5 model is consistently using abbreviations in code, which makes the code unreadable. Please instruct it in the default prompt not to do this - it's a very bad (and annoying) coding practice.\n\n### Are you interested in implementing this feature?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 4031,
          "state": "closed",
          "title": "chore(deps): bump serde from 1.0.224 to 1.0.226 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/4031",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt management problems, as it requests changes to the default prompt to alter the behavior of the LLM (GPT-5 model) in generating code without abbreviations. This aligns with prompt-related issues in agent systems."
      }
    },
    {
      "number": 2995,
      "title": "Enter newline in prompt with shift+enter",
      "url": "https://github.com/openai/codex/issues/2995",
      "state": "closed",
      "created_at": "2025-08-31T18:28:19Z",
      "closed_at": "2025-09-03T17:06:46Z",
      "body": "### What feature would you like to see?\n\nCan we also support shift+enter when entering newline in prompt like competition has? Ctrl+j is kinda wtf\n\n### Are you interested in implementing this feature?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 1,
          "state": "closed",
          "title": "update summary to auto",
          "url": "https://github.com/openai/codex/pull/1",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt management, specifically requesting a feature to modify how newlines are entered in prompts, which aligns with prompt-related issues in agent systems."
      }
    },
    {
      "number": 3108,
      "title": "Codex + API key: document key permissions required to use Codex",
      "url": "https://github.com/openai/codex/issues/3108",
      "state": "closed",
      "created_at": "2025-09-03T14:04:42Z",
      "closed_at": "2025-09-03T16:44:17Z",
      "body": "### What is the type of issue?\n\n_No response_\n\n### What is the issue?\n\nCurrently the Codex documentation only states to export the OPENAI_API_KEY variable to use it with API key. It doesn't say anything if the key could be restricted (for example Read-Only).\n\nIf Codex requires specific set of permissions, perhaps you should add an option to create api key with type codex so you could manage internally what permissions codex need and keep it simple for people.\n\n\n### Where did you find it?\n\n_No response_",
      "labels": [],
      "linked_prs": [
        {
          "number": 3112,
          "state": "closed",
          "title": "Update guidance on API key permissions",
          "url": "https://github.com/openai/codex/pull/3112",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The issue explicitly references an LLM provider (Codex) and concerns API key permissions, which relates to model access misconfiguration, a sub-category of LLM operation issues."
      }
    },
    {
      "number": 3126,
      "title": "Implement CTRL + L or similar commands to discard a prompt",
      "url": "https://github.com/openai/codex/issues/3126",
      "state": "closed",
      "created_at": "2025-09-03T19:46:40Z",
      "closed_at": "2025-09-08T03:21:54Z",
      "body": "### What feature would you like to see?\n\nCurrently if i have typed a long prompt and i want to cancel it, either i have to delete it manually or quit the process and start again. if i have had a long conversation closing the process leads to losing context. \n\n### Are you interested in implementing this feature?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "enhancement"
      ],
      "linked_prs": [
        {
          "number": 3285,
          "state": "closed",
          "title": "Clear non-empty prompts with ctrl + c",
          "url": "https://github.com/openai/codex/pull/3285",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves prompt management, specifically the ability to discard a prompt without losing context, which is related to prompt-related issues in agent systems."
      }
    },
    {
      "number": 3196,
      "title": "MCP HTTP/SSE (Rube/Composio) fails to start with 'request timed out' on macOS (Codex 0.29.0)",
      "url": "https://github.com/openai/codex/issues/3196",
      "state": "closed",
      "created_at": "2025-09-05T01:11:00Z",
      "closed_at": "2025-09-09T17:40:40Z",
      "body": "Title: MCP HTTP/SSE servers (Rube/Composio) fail to start with \"request timed out\" in Codex CLI on macOS\n\nSummary\n- Attempting to use the Rube (Composio) MCP hub via its MCP URL `https://rube.app/mcp` with Codex CLI.\n- Direct `transport = \"http\"` + `url = …` in `~/.codex/config.toml` is rejected (schema expects stdio `command`).\n- Implemented stdio→HTTP/SSE proxy (first Deno, then Node 20) to bridge Codex to Rube. Codex still reports timeouts when starting the MCP client.\n- Even after providing the signed token from Rube (Authorization or X-API-Key), Codex shows: `MCP client for 'rube' failed to start: request timed out`.\n\nSteps to Reproduce\n1) Add an MCP entry (stdio) that launches a small proxy which forwards to `https://rube.app/mcp` over Streamable HTTP with SSE fallback.\n\n```\n[mcp_servers.rube]\ncommand = \"/Users/danialhasan/.nvm/versions/node/v20.19.0/bin/node\"\nargs = [\n  \"/Users/danialhasan/Desktop/dev.nosync/scripts/rube-proxy-node/index.mjs\"\n]\n# Token redacted; header can be Authorization or X-API-Key depending on provider docs\nenv = { RUBE_URL = \"https://rube.app/mcp\", RUBE_TOKEN = \"<redacted>\", RUBE_AUTH_HEADER = \"Authorization\" }\n```\n\n2) Restart Codex CLI and open a session.\n3) Observe error in TUI: `🖐 Failed to create MCP connection manager: request timed out` (and/or `MCP client for 'rube' failed to start: request timed out`).\n4) Proxy stderr with invalid token shows 401 from SSE; with token provided, Codex still times out at startup.\n\nExpected\n- Codex should support HTTP/Streamable HTTP/SSE MCP servers natively (e.g., `transport = \"http\"` with `url` and headers), or at least not time out when a stdio proxy is used.\n- On auth/network errors from the remote MCP server, surface the HTTP status/message instead of a generic startup timeout.\n\nActual\n- Codex fails to initialize the MCP connection with a generic timeout.\n- No actionable error details are surfaced in the TUI; proxy logs show SSE/HTTP behavior but Codex reports only a timeout.\n\nEnvironment\n- macOS 15.2 (arm64)\n- Codex CLI 0.29.0\n- Node.js v20.19.0 for stdio proxy (also tried Deno 2.4.4)\n- Deno and Node proxies both attempted; Node 20 used to avoid older Node fetch/stream incompatibilities\n\nAdditional Notes / Attempts\n- Direct TOML with `transport = \"http\"` + `url` was rejected by Codex config parser (requires `[mcp_servers.<name>]` with `command`).\n- Deno-based stdio proxy worked functionally but still resulted in `request timed out` from Codex.\n- Node-based proxy (using `@modelcontextprotocol/sdk` 1.17.5) connects in background; still see Codex timeout on client start with valid token and header.\n\nRelated Issues\n- #2129 Feature Request: Native SSE transport support for MCP servers\n- #2320 SSE based MCP servers are non-configurable\n- #2550 feat: enable Streamable HTTP MCP servers & lazy loading of tools\n- #2555 Windows 11: MCP server (Context7) fails with “request timed out”\n- #3182 feat(mcp): per-server timeout and capture server stdout/stderr\n- #2346 Make MCP Request timeout configurable\n\nRequest\n- Add native support for HTTP/Streamable HTTP/SSE MCP servers in `~/.codex/config.toml` (e.g., `transport = \"http\"`, `url`, and `headers`).\n- Improve error propagation so Codex surfaces HTTP status (401/403/405) and response body from remote MCP servers on startup.\n- Document recommended auth header handling for HTTP MCP (Authorization vs X-API-Key) with examples.\n- Consider a per-server configurable connect timeout and retry policy.\n\nHappy to provide a minimal proxy repo or more logs if helpful.\n",
      "labels": [
        "bug",
        "mcp"
      ],
      "linked_prs": [
        {
          "number": 3243,
          "state": "closed",
          "title": "fix: improve MCP server initialization error handling #3196 #2346 #2555",
          "url": "https://github.com/openai/codex/pull/3243",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves tool invocation and configuration errors related to the Codex CLI's inability to connect to the MCP server using HTTP/SSE, which are components unique to agent systems. It also mentions authentication issues, which align with LLM provider integration concerns."
      }
    },
    {
      "number": 3292,
      "title": "v0.30.0: Responses “diff/edit previous” flows 400 with Azure v1 — client references rs_* items but nothing is stored",
      "url": "https://github.com/openai/codex/issues/3292",
      "state": "closed",
      "created_at": "2025-09-08T02:41:53Z",
      "closed_at": "2025-09-09T21:47:07Z",
      "body": "### What version of Codex is running?\n\n.30.0\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nMacOS\n\n### What steps can reproduce the bug?\n\n```\nmodel_provider = \"azure\"\nmodel = \"gpt5-deployment\"\nwire_api = \"responses\"\n# disable_response_storage = false  # present in config.toml\n[model_providers.azure]\nbase_url = \"https://<resource>.openai.azure.com/openai/v1/\"\nenv_key = \"AZURE_OPENAI_API_KEY\"\n\n```\ncodex (from a trusted project dir).\n\t2.\t/new, send a simple prompt (“hello”) → works.\n\t3.\tUse a UI action that modifies or diffs the previous assistant message (e.g., “Tell the model what to do diff”).\n\t4.\tObserve request fails with 400 and this payload/diagnostic:\n```\n\nBad Request 400\n{\n  \"error\": {\n    \"message\": \"Item with id 'rs_XXXXXXXX' not found. Items are not persisted when `store` is set to false. Try again with `store` set to true, or remove this item from your input.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"input\",\n    \"code\": null\n  }\n}\n```\n\n### What is the expected behavior?\n\nExpected behavior\n\t•\tEither:\n\t1.\tCodex sets store: true automatically when it intends to reference prior items, or\n\t2.\tCodex avoids sending server item references in stateless mode (inline the necessary prior content into the new request), or\n\t3.\tProvide a user option/flag to enable server-side persistence for Responses (so “diff/edit” can work).\n\nActual behavior\n\t•\tCodex 0.30.0 appears to send requests that reference prior item ids while the server has no stored items, causing a hard 400 and breaking “diff/edit previous” UX.\n\nWorkarounds\n\t•\tAvoid “diff/edit previous”; copy the prior output (or code) into a new message and describe the changes.\n\t•\tUsing Codex ≤0.29.x (where storage behavior differs) also avoids the error, but I want 0.30.0 to work.\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "azure"
      ],
      "linked_prs": [
        {
          "number": 3390,
          "state": "closed",
          "title": "Do not send reasoning item IDs",
          "url": "https://github.com/openai/codex/pull/3390",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves memory-related symptoms, specifically the failure to store and reference previous interactions due to configuration settings, which aligns with memory initialization issues in agent systems."
      }
    },
    {
      "number": 3304,
      "title": "Even with Agent mode full accuses enabled, whenever an agent creates a file, a human must approve it each time.",
      "url": "https://github.com/openai/codex/issues/3304",
      "state": "closed",
      "created_at": "2025-09-08T09:28:05Z",
      "closed_at": "2025-09-08T13:07:12Z",
      "body": "### What version of the VS Code extension are you using?\n\n_No response_\n\n### Which IDE are you using?\n\nVS Code\n\n### What platform is your computer?\n\nwindows 11\n\n### What steps can reproduce the bug?\n\nEven with Agent mode full accuses enabled, whenever an agent creates a file, a human must approve it each time:\n\nEnable [Agent (Full Access)].\nAsk the agent to create files.\nThis requires human approval. When creating many files, it becomes extremely cumbersome.\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "extension"
      ],
      "linked_prs": [
        {
          "number": 3620,
          "state": "closed",
          "title": "chore(deps): bump tracing-subscriber from 0.3.19 to 0.3.20 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3620",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. It describes a workflow anomaly where the agent requires human approval for file creation despite being in full access mode, which is an abnormal agent workflow behavior."
      }
    },
    {
      "number": 3361,
      "title": "extension error starting converstaion",
      "url": "https://github.com/openai/codex/issues/3361",
      "state": "closed",
      "created_at": "2025-09-09T07:56:02Z",
      "closed_at": "2025-09-10T05:31:28Z",
      "body": "### What version of the VS Code extension are you using?\n\n1.103.2\n\n### Which IDE are you using?\n\nVS Code\n\n### What platform is your computer?\n\nWindows\n\n### What steps can reproduce the bug?\n\nI can not start chat with codex extension.\nNo matter text context size, it keeps repeating \n\"error starting convesation\" with red alert window pop up.\n\nHere's what I have tried.\n\n1. Change verbosity of thiniking miniaml to high : not working\n2. Change agent method : not working\n3 Restarted window : not working\n4. Reinstalled extension : not working\n\n\n### What is the expected behavior?\n\nIt should start thinking but I only see \"error starting conversation\"\n\n\n### What do you see instead?\n\n \"error starting conversation\"\n\n\n### Additional information\n\n_No response_",
      "labels": [
        "extension"
      ],
      "linked_prs": [
        {
          "number": 3620,
          "state": "closed",
          "title": "chore(deps): bump tracing-subscriber from 0.3.19 to 0.3.20 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3620",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves an agent system's workflow anomaly, specifically the inability to start a conversation with the Codex extension, which indicates a failure in agent orchestration or tool invocation."
      }
    },
    {
      "number": 3513,
      "title": "Missing `stream_options: { include_usage: true }` when using `Wire::Chat`",
      "url": "https://github.com/openai/codex/issues/3513",
      "state": "closed",
      "created_at": "2025-09-12T08:08:40Z",
      "closed_at": "2025-09-12T09:09:20Z",
      "body": "### What version of Codex is running?\n\nsource code on main branch\n\n### Which model were you using?\n\n_No response_\n\n### What platform is your computer?\n\n_No response_\n\n### What steps can reproduce the bug?\n\n## Description\n\nWhen Codex uses `Wire::Chat`, the request payload for the Chat Completions API is currently built like this:\n\n```rust\nlet tools_json = create_tools_json_for_chat_completions_api(&prompt.tools)?;\nlet payload = json!({\n    \"model\": model_family.slug,\n    \"messages\": messages,\n    \"stream\": true,\n    \"tools\": tools_json,\n});\n```\nHowever, it does not set the stream_options field with include_usage: true.\n\nAs a result, during a rollout, the tokenusage information is missing from the stream.\nThe JSONL logs show empty usage events:\n\n```json\n{\"timestamp\":\"2025-09-12T01:59:35.844Z\",\"type\":\"event_msg\",\"payload\":{\"type\":\"token_count\",\"info\":null}}\n```\n\n## Expected Behavior\nExample of correct streamed output:\n```json\n{\n  \"id\": \"chatcmpl-xxx\",\n  \"object\": \"chat.completion.chunk\",\n  \"usage\": {\n    \"prompt_tokens\": 50,\n    \"completion_tokens\": 100,\n    \"total_tokens\": 150\n  }\n}\n```\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 1,
          "state": "closed",
          "title": "update summary to auto",
          "url": "https://github.com/openai/codex/pull/1",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves missing token usage information due to the absence of `stream_options: { include_usage: true }` in the request payload for the Chat Completions API. This relates to LLM operation issues, specifically token usage misconfiguration, which is a component unique to agent systems."
      }
    },
    {
      "number": 4092,
      "title": "Not able to login with API key in Cursor",
      "url": "https://github.com/openai/codex/issues/4092",
      "state": "closed",
      "created_at": "2025-09-23T13:51:09Z",
      "closed_at": "2025-09-25T23:58:18Z",
      "body": "### What version of Codex is running?\n\n0.4.12\n\n### Cursor version:\nVersion: 1.6.45 (Universal)\nVSCode Version: 1.99.3\n\n### Which model were you using?\n\ngpt-5\n\n### What platform is your computer?\n\nDarwin 24.6.0 arm64 arm\n\n\n### What steps can reproduce the bug?\n\nI've installed Codex extension in cursor and tried to login with my OPENAI API key, but it gives the following error:\n\n<img width=\"373\" height=\"540\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/18b6efa5-59f3-49b2-8183-107f67718c66\" />\n\nThe api key is valid and it's working in other apps.\nCursor is updated to latest version.\n\n### What is the expected behavior?\n\nshould be able to login with a valid api key\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "extension"
      ],
      "linked_prs": [
        {
          "number": 4258,
          "state": "closed",
          "title": "Fixed login failure with API key in IDE extension when a `.codex` directory doesn't exist",
          "url": "https://github.com/openai/codex/pull/4258",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves a problem with logging in using an API key, which indicates a potential misconfiguration or authentication issue with the LLM provider, fitting the criteria for an agent issue related to model access misconfiguration."
      }
    },
    {
      "number": 4176,
      "title": "MCP tools silently excluded due to errors",
      "url": "https://github.com/openai/codex/issues/4176",
      "state": "closed",
      "created_at": "2025-09-24T17:12:33Z",
      "closed_at": "2025-10-02T17:05:52Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.40.0\n\n### Which model were you using?\n\ngpt-5-codex\n\n### What platform is your computer?\n\nDarwin 24.6.0 arm64 arm\n\n### What steps can reproduce the bug?\n\nSet up an MCP server, such as Atlassian or Grafana:\n```\n[mcp_servers.atlassian]\ncommand = \"npx\"\nargs = [\"-y\", \"mcp-remote\", \"https://mcp.atlassian.com/v1/sse\"]\n\n[mcp_servers.grafana]\ncommand = \"docker\"\nargs = [\"run\", \"--rm\", \"-i\", \"-e\", \"GRAFANA_URL\", \"-e\", \"GRAFANA_API_KEY\", \"mcp/grafana\", \"-t\", \"stdio\", \"-debug\"]\n\n[mcp_servers.grafana.env]\nGRAFANA_API_KEY = \"REDACTED\"\nGRAFANA_URL = \"REDACTED\"\n```\n\nNote that `/mcp` reports the `createCompassComponent`, `createJiraIssue`, `editJiraIssue`, and `transitionJiraIssue` tools as available from Atlassian, and `find_error_pattern_logs` and `find_slow_requests` from Grafana.\n\nRun `RUST_LOG=info codex exec \"Provide a raw list of all functions available to Codex.\"`\n\nSee the error messages output to STDERR.\n\n### What is the expected behavior?\n\nCorrect parsing of the responses, and tool availability.\n\n### What do you see instead?\n\n```\n2025-09-24T16:58:13.448202Z ERROR codex_core::openai_tools: Failed to convert \"atlassian__createCompassComponent\" MCP tool to OpenAI tool: Error(\"invalid type: map, expected a boolean\", line: 0, column: 0)\n2025-09-24T16:58:13.448367Z ERROR codex_core::openai_tools: Failed to convert \"atlassian__createJiraIssue\" MCP tool to OpenAI tool: Error(\"invalid type: map, expected a boolean\", line: 0, column: 0)\n2025-09-24T16:58:13.448392Z ERROR codex_core::openai_tools: Failed to convert \"atlassian__editJiraIssue\" MCP tool to OpenAI tool: Error(\"invalid type: map, expected a boolean\", line: 0, column: 0)\n2025-09-24T16:58:13.448950Z ERROR codex_core::openai_tools: Failed to convert \"atlassian__transitionJiraIssue\" MCP tool to OpenAI tool: Error(\"invalid type: map, expected a boolean\", line: 0, column: 0)\n```\n\n### Additional information\n\nThis is the JSON blob for the `createJiraIssue` tool:\n```\n{\n  \"name\": \"createJiraIssue\",\n  \"description\": \"Create a new Jira issue in a given project with a given issue type.\",\n  \"inputSchema\": {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"additionalProperties\": false,\n    \"properties\": {\n      \"additional_fields\": { \"additionalProperties\": {}, \"type\": \"object\" },\n      \"assignee_account_id\": {\n        \"description\": \"During issue creation, we can set an assignee for the new issue.\\n      The input must be an account id of a valid user in the given cloud id.\\n      There is a tool \\\"atlassianUserInfo\\\" to get the account id of the current user.\\n      There is a tool \\\"lookupJiraAccountId\\\" to get the account ids of the existing users in Jira based on the user's display name or email address.\",\n        \"type\": \"string\"\n      },\n      \"cloudId\": {\n        \"description\": \"Unique identifier for an Atlassian Cloud instance in the form of a UUID. Can also be a site URL or extracted from Atlassian URLs - for example, from https://yoursite.atlassian.net/wiki/.... If not working, use the 'getAccessibleAtlassianResources' tool to find accessible Cloud IDs.\",\n        \"type\": \"string\"\n      },\n      \"description\": { \"description\": \"The content of the issue's description in Markdown format.\", \"type\": \"string\" },\n      \"issueTypeName\": {\n        \"description\": \"A Jira issue type categorizes and  distinguishes different kinds of work being tracked within a project.\\n      It's a way to define what a specific piece of work represents.\\n      For example, in a Jira Software project, there are \\\"Epic\\\", \\\"Story\\\", \\\"Task\\\", \\\"Bug\\\" or \\\"Subtask\\\" issue types by default.\\n      Or in Jira Service Management, there are \\\"Change\\\", \\\"IT help\\\", \\\"Incident\\\", \\\"New feature\\\", \\\"Problem\\\", \\\"Service request\\\", \\\"Service request with approval\\\" or \\\"Support\\\" issue types by default.\\n      User can remove those default ones and/or define their own issue types as well.\\n      There is a tool \\\"getJiraProjectIssueTypesMetadata\\\" to get the available issue types in a given project.\",\n        \"type\": \"string\"\n      },\n      \"parent\": {\n        \"description\": \"The issue key or id of the parent issue for \\\"Subtask\\\" issue types.\",\n        \"type\": \"string\"\n      },\n      \"projectKey\": {\n        \"description\": \"A project key in Jira is a unique identifier (a string of letters, numbers and sometimes underscores) of a project.\\n      There is a tool \\\"getVisibleJiraProjects\\\" to look up which projects the user has create permission to create a new Jira issue.\",\n        \"type\": \"string\"\n      },\n      \"summary\": { \"type\": \"string\" }\n    },\n    \"required\": [\"cloudId\", \"projectKey\", \"issueTypeName\", \"summary\"],\n    \"type\": \"object\"\n  },\n  \"annotations\": {\n    \"title\": \"Create Jira issue\",\n    \"readOnlyHint\": false,\n    \"destructiveHint\": false,\n    \"idempotentHint\": false,\n    \"openWorldHint\": false\n  }\n}\n```\n\nI believe the issue is that [this line](https://github.com/openai/codex/blob/main/codex-rs/core/src/openai_tools.rs#L157) expects `additionalProperties` to necessarily be a `bool`, but `additionalProperties` _can_ be another JSON Schema object ([reference](https://json-schema.org/understanding-json-schema/reference/object#additionalproperties)). In the above response, `.inputSchema.properties.additional_fields.additionalProperties` is such an object.",
      "labels": [
        "bug",
        "mcp"
      ],
      "linked_prs": [
        {
          "number": 4454,
          "state": "closed",
          "title": "fix: handle JSON Schema in additionalProperties for MCP tools",
          "url": "https://github.com/openai/codex/pull/4454",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves tool invocation errors due to incorrect parsing logic for converting MCP tools to OpenAI tools, which aligns with the \"Tool implementation errors\" sub-category under \"Tool-related issues\"."
      }
    },
    {
      "number": 4181,
      "title": "BUG: --output-schema limited to \"gpt-5\" as guard is too narrow on model_family.family",
      "url": "https://github.com/openai/codex/issues/4181",
      "state": "closed",
      "created_at": "2025-09-24T18:07:58Z",
      "closed_at": "2025-09-24T22:00:07Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.41.0\n\n### Which model were you using?\n\ngpt-5-codex\n\n### What platform is your computer?\n\nLinux 6.8.0-83-generic x86_64 x86_64\n\n### What steps can reproduce the bug?\n\n1. Create a JSON Schema file (e.g. schema.json) describing the expected final answer.\n2. Run codex exec --output-schema schema.json -m gpt-5-codex 'tell me a joke'.\n3. Observe via logging or a mock server that the outbound payload’s text field is null/missing; the response is unstructured text instead of JSON.\n4. Repeat with -m gpt-5; the schema is honored and the model returns JSON.\n\n### What is the expected behavior?\n\nCodex models also support the `--output-schema` flag.\n\n### What do you see instead?\n\n  - The new --output-schema feature attaches a JSON Schema via the OpenAI Responses text.format field, but the client only includes that block when model_family.family == \"gpt-5\" (core/src/client.rs:187).\n  - For any Codex-branded model (slugs starting with gpt-5-codex or codex-), find_family_for_model assigns family to the slug itself (core/src/model_family.rs:70-79), so the equality check never passes.\n  - As a result, running codex exec --output-schema schema.json -m gpt-5-codex … (or any other Codex slug) sends a request without text.format, the schema is dropped, and the model produces unconstrained free-form output. This is already in the 0.41.0 release.\n\n### Additional information\n\n**Scope / Impact**\n\n- All Codex-family models using the new --output-schema path ignore the schema, so the flagship use case of constrained Codex output does not work in 0.41.0.\n- Feature works only for plain GPT‑5 slugs, so parity across model presets is broken.\n\n**Suspected Fix**\n\n- Broaden the guard in core/src/client.rs to include model families whose slug starts with gpt-5-codex (and likely other Codex prefixes) before calling create_text_param_for_request, rather than relying on an exact \"gpt-5\" match.",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4195,
          "state": "closed",
          "title": "Send text parameter for non-gpt-5 models",
          "url": "https://github.com/openai/codex/pull/4195",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves LLM operation issues, specifically related to model access misconfiguration and incorrect model output handlers, as it concerns the handling of model families and output schema in an LLM-based system."
      }
    },
    {
      "number": 4321,
      "title": "gpt-5-codex-medium shows reasoning none",
      "url": "https://github.com/openai/codex/issues/4321",
      "state": "closed",
      "created_at": "2025-09-26T21:57:59Z",
      "closed_at": "2025-09-27T05:07:28Z",
      "body": "### What version of Codex is running?\n\ncodex-cli 0.42.0\n\n### Which model were you using?\n\ngpt-5-codex-medium\n\n### What platform is your computer?\n\nDarwin 25.0.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n1. /models -> chose gpt-5-codex-medium\n\n2. /status -> shows \"reasoning none\"\n\n### What is the expected behavior?\n\nstatus should show \"reasoning medium\"\n\n### What do you see instead?\n\n\"reasoning none\"\n\n### Additional information\n\n<img width=\"679\" height=\"705\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/71ed592a-a4be-4917-aeaf-09a033b84e4e\" />",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 4335,
          "state": "closed",
          "title": "fix: set gpt-5-codex medium preset reasoning",
          "url": "https://github.com/openai/codex/pull/4335",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves the usage of an LLM model (gpt-5-codex-medium) and concerns unexpected model behavior (\"reasoning none\" instead of \"reasoning medium\"), which aligns with the criteria for LLM operation issues in agent systems."
      }
    },
    {
      "number": 4480,
      "title": "[BUG] gpt-5-codex model returns 404 error when using v1/chat/completions endpoint",
      "url": "https://github.com/openai/codex/issues/4480",
      "state": "closed",
      "created_at": "2025-09-30T01:34:19Z",
      "closed_at": "2025-09-30T01:48:04Z",
      "body": "### What version of Codex is running?\n\nCodex CLI v0.42.0\n\n### Which model were you using?\n\ngpt-5-codex\n\n### What platform is your computer?\n\nDarwin 24.5.0 arm64 arm\n\n### What steps can reproduce the bug?\n\n1. Run `codex` command\n2. Use API key authentication \n3. Change model to `gpt-5-codex` using `/model` command\n4. Send any message (e.g., \"hello\")\n5. Observe the 404 error with retry attempts\n\n### What is the expected behavior?\n\nThe gpt-5-codex model should work properly with the Codex CLI without returning 404 errors. The model should respond to user queries successfully.\n\n### What do you see instead?\n\n\n⚠️ stream error: unexpected status 404 Not Found: {\n  \"error\": {\n    \"message\": \"This model is only supported in v1/responses and not in v1/chat/completions.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"model\",\n    \"code\": null\n  }\n}; retrying 1/5 in 183ms…\n\n⚠️ stream error: unexpected status 404 Not Found: {\n  \"error\": {\n    \"message\": \"This model is only supported in v1/responses and not in v1/chat/completions.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": \"model\",\n    \"code\": null\n  }\n}; retrying 2/5 in 380ms…\n\n### Additional information\n\n\n\nThe error message clearly indicates that the gpt-5-codex model is only supported in the v1/responses endpoint, not in v1/chat/completions. This suggests that Codex CLI is using the wrong API endpoint for this specific model.\n\nThe system automatically retries the request (up to 5 times) but continues to fail with the same 404 error. This appears to be a configuration issue where Codex CLI needs to use the correct API endpoint for the gpt-5-codex model.\n\n**Environment:**\n- macOS 24.5.0 (Sequoia)\n- Codex CLI v0.42.0\n- Model: gpt-5-codex\n- Working directory: ~/IdeaProjects/security-portal\n",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves incorrect API endpoint usage for the gpt-5-codex model, which is tied to LLM provider integration and configuration, specifically involving model access misconfiguration and incompatible parameters to LLM providers."
      }
    },
    {
      "number": 4552,
      "title": "I have to approve every single operation in VS Code extension",
      "url": "https://github.com/openai/codex/issues/4552",
      "state": "closed",
      "created_at": "2025-10-01T14:02:13Z",
      "closed_at": "2025-10-06T16:51:15Z",
      "body": "### What version of Codex is running?\n\n0.4.15\n\n### Which model were you using?\n\ngpt-5-codex medium\n\n### What platform is your computer?\n\n_No response_\n\n### What steps can reproduce the bug?\n\nWhen installed Codex 0.4.15 VS Code plugin it requires me to accept every single PowerShell command that he executes. My settings are Local/Agent/gpt-5-codex medium. I can't (and don't want to) switch to full access, but from my understanding Codex should be able to run commands on my current repo without asking me to approve every single of it. Is this intended or is it a bug? \n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "windows-os"
      ],
      "linked_prs": [
        {
          "number": 2406,
          "state": "closed",
          "title": "chore(deps): bump libc from 0.2.174 to 0.2.175 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/2406",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves agent workflow anomalies, specifically the need to approve every operation in the VS Code extension, which is related to the agent's orchestration and execution behavior."
      }
    },
    {
      "number": 4743,
      "title": "Incorrect context usage display in status bar",
      "url": "https://github.com/openai/codex/issues/4743",
      "state": "closed",
      "created_at": "2025-10-04T19:42:45Z",
      "closed_at": "2025-10-06T17:07:32Z",
      "body": "### What version of the VS Code extension are you using?\n\nVersion 0.5.17\n\n### Which IDE are you using?\n\nVisual Studio Code – Insiders 1.105.0-insider\n\n### What platform is your computer?\n\nMicrosoft Windows NT 10.0.26120.0 x64\n\n### What steps can reproduce the bug?\n\nOpen a Codex chat/session (gpt-5-codex).\nPaste a long prompt to increase context usage.\nCheck the status bar/tooltip that shows context counts and percent\n\n### What is the expected behavior?\n\nPercentage should be within 0–100% and keep its decimal (e.g., 74.46%, 27.76%)\n\nNumerator/denominator should be formatted consistently:\n- either both scaled with k (e.g., 20.3k / 272k tokens)\n- both raw with grouping (e.g., 20,293 / 272,000 tokens)\n\nNo mixing of thousands grouping with a k suffix\n\n### What do you see instead?\n\nStatus bar shows inflated percentages like 7461% and 2762% where the real values are ~74.46% and 27.76%\nNumerator renders as 20,293k (reads as “20,293 thousands” ≈ 20.293M) though it means ~20.3k\n\nScreenshots:\n<img width=\"836\" height=\"222\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b7b42edb-2ea1-444f-bdf2-2f5a3b17a703\" />\n<img width=\"832\" height=\"223\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/51958666-118a-40dd-81b6-7d25646c715d\" />\n\n### Additional information\n\nObserved progression (from a single session, same 272k limit):\n12k / 272k tokens → 4%\n24k / 272k tokens → 9%\n209k / 272k tokens → 77%\n251k / 272k tokens → 92%\n320k / 272k tokens → 118% ← exceeds 100%\n344k / 272k tokens → 127% ← exceeds 100%\n\n<img width=\"828\" height=\"224\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5f674a54-2bee-4304-ae70-363c5cf87380\" />\n<img width=\"836\" height=\"229\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b42b3883-828b-43b1-b2fa-25f66609ecb0\" />\n<img width=\"835\" height=\"294\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/da438afa-fff4-428a-aaee-6c5a7a049eb6\" />\n<img width=\"824\" height=\"275\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4bb23499-4cb8-4936-bef7-cf67b2537dc1\" />\n<img width=\"850\" height=\"228\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b82c0031-79c6-432a-af51-a22c73d676ba\" />",
      "labels": [
        "bug",
        "extension"
      ],
      "linked_prs": [
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue involves context length miscalculation, which is a sub-category of LLM operation issues. It relates to the incorrect display of context usage percentages in an LLM-based agent system, indicating a problem with handling context limits."
      }
    },
    {
      "number": 4746,
      "title": "VS Code Codex Agent burns insane amount of tokens to run two git commands during a single commit (CLI v0.44, gpt-5-codex high, please reset tokens ;_; usage is way higher than usual)",
      "url": "https://github.com/openai/codex/issues/4746",
      "state": "closed",
      "created_at": "2025-10-04T21:39:54Z",
      "closed_at": "2025-10-05T05:18:15Z",
      "body": "### What version of Codex is running?\n\n0.44\n\n### Which model were you using?\n\ngpt-5-codex (high)\n\n### What platform is your computer?\n\nLinux 6.14.0-32-generic x86_64 x86_64\n\n### What steps can reproduce the bug?\n\nOpen a normal Git repo in VS Code (commit touched only a few test files).\n\nOpen Codex Agent panel. Settings: model gpt-5-codex, reasoning high.\n\nAsk the agent to commit staged changes (e.g., “commit: consolidate gait resolver and canonical columns tests”).\n\nAgent runs only two trivial commands:\n\ngit status -sb\n\ngit commit -m '<short message>'\n\nWatch the Codex token counter in the status bubble.\n\nObserved run: token meter jumped from 5,495k to 5,661k while only those two git commands executed.\n\n### What is the expected behavior?\n\nToken usage for a simple commit (status + commit) should remain in the low thousands at most. Utility/git tasks should not trigger repo-wide context pulls or repeated mega-prompts. It shouldnt be using 150K tokens????? I notice my weekly usage is wayyy higher than it ever has been before and im still doing the same amount of coding with codex. \n\n### What do you see instead?\n\nToken usage massively jumps for a commit that only stages/tests and runs git commit.\nUI shows 5,495k → 5,661k tokens during two commands. (2020% → 2112%, also insanely high %)\n\n\n### Additional information\n\npls reset token usage, vs code IDE extension is sky rocketing my weekly usage %, and i just paid another month of PRO LOL. \n\n",
      "labels": [
        "bug",
        "extension"
      ],
      "linked_prs": [
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes, this is an agent issue. The problem involves excessive token usage by the Codex Agent during simple git operations, indicating a potential token usage misconfiguration or prompt management issue, both of which are related to LLM operation issues in agent systems."
      }
    },
    {
      "number": 4763,
      "title": "Context Usage in status bar shows global/last-updated value instead of the active chat",
      "url": "https://github.com/openai/codex/issues/4763",
      "state": "closed",
      "created_at": "2025-10-05T10:10:56Z",
      "closed_at": "2025-10-08T23:23:37Z",
      "body": "### What version of the VS Code extension are you using?\n\nVersion 0.5.17\n\n### Which IDE are you using?\n\nVisual Studio Code – Insiders 1.105.0-insider\n\n### What platform is your computer?\n\nMicrosoft Windows NT 10.0.26120.0 x64\n\n### What steps can reproduce the bug?\n\n1. Create several Codex chats: A, B, C, D, E (each has its own task)\n2. Stay focused on chat A (or even the home page)\n3. Trigger work in other chats (B/C run background actions)\n4. Watch the Context Usage meter in the bottom-right status bar\n\n### What is the expected behavior?\n\nActual behavior\n- The meter updates with whoever chat reports last\n- While viewing A, the number fluctuates as B/C/D/E progress, so you can't read A real context at that moment\n\nExpected behavior\n- When a chat is focused, the status-bar meter should only reflect that chat’s usage\n\nArtifacts:\nVideo:\nhttps://github.com/user-attachments/assets/58f68521-0372-42fc-9fbf-273dd5edc914\n\n### What do you see instead?\n\nOn the home page, either:\n- a) show nothing\n- b) show a scoped value (\"selected chat\")\n- c) show a compact hint for the chat with the highest fill ratio (Max: 75% — \"Hello, describe…\") or (Max elsewhere: 92%). Clicking the status item opens that chat\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug",
        "extension"
      ],
      "linked_prs": [
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. This issue involves workflow anomalies related to context usage display in a multi-chat environment, which is part of agent orchestration. It highlights a problem with how context usage is reported across different chat sessions, indicating an agent-specific behavior."
      }
    },
    {
      "number": 4798,
      "title": "Error from Pro User account: `To use Codex with your ChatGPT plan, upgrade to Plus: https://openai.com/chatgpt/pricing`",
      "url": "https://github.com/openai/codex/issues/4798",
      "state": "closed",
      "created_at": "2025-10-06T03:21:43Z",
      "closed_at": "2025-10-07T03:46:36Z",
      "body": "### What version of Codex is running?\n\n0.44.0\n\n### Which model were you using?\n\n_No response_\n\n### What platform is your computer?\n\nUbuntu24\n\n### What steps can reproduce the bug?\n\nPro user with the following error in codex CLI:\n\n```\nTo use Codex with your ChatGPT plan, upgrade to Plus: https://openai.com/chatgpt/pricing.\n```\n\nSame error in cursor codex extension/sidebar\n\n\n### What is the expected behavior?\n\n_No response_\n\n### What do you see instead?\n\n_No response_\n\n### Additional information\n\n_No response_",
      "labels": [
        "bug"
      ],
      "linked_prs": [
        {
          "number": 3295,
          "state": "closed",
          "title": "chore(deps): bump tree-sitter from 0.25.8 to 0.25.9 in /codex-rs",
          "url": "https://github.com/openai/codex/pull/3295",
          "merged": true,
          "base_branch": "main"
        }
      ],
      "ai_judgment": {
        "is_agent_issue": true,
        "response": "Yes. The issue references an LLM provider and involves a model access misconfiguration, as it pertains to the usage of Codex with a specific ChatGPT plan, indicating an agent issue related to LLM operation."
      }
    }
  ]
}